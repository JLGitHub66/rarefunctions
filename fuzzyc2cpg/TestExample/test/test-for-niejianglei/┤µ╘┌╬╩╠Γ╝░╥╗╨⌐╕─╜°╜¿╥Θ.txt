1、输出数字的问题已经解决了，但部分文件还是会输出带有函数指针的引用，例如gss_mech_switch.c文件会输出(*context_handle)->mech_type->gm_ops\n\t\t\t->gss_delete_sec_context，locks.c文件会输出*cfl->fl_lmops->lm_lock_expirable。

如果这个问题不是一个通用的问题，可能对应某个文件需要进行特殊的语法处理，那可以采用简单点的处理方式，比如对输出的函数名进行一个字符串匹配，如果输出中带有'*','->',']','/'等字符（文件夹中还有个文件rareFuncCounts.txt是我根据你的输出序列对所有的函数调用次数进行记录的结果，你可以对照着结果中的内容进行字符串匹配，大概是前261个都是不需要的）

2、另外，还是之前说的宏定义的问题，就是如果一个函数它是被宏定义（如果在bootlin搜索该函数对应Defined as a macro，例如ACPI_DEBUG_OBJECT等）的，而不是正常的函数定义，能否识别出它，然后就不输出这个函数（对应调用次数结果中部分大写字母的函数，但有些正常定义的函数也全部都是大写字母，因此不能用字符串匹配），如果这点比较难实现，就不用管了

3、最后一点就是需要加上另一种输出结果，在每一行输出函数序列前加上一个该序列对应的函数名，可以用','等分隔符隔开，例如gss_mech_switch.c的输出结果可以是这样子：
gss_mech_free, auth_domain_put kfree 
make_auth_domain_name, kmalloc strlen strlen 
然后每次输出函数序列后，不用进行换行，就每一行输出按以上格式输出一个函数序列就行了。原来只输出函数序列的方式也保留一下，可以写成两个jar文件，但原来的输出方式也不用进行换行了

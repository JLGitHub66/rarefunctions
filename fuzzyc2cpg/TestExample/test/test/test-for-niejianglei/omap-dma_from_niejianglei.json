{
  "filename": "omap-dma_from_niejianglei.c",
  "content": [
    {
      "identifierDeclStatement": [
        {
          "identifier": "p",
          "identifierType": "struct omap_system_dma_plat_info *"
        }
      ]
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "d",
          "identifierType": "struct omap_dma_dev_attr *"
        }
      ]
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "enable_1510_mode",
          "identifierType": "int"
        }
      ]
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "errata",
          "identifierType": "u32"
        }
      ]
    },
    {
      "classDefStatement": {
        "className": "dma_link_info",
        "definition": {
          "compoundStatement": [
            {
              "identifierDeclStatement": [
                {
                  "identifier": "linked_dmach_q",
                  "identifierType": "int *"
                }
              ]
            },
            {
              "identifierDeclStatement": [
                {
                  "identifier": "no_of_lchs_linked",
                  "identifierType": "int"
                }
              ]
            },
            {
              "identifierDeclStatement": [
                {
                  "identifier": "q_count",
                  "identifierType": "int"
                }
              ]
            },
            {
              "identifierDeclStatement": [
                {
                  "identifier": "q_tail",
                  "identifierType": "int"
                }
              ]
            },
            {
              "identifierDeclStatement": [
                {
                  "identifier": "q_head",
                  "identifierType": "int"
                }
              ]
            },
            {
              "identifierDeclStatement": [
                {
                  "identifier": "chain_state",
                  "identifierType": "int"
                }
              ]
            },
            {
              "identifierDeclStatement": [
                {
                  "identifier": "chain_mode",
                  "identifierType": "int"
                }
              ]
            }
          ]
        }
      }
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "dma_lch_count",
          "identifierType": "int"
        }
      ]
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "dma_chan_count",
          "identifierType": "int"
        }
      ]
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "omap_dma_reserve_channels",
          "identifierType": "int"
        }
      ]
    },
    {
      "functionDef": {
        "functionName": "DEFINE_SPINLOCK"
      }
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "dma_chan",
          "identifierType": "struct omap_dma_lch *"
        }
      ]
    },
    {
      "functionDef": {
        "functionName": "omap_disable_channel_irq",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "0"
                      },
                      {
                        "identifier": "CICR"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "CSR"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_read"
                  }
                }
              }
            }
          }
        ],
        "returnType": "static inline void"
      }
    },
    {
      "functionDef": {
        "functionName": "set_gdma_dev",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "req"
          },
          {
            "parameterType": "int",
            "parameter": "dev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "reg",
                "identifierType": "u32",
                "initialValue": "OMAP_FUNC_MUX_ARM_BASE + ((req - 1) / 5) * 4"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "shift",
                "identifierType": "int",
                "initialValue": "((req - 1) % 5) * 6"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "reg"
                      }
                    ],
                    "callee": "omap_readl"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "0x3f"
                        },
                        "rightOperand": {
                          "identifier": "shift"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "ShiftExpression": {
                    "leftOperand": {
                      "AdditiveExpression": {
                        "leftOperand": {
                          "identifier": "dev"
                        },
                        "rightOperand": {
                          "constant": "1"
                        },
                        "operator": "-"
                      }
                    },
                    "rightOperand": {
                      "identifier": "shift"
                    },
                    "operator": "<<"
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "l"
                  },
                  {
                    "identifier": "reg"
                  }
                ],
                "callee": "omap_writel"
              }
            }
          }
        ],
        "returnType": "static inline void"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_set_dma_priority",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          },
          {
            "parameterType": "int",
            "parameter": "dst_port"
          },
          {
            "parameterType": "int",
            "parameter": "priority"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "reg",
                "identifierType": "unsigned long"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "switchStatement": {
                      "condition": {
                        "identifier": "dst_port"
                      },
                      "switchBlock": {
                        "compoundStatement": [
                          {
                            "label": "case OMAP_DMA_PORT_OCP_T1:"
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "reg"
                                },
                                "rightOperand": {
                                  "identifier": "OMAP_TC_OCPT1_PRIOR"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          },
                          {
                            "label": "case OMAP_DMA_PORT_OCP_T2:"
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "reg"
                                },
                                "rightOperand": {
                                  "identifier": "OMAP_TC_OCPT2_PRIOR"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          },
                          {
                            "label": "case OMAP_DMA_PORT_EMIFF:"
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "reg"
                                },
                                "rightOperand": {
                                  "identifier": "OMAP_TC_EMIFF_PRIOR"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          },
                          {
                            "label": "case OMAP_DMA_PORT_EMIFS:"
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "reg"
                                },
                                "rightOperand": {
                                  "identifier": "OMAP_TC_EMIFS_PRIOR"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          },
                          {
                            "label": "default:"
                          },
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [],
                                "callee": "BUG"
                              }
                            }
                          },
                          {
                            "returnStatement": {}
                          }
                        ]
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "reg"
                              }
                            ],
                            "callee": "omap_readl"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "~",
                            "operand": {
                              "ShiftExpression": {
                                "leftOperand": {
                                  "constant": "0xf"
                                },
                                "rightOperand": {
                                  "constant": "8"
                                },
                                "operator": "<<"
                              }
                            }
                          }
                        },
                        "operator": "&="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "ShiftExpression": {
                            "leftOperand": {
                              "BitAndExpression": {
                                "leftOperand": {
                                  "identifier": "priority"
                                },
                                "rightOperand": {
                                  "constant": "0xf"
                                },
                                "operator": "&"
                              }
                            },
                            "rightOperand": {
                              "constant": "8"
                            },
                            "operator": "<<"
                          }
                        },
                        "operator": "|="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "l"
                          },
                          {
                            "identifier": "reg"
                          }
                        ],
                        "callee": "omap_writel"
                      }
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [],
                  "callee": "dma_omap1"
                }
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_dma_in_1510_mode",
        "parameterList": [
          {
            "parameterType": "void",
            "parameter": "<anonymous>"
          }
        ],
        "functionBody": [
          {
            "returnStatement": {
              "identifier": "enable_1510_mode"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_set_dma_transfer_params",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          },
          {
            "parameterType": "int",
            "parameter": "data_type"
          },
          {
            "parameterType": "int",
            "parameter": "elem_count"
          },
          {
            "parameterType": "int",
            "parameter": "frame_count"
          },
          {
            "parameterType": "int",
            "parameter": "sync_mode"
          },
          {
            "parameterType": "int",
            "parameter": "dma_trigger"
          },
          {
            "parameterType": "int",
            "parameter": "src_or_dst_synch"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "ccr",
                "identifierType": "u16"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CSDP"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "identifier": "~0x03"
                },
                "operator": "&="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "identifier": "data_type"
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CSDP"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "ccr"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CCR"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "ccr"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "1"
                        },
                        "rightOperand": {
                          "constant": "5"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "ccr"
                    },
                    "rightOperand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "1"
                        },
                        "rightOperand": {
                          "constant": "5"
                        },
                        "operator": "<<"
                      }
                    },
                    "operator": "|="
                  }
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "identifier": "sync_mode"
                  },
                  "rightOperand": {
                    "identifier": "OMAP_DMA_SYNC_FRAME"
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "ccr"
                      },
                      {
                        "identifier": "CCR"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "ccr"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CCR2"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "ccr"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "1"
                        },
                        "rightOperand": {
                          "constant": "2"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "ccr"
                    },
                    "rightOperand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "1"
                        },
                        "rightOperand": {
                          "constant": "2"
                        },
                        "operator": "<<"
                      }
                    },
                    "operator": "|="
                  }
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "identifier": "sync_mode"
                  },
                  "rightOperand": {
                    "identifier": "OMAP_DMA_SYNC_BLOCK"
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "ccr"
                      },
                      {
                        "identifier": "CCR2"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "elem_count"
                      },
                      {
                        "identifier": "CEN"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "frame_count"
                      },
                      {
                        "identifier": "CFN"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_set_dma_channel_mode",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          },
          {
            "parameterType": "enum omap_dma_channel_mode",
            "parameter": "mode"
          }
        ],
        "functionBody": [
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "identifierDeclStatement": [
                      {
                        "identifier": "l",
                        "identifierType": "u32"
                      }
                    ]
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "unaryExpression": {
                            "operand": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "LCH_CTRL"
                                  },
                                  {
                                    "identifier": "lch"
                                  }
                                ],
                                "callee": "dma_read"
                              }
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "identifier": "~0x7"
                        },
                        "operator": "&="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "identifier": "mode"
                        },
                        "operator": "|="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "l"
                              },
                              {
                                "identifier": "LCH_CTRL"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_write"
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "callExpression": {
                      "argumentList": [],
                      "callee": "dma_omap15xx"
                    }
                  }
                }
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_set_dma_src_params",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          },
          {
            "parameterType": "int",
            "parameter": "src_port"
          },
          {
            "parameterType": "int",
            "parameter": "src_amode"
          },
          {
            "parameterType": "unsigned long",
            "parameter": "src_start"
          },
          {
            "parameterType": "int",
            "parameter": "src_ei"
          },
          {
            "parameterType": "int",
            "parameter": "src_fi"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "w",
                "identifierType": "u16"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "w"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CSDP"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "w"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "0x1f"
                        },
                        "rightOperand": {
                          "constant": "2"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "w"
                },
                "rightOperand": {
                  "ShiftExpression": {
                    "leftOperand": {
                      "identifier": "src_port"
                    },
                    "rightOperand": {
                      "constant": "2"
                    },
                    "operator": "<<"
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "w"
                      },
                      {
                        "identifier": "CSDP"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CCR"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "0x03"
                        },
                        "rightOperand": {
                          "constant": "12"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "ShiftExpression": {
                    "leftOperand": {
                      "identifier": "src_amode"
                    },
                    "rightOperand": {
                      "constant": "12"
                    },
                    "operator": "<<"
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CCR"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "src_start"
                      },
                      {
                        "identifier": "CSSA"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "src_ei"
                      },
                      {
                        "identifier": "CSEI"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "src_fi"
                      },
                      {
                        "identifier": "CSFI"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_set_dma_src_data_pack",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          },
          {
            "parameterType": "int",
            "parameter": "enable"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CSDP"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "1"
                        },
                        "rightOperand": {
                          "constant": "6"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "l"
                    },
                    "rightOperand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "1"
                        },
                        "rightOperand": {
                          "constant": "6"
                        },
                        "operator": "<<"
                      }
                    },
                    "operator": "|="
                  }
                }
              },
              "condition": {
                "identifier": "enable"
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CSDP"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_set_dma_src_burst_mode",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          },
          {
            "parameterType": "enum omap_dma_burst_mode",
            "parameter": "burst_mode"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "burst",
                "identifierType": "unsigned int",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CSDP"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "0x03"
                        },
                        "rightOperand": {
                          "constant": "7"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "switchStatement": {
              "condition": {
                "identifier": "burst_mode"
              },
              "switchBlock": {
                "compoundStatement": [
                  {
                    "label": "case OMAP_DMA_DATA_BURST_DIS:"
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case OMAP_DMA_DATA_BURST_4:"
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "burst"
                        },
                        "rightOperand": {
                          "constant": "0x2"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case OMAP_DMA_DATA_BURST_8:"
                  },
                  {
                    "expressionStatement": {
                      "identifier": "fallthrough"
                    }
                  },
                  {
                    "label": "case OMAP_DMA_DATA_BURST_16:"
                  },
                  {
                    "expressionStatement": {
                      "identifier": "fallthrough"
                    }
                  },
                  {
                    "label": "default:"
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [],
                        "callee": "BUG"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "ShiftExpression": {
                    "leftOperand": {
                      "identifier": "burst"
                    },
                    "rightOperand": {
                      "constant": "7"
                    },
                    "operator": "<<"
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CSDP"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_set_dma_dest_params",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          },
          {
            "parameterType": "int",
            "parameter": "dest_port"
          },
          {
            "parameterType": "int",
            "parameter": "dest_amode"
          },
          {
            "parameterType": "unsigned long",
            "parameter": "dest_start"
          },
          {
            "parameterType": "int",
            "parameter": "dst_ei"
          },
          {
            "parameterType": "int",
            "parameter": "dst_fi"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CSDP"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "0x1f"
                        },
                        "rightOperand": {
                          "constant": "9"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "ShiftExpression": {
                    "leftOperand": {
                      "identifier": "dest_port"
                    },
                    "rightOperand": {
                      "constant": "9"
                    },
                    "operator": "<<"
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CSDP"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CCR"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "0x03"
                        },
                        "rightOperand": {
                          "constant": "14"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "ShiftExpression": {
                    "leftOperand": {
                      "identifier": "dest_amode"
                    },
                    "rightOperand": {
                      "constant": "14"
                    },
                    "operator": "<<"
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CCR"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "dest_start"
                      },
                      {
                        "identifier": "CDSA"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "dst_ei"
                      },
                      {
                        "identifier": "CDEI"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "dst_fi"
                      },
                      {
                        "identifier": "CDFI"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_set_dma_dest_data_pack",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          },
          {
            "parameterType": "int",
            "parameter": "enable"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CSDP"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "1"
                        },
                        "rightOperand": {
                          "constant": "13"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "l"
                    },
                    "rightOperand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "1"
                        },
                        "rightOperand": {
                          "constant": "13"
                        },
                        "operator": "<<"
                      }
                    },
                    "operator": "|="
                  }
                }
              },
              "condition": {
                "identifier": "enable"
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CSDP"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_set_dma_dest_burst_mode",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          },
          {
            "parameterType": "enum omap_dma_burst_mode",
            "parameter": "burst_mode"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "burst",
                "identifierType": "unsigned int",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CSDP"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "0x03"
                        },
                        "rightOperand": {
                          "constant": "14"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "switchStatement": {
              "condition": {
                "identifier": "burst_mode"
              },
              "switchBlock": {
                "compoundStatement": [
                  {
                    "label": "case OMAP_DMA_DATA_BURST_DIS:"
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case OMAP_DMA_DATA_BURST_4:"
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "burst"
                        },
                        "rightOperand": {
                          "constant": "0x2"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case OMAP_DMA_DATA_BURST_8:"
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "burst"
                        },
                        "rightOperand": {
                          "constant": "0x3"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case OMAP_DMA_DATA_BURST_16:"
                  },
                  {
                    "expressionStatement": {
                      "identifier": "fallthrough"
                    }
                  },
                  {
                    "label": "default:"
                  },
                  {},
                  {},
                  {},
                  {},
                  {},
                  {
                    "expressionStatement": {}
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [],
                        "callee": "BUG"
                      }
                    }
                  },
                  {
                    "returnStatement": {}
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "ShiftExpression": {
                    "leftOperand": {
                      "identifier": "burst"
                    },
                    "rightOperand": {
                      "constant": "14"
                    },
                    "operator": "<<"
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CSDP"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_enable_channel_irq",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "CSR"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_read"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "memberAccess": {
                          "leftOperand": "dma_chan[lch]",
                          "rightOperand": "enabled_irqs",
                          "operator": "."
                        }
                      },
                      {
                        "identifier": "CICR"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          }
        ],
        "returnType": "static inline void"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_disable_dma_irq",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          },
          {
            "parameterType": "u16",
            "parameter": "bits"
          }
        ],
        "functionBody": [
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "dma_chan[lch]",
                    "rightOperand": "enabled_irqs",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "identifier": "~bits"
                },
                "operator": "&="
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "enable_lnk",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CLNK_CTRL"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "~",
                    "operand": {
                      "ShiftExpression": {
                        "leftOperand": {
                          "constant": "1"
                        },
                        "rightOperand": {
                          "constant": "14"
                        },
                        "operator": "<<"
                      }
                    }
                  }
                },
                "operator": "&="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "l"
                    },
                    "rightOperand": {
                      "InclusiveOrExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "dma_chan[lch]",
                            "rightOperand": "next_lch",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "ShiftExpression": {
                            "leftOperand": {
                              "constant": "1"
                            },
                            "rightOperand": {
                              "constant": "15"
                            },
                            "operator": "<<"
                          }
                        },
                        "operator": "|"
                      }
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "memberAccess": {
                      "leftOperand": "dma_chan[lch]",
                      "rightOperand": "next_lch",
                      "operator": "."
                    }
                  },
                  "rightOperand": {
                    "unaryOperationExpression": {
                      "operator": "-",
                      "operand": {
                        "constant": "1"
                      }
                    }
                  },
                  "operator": "!="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CLNK_CTRL"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          }
        ],
        "returnType": "static inline void"
      }
    },
    {
      "functionDef": {
        "functionName": "disable_lnk",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CLNK_CTRL"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "lch"
                  }
                ],
                "callee": "omap_disable_channel_irq"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "ShiftExpression": {
                    "leftOperand": {
                      "constant": "1"
                    },
                    "rightOperand": {
                      "constant": "14"
                    },
                    "operator": "<<"
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CLNK_CTRL"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "dma_chan[lch]",
                    "rightOperand": "flags",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "identifier": "~OMAP_DMA_ACTIVE"
                },
                "operator": "&="
              }
            }
          }
        ],
        "returnType": "static inline void"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_request_dma",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "dev_id"
          },
          {
            "parameterType": "const char *",
            "parameter": "dev_name"
          },
          {
            "parameterType": "(( int lch , u16 ch_status , void * data ) void) *",
            "parameter": "callback"
          },
          {
            "parameterType": "void *",
            "parameter": "data"
          },
          {
            "parameterType": "int *",
            "parameter": "dma_ch_out"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "ch",
                "identifierType": "int"
              },
              {
                "identifier": "free_ch",
                "identifierType": "int",
                "initialValue": "-1"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "flags",
                "identifierType": "unsigned long"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "chan",
                "identifierType": "struct omap_dma_lch *"
              }
            ]
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "callExpression": {
                      "argumentList": [
                        {
                          "identifier": "dev_name"
                        },
                        {
                          "constant": "\"DMA engine\""
                        }
                      ],
                      "callee": "strcmp"
                    }
                  },
                  {
                    "constant": "\"Using deprecated platform DMA API - please update to DMA engine\""
                  }
                ],
                "callee": "WARN"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "dma_chan_lock"
                      }
                    }
                  },
                  {
                    "identifier": "flags"
                  }
                ],
                "callee": "spin_lock_irqsave"
              }
            }
          },
          {
            "forStatement": {
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "ch"
                  },
                  "rightOperand": {
                    "identifier": "dma_chan_count"
                  },
                  "operator": "<"
                }
              },
              "forInit": {
                "AssignmentExpression": {
                  "leftOperand": {
                    "identifier": "ch"
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "="
                }
              },
              "forBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "free_ch"
                                },
                                "rightOperand": {
                                  "identifier": "ch"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          }
                        ]
                      },
                      "condition": {
                        "AndExpression": {
                          "leftOperand": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "identifier": "free_ch"
                              },
                              "rightOperand": {
                                "unaryOperationExpression": {
                                  "operator": "-",
                                  "operand": {
                                    "constant": "1"
                                  }
                                }
                              },
                              "operator": "=="
                            }
                          },
                          "rightOperand": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "memberAccess": {
                                  "leftOperand": "dma_chan[ch]",
                                  "rightOperand": "dev_id",
                                  "operator": "."
                                }
                              },
                              "rightOperand": {
                                "unaryOperationExpression": {
                                  "operator": "-",
                                  "operand": {
                                    "constant": "1"
                                  }
                                }
                              },
                              "operator": "=="
                            }
                          },
                          "operator": "&&"
                        }
                      }
                    }
                  }
                ]
              },
              "forLoop": {
                "postIncDecOperationExpression": {
                  "operand": {
                    "identifier": "ch"
                  },
                  "operator": "++"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryOperationExpression": {
                              "operator": "&",
                              "operand": {
                                "identifier": "dma_chan_lock"
                              }
                            }
                          },
                          {
                            "identifier": "flags"
                          }
                        ],
                        "callee": "spin_unlock_irqrestore"
                      }
                    }
                  },
                  {
                    "returnStatement": {
                      "unaryOperationExpression": {
                        "operator": "-",
                        "operand": {
                          "identifier": "EBUSY"
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "identifier": "free_ch"
                  },
                  "rightOperand": {
                    "unaryOperationExpression": {
                      "operator": "-",
                      "operand": {
                        "constant": "1"
                      }
                    }
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "chan"
                },
                "rightOperand": {
                  "AdditiveExpression": {
                    "leftOperand": {
                      "identifier": "dma_chan"
                    },
                    "rightOperand": {
                      "identifier": "free_ch"
                    },
                    "operator": "+"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "dev_id"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "dev_id"
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "free_ch"
                          }
                        ],
                        "callee": "clear_lch_regs"
                      }
                    }
                  }
                }
              },
              "condition": {
                "unaryExpression": {
                  "operand": {
                    "identifier": "clear_lch_regs"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "dma_chan_lock"
                      }
                    }
                  },
                  {
                    "identifier": "flags"
                  }
                ],
                "callee": "spin_unlock_irqrestore"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "dev_name"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "dev_name"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "callback"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "callback"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "data"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "data"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "flags"
                    }
                  }
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "enabled_irqs"
                    }
                  }
                },
                "rightOperand": {
                  "InclusiveOrExpression": {
                    "leftOperand": {
                      "identifier": "OMAP_DMA_DROP_IRQ"
                    },
                    "rightOperand": {
                      "identifier": "OMAP_DMA_BLOCK_IRQ"
                    },
                    "operator": "|"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "enabled_irqs"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "OMAP1_DMA_TOUT_IRQ"
                },
                "operator": "|="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "AdditiveExpression": {
                                      "leftOperand": {
                                        "identifier": "free_ch"
                                      },
                                      "rightOperand": {
                                        "constant": "1"
                                      },
                                      "operator": "+"
                                    }
                                  },
                                  {
                                    "identifier": "dev_id"
                                  }
                                ],
                                "callee": "set_gdma_dev"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "dev_id"
                                },
                                "rightOperand": {
                                  "AdditiveExpression": {
                                    "leftOperand": {
                                      "identifier": "free_ch"
                                    },
                                    "rightOperand": {
                                      "constant": "1"
                                    },
                                    "operator": "+"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "identifier": "dev_id"
                          },
                          "rightOperand": {
                            "constant": "0"
                          },
                          "operator": "!="
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "InclusiveOrExpression": {
                                  "leftOperand": {
                                    "identifier": "dev_id"
                                  },
                                  "rightOperand": {
                                    "ShiftExpression": {
                                      "leftOperand": {
                                        "constant": "1"
                                      },
                                      "rightOperand": {
                                        "constant": "10"
                                      },
                                      "operator": "<<"
                                    }
                                  },
                                  "operator": "|"
                                }
                              },
                              {
                                "identifier": "CCR"
                              },
                              {
                                "identifier": "free_ch"
                              }
                            ],
                            "callee": "dma_write"
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [],
                  "callee": "dma_omap16xx"
                }
              },
              "elseBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "dev_id"
                              },
                              {
                                "identifier": "CCR"
                              },
                              {
                                "identifier": "free_ch"
                              }
                            ],
                            "callee": "dma_write"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryOperationExpression": {
                    "operator": "*",
                    "operand": {
                      "identifier": "dma_ch_out"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "free_ch"
                },
                "operator": "="
              }
            }
          },
          {
            "returnStatement": {
              "constant": "0"
            }
          }
        ],
        "returnType": "int"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_free_dma",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "flags",
                "identifierType": "unsigned long"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "constant": "\"omap_dma: trying to free unallocated DMA channel %d\\n\""
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "pr_err"
                      }
                    }
                  },
                  {
                    "returnStatement": {}
                  }
                ]
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "memberAccess": {
                      "leftOperand": "dma_chan[lch]",
                      "rightOperand": "dev_id",
                      "operator": "."
                    }
                  },
                  "rightOperand": {
                    "unaryOperationExpression": {
                      "operator": "-",
                      "operand": {
                        "constant": "1"
                      }
                    }
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "lch"
                  }
                ],
                "callee": "omap_disable_channel_irq"
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "0"
                      },
                      {
                        "identifier": "CCR"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "dma_chan_lock"
                      }
                    }
                  },
                  {
                    "identifier": "flags"
                  }
                ],
                "callee": "spin_lock_irqsave"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "dma_chan[lch]",
                    "rightOperand": "dev_id",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "-",
                    "operand": {
                      "constant": "1"
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "dma_chan[lch]",
                    "rightOperand": "next_lch",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "-",
                    "operand": {
                      "constant": "1"
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "dma_chan[lch]",
                    "rightOperand": "callback",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "identifier": "NULL"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "dma_chan_lock"
                      }
                    }
                  },
                  {
                    "identifier": "flags"
                  }
                ],
                "callee": "spin_unlock_irqrestore"
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_clear_dma",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "flags",
                "identifierType": "unsigned long"
              }
            ]
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "flags"
                  }
                ],
                "callee": "local_irq_save"
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "clear_dma"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "flags"
                  }
                ],
                "callee": "local_irq_restore"
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_start_dma",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "constant": "0"
                          },
                          {
                            "identifier": "CPC"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_write"
                      }
                    }
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [],
                  "callee": "dma_omap15xx"
                }
              },
              "elseBlock": {
                "expressionStatement": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "constant": "0"
                          },
                          {
                            "identifier": "CDAC"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_write"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "identifierDeclStatement": [
                      {
                        "identifier": "next_lch",
                        "identifierType": "int"
                      },
                      {
                        "identifier": "cur_lch",
                        "identifierType": "int"
                      }
                    ]
                  },
                  {
                    "identifierDeclStatement": [
                      {
                        "identifier": "dma_chan_link_map",
                        "identifierType": "char [ MAX_LOGICAL_DMA_CH_COUNT ]"
                      }
                    ]
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "enable_lnk"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "dma_chan_link_map"
                          },
                          {
                            "constant": "0"
                          },
                          {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "dma_chan_link_map"
                              }
                            }
                          }
                        ],
                        "callee": "memset"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "arrayIndexing": {
                            "array": "dma_chan_link_map",
                            "index": {
                              "identifier": "lch"
                            }
                          }
                        },
                        "rightOperand": {
                          "constant": "1"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "cur_lch"
                        },
                        "rightOperand": {
                          "memberAccess": {
                            "leftOperand": "dma_chan[lch]",
                            "rightOperand": "next_lch",
                            "operator": "."
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "doWhileStatement": {
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "identifier": "next_lch"
                          },
                          "rightOperand": {
                            "unaryOperationExpression": {
                              "operator": "-",
                              "operand": {
                                "constant": "1"
                              }
                            }
                          },
                          "operator": "!="
                        }
                      },
                      "doWhileBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "next_lch"
                                },
                                "rightOperand": {
                                  "memberAccess": {
                                    "leftOperand": "dma_chan[cur_lch]",
                                    "rightOperand": "next_lch",
                                    "operator": "."
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "breakStatement": "break"
                              },
                              "condition": {
                                "arrayIndexing": {
                                  "array": "dma_chan_link_map",
                                  "index": {
                                    "identifier": "cur_lch"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "arrayIndexing": {
                                    "array": "dma_chan_link_map",
                                    "index": {
                                      "identifier": "cur_lch"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "cur_lch"
                                  }
                                ],
                                "callee": "enable_lnk"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "cur_lch"
                                  }
                                ],
                                "callee": "omap_enable_channel_irq"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "cur_lch"
                                },
                                "rightOperand": {
                                  "identifier": "next_lch"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "unaryOperationExpression": {
                      "operator": "!",
                      "operand": {
                        "callExpression": {
                          "argumentList": [],
                          "callee": "omap_dma_in_1510_mode"
                        }
                      }
                    }
                  },
                  "rightOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "memberAccess": {
                          "leftOperand": "dma_chan[lch]",
                          "rightOperand": "next_lch",
                          "operator": "."
                        }
                      },
                      "rightOperand": {
                        "unaryOperationExpression": {
                          "operator": "-",
                          "operand": {
                            "constant": "1"
                          }
                        }
                      },
                      "operator": "!="
                    }
                  },
                  "operator": "&&"
                }
              },
              "elseBlock": {
                "ifStatement": {
                  "ifBlock": {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "lch"
                              },
                              {
                                "identifier": "CLNK_CTRL"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_write"
                          }
                        }
                      }
                    }
                  },
                  "condition": {
                    "callExpression": {
                      "argumentList": [
                        {
                          "identifier": "DMA_ERRATA_PARALLEL_CHANNELS"
                        }
                      ],
                      "callee": "IS_DMA_ERRATA"
                    }
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "lch"
                  }
                ],
                "callee": "omap_enable_channel_irq"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CCR"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "l"
                    },
                    "rightOperand": {
                      "identifier": "OMAP_DMA_CCR_BUFFERING_DISABLE"
                    },
                    "operator": "|="
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "DMA_ERRATA_IFRAME_BUFFERING"
                    }
                  ],
                  "callee": "IS_DMA_ERRATA"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "identifier": "OMAP_DMA_CCR_EN"
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [],
                "callee": "mb"
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "l"
                      },
                      {
                        "identifier": "CCR"
                      },
                      {
                        "identifier": "lch"
                      }
                    ],
                    "callee": "dma_write"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "dma_chan[lch]",
                    "rightOperand": "flags",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "identifier": "OMAP_DMA_ACTIVE"
                },
                "operator": "|="
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_stop_dma",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "l",
                "identifierType": "u32"
              }
            ]
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "lch"
                  }
                ],
                "callee": "omap_disable_channel_irq"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "l"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "CCR"
                          },
                          {
                            "identifier": "lch"
                          }
                        ],
                        "callee": "dma_read"
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "identifierDeclStatement": [
                      {
                        "identifier": "i",
                        "identifierType": "int",
                        "initialValue": "0"
                      }
                    ]
                  },
                  {
                    "identifierDeclStatement": [
                      {
                        "identifier": "sys_cf",
                        "identifierType": "u32"
                      }
                    ]
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "unaryExpression": {
                            "operand": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "OCP_SYSCONFIG"
                                  },
                                  {
                                    "identifier": "lch"
                                  }
                                ],
                                "callee": "dma_read"
                              }
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "sys_cf"
                        },
                        "rightOperand": {
                          "identifier": "l"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "identifier": "~DMA_SYSCONFIG_MIDLEMODE_MASK"
                        },
                        "operator": "&="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "DMA_IDLEMODE_NO_IDLE"
                              }
                            ],
                            "callee": "DMA_SYSCONFIG_MIDLEMODE"
                          }
                        },
                        "operator": "|="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "l"
                              },
                              {
                                "identifier": "OCP_SYSCONFIG"
                              },
                              {
                                "constant": "0"
                              }
                            ],
                            "callee": "dma_write"
                          }
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "unaryExpression": {
                            "operand": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "CCR"
                                  },
                                  {
                                    "identifier": "lch"
                                  }
                                ],
                                "callee": "dma_read"
                              }
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "identifier": "~OMAP_DMA_CCR_EN"
                        },
                        "operator": "&="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "l"
                              },
                              {
                                "identifier": "CCR"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_write"
                          }
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "unaryExpression": {
                            "operand": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "CCR"
                                  },
                                  {
                                    "identifier": "lch"
                                  }
                                ],
                                "callee": "dma_read"
                              }
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "whileStatement": {
                      "condition": {
                        "AndExpression": {
                          "leftOperand": {
                            "RelationalExpression": {
                              "leftOperand": {
                                "identifier": "i"
                              },
                              "rightOperand": {
                                "constant": "100"
                              },
                              "operator": "<"
                            }
                          },
                          "rightOperand": {
                            "BitAndExpression": {
                              "leftOperand": {
                                "identifier": "l"
                              },
                              "rightOperand": {
                                "InclusiveOrExpression": {
                                  "leftOperand": {
                                    "identifier": "OMAP_DMA_CCR_RD_ACTIVE"
                                  },
                                  "rightOperand": {
                                    "identifier": "OMAP_DMA_CCR_WR_ACTIVE"
                                  },
                                  "operator": "|"
                                }
                              },
                              "operator": "&"
                            }
                          },
                          "operator": "&&"
                        }
                      },
                      "whileBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "constant": "5"
                                  }
                                ],
                                "callee": "udelay"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "postIncDecOperationExpression": {
                                "operand": {
                                  "identifier": "i"
                                },
                                "operator": "++"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "l"
                                },
                                "rightOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "identifier": "CCR"
                                          },
                                          {
                                            "identifier": "lch"
                                          }
                                        ],
                                        "callee": "dma_read"
                                      }
                                    }
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "constant": "\"DMA drain did not complete on lch %d\\n\""
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "pr_err"
                          }
                        }
                      },
                      "condition": {
                        "RelationalExpression": {
                          "leftOperand": {
                            "identifier": "i"
                          },
                          "rightOperand": {
                            "constant": "100"
                          },
                          "operator": ">="
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "sys_cf"
                              },
                              {
                                "identifier": "OCP_SYSCONFIG"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_write"
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "callExpression": {
                      "argumentList": [
                        {
                          "identifier": "DMA_ERRATA_i541"
                        }
                      ],
                      "callee": "IS_DMA_ERRATA"
                    }
                  },
                  "rightOperand": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "identifier": "l"
                      },
                      "rightOperand": {
                        "identifier": "OMAP_DMA_CCR_SEL_SRC_DST_SYNC"
                      },
                      "operator": "&"
                    }
                  },
                  "operator": "&&"
                }
              },
              "elseBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "l"
                        },
                        "rightOperand": {
                          "identifier": "~OMAP_DMA_CCR_EN"
                        },
                        "operator": "&="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "l"
                              },
                              {
                                "identifier": "CCR"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_write"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [],
                "callee": "mb"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "identifierDeclStatement": [
                      {
                        "identifier": "next_lch",
                        "identifierType": "int"
                      },
                      {
                        "identifier": "cur_lch",
                        "identifierType": "int",
                        "initialValue": "lch"
                      }
                    ]
                  },
                  {
                    "identifierDeclStatement": [
                      {
                        "identifier": "dma_chan_link_map",
                        "identifierType": "char [ MAX_LOGICAL_DMA_CH_COUNT ]"
                      }
                    ]
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "dma_chan_link_map"
                          },
                          {
                            "constant": "0"
                          },
                          {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "dma_chan_link_map"
                              }
                            }
                          }
                        ],
                        "callee": "memset"
                      }
                    }
                  },
                  {
                    "doWhileStatement": {
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "identifier": "next_lch"
                          },
                          "rightOperand": {
                            "unaryOperationExpression": {
                              "operator": "-",
                              "operand": {
                                "constant": "1"
                              }
                            }
                          },
                          "operator": "!="
                        }
                      },
                      "doWhileBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "breakStatement": "break"
                              },
                              "condition": {
                                "arrayIndexing": {
                                  "array": "dma_chan_link_map",
                                  "index": {
                                    "identifier": "cur_lch"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "arrayIndexing": {
                                    "array": "dma_chan_link_map",
                                    "index": {
                                      "identifier": "cur_lch"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "cur_lch"
                                  }
                                ],
                                "callee": "disable_lnk"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "next_lch"
                                },
                                "rightOperand": {
                                  "memberAccess": {
                                    "leftOperand": "dma_chan[cur_lch]",
                                    "rightOperand": "next_lch",
                                    "operator": "."
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "cur_lch"
                                },
                                "rightOperand": {
                                  "identifier": "next_lch"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "unaryOperationExpression": {
                      "operator": "!",
                      "operand": {
                        "callExpression": {
                          "argumentList": [],
                          "callee": "omap_dma_in_1510_mode"
                        }
                      }
                    }
                  },
                  "rightOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "memberAccess": {
                          "leftOperand": "dma_chan[lch]",
                          "rightOperand": "next_lch",
                          "operator": "."
                        }
                      },
                      "rightOperand": {
                        "unaryOperationExpression": {
                          "operator": "-",
                          "operand": {
                            "constant": "1"
                          }
                        }
                      },
                      "operator": "!="
                    }
                  },
                  "operator": "&&"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "dma_chan[lch]",
                    "rightOperand": "flags",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "identifier": "~OMAP_DMA_ACTIVE"
                },
                "operator": "&="
              }
            }
          }
        ],
        "returnType": "void"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_get_dma_src_pos",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "offset",
                "identifierType": "dma_addr_t",
                "initialValue": "0"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "offset"
                    },
                    "rightOperand": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "CPC"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_read"
                          }
                        }
                      }
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [],
                  "callee": "dma_omap15xx"
                }
              },
              "elseBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "offset"
                    },
                    "rightOperand": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "CSAC"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_read"
                          }
                        }
                      }
                    },
                    "operator": "="
                  }
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "offset"
                    },
                    "rightOperand": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "CSAC"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_read"
                          }
                        }
                      }
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "callExpression": {
                      "argumentList": [
                        {
                          "identifier": "DMA_ERRATA_3_3"
                        }
                      ],
                      "callee": "IS_DMA_ERRATA"
                    }
                  },
                  "rightOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "identifier": "offset"
                      },
                      "rightOperand": {
                        "constant": "0"
                      },
                      "operator": "=="
                    }
                  },
                  "operator": "&&"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "AssignmentExpression": {
                            "leftOperand": {
                              "identifier": "offset"
                            },
                            "rightOperand": {
                              "unaryExpression": {
                                "operand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "identifier": "CSAC"
                                      },
                                      {
                                        "identifier": "lch"
                                      }
                                    ],
                                    "callee": "dma_read"
                                  }
                                }
                              }
                            },
                            "operator": "="
                          }
                        }
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "unaryExpression": {
                                "operand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "identifier": "CDAC"
                                      },
                                      {
                                        "identifier": "lch"
                                      }
                                    ],
                                    "callee": "dma_read"
                                  }
                                }
                              }
                            }
                          ],
                          "callee": "likely"
                        }
                      },
                      "elseBlock": {
                        "expressionStatement": {
                          "AssignmentExpression": {
                            "leftOperand": {
                              "identifier": "offset"
                            },
                            "rightOperand": {
                              "unaryExpression": {
                                "operand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "identifier": "CSSA"
                                      },
                                      {
                                        "identifier": "lch"
                                      }
                                    ],
                                    "callee": "dma_read"
                                  }
                                }
                              }
                            },
                            "operator": "="
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "callExpression": {
                      "argumentList": [],
                      "callee": "dma_omap15xx"
                    }
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "offset"
                },
                "rightOperand": {
                  "BitAndExpression": {
                    "leftOperand": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "CSSA"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_read"
                          }
                        }
                      }
                    },
                    "rightOperand": {
                      "constant": "0xFFFF0000"
                    },
                    "operator": "&"
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "returnStatement": {
              "identifier": "offset"
            }
          }
        ],
        "returnType": "dma_addr_t"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_get_dma_dst_pos",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "offset",
                "identifierType": "dma_addr_t",
                "initialValue": "0"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "offset"
                    },
                    "rightOperand": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "CPC"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_read"
                          }
                        }
                      }
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [],
                  "callee": "dma_omap15xx"
                }
              },
              "elseBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "offset"
                    },
                    "rightOperand": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "CDAC"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_read"
                          }
                        }
                      }
                    },
                    "operator": "="
                  }
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "offset"
                        },
                        "rightOperand": {
                          "unaryExpression": {
                            "operand": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "CDAC"
                                  },
                                  {
                                    "identifier": "lch"
                                  }
                                ],
                                "callee": "dma_read"
                              }
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "AssignmentExpression": {
                            "leftOperand": {
                              "identifier": "offset"
                            },
                            "rightOperand": {
                              "unaryExpression": {
                                "operand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "identifier": "CDSA"
                                      },
                                      {
                                        "identifier": "lch"
                                      }
                                    ],
                                    "callee": "dma_read"
                                  }
                                }
                              }
                            },
                            "operator": "="
                          }
                        }
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "unaryOperationExpression": {
                                "operator": "!",
                                "operand": {
                                  "identifier": "offset"
                                }
                              }
                            }
                          ],
                          "callee": "unlikely"
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "unaryOperationExpression": {
                      "operator": "!",
                      "operand": {
                        "callExpression": {
                          "argumentList": [],
                          "callee": "dma_omap15xx"
                        }
                      }
                    }
                  },
                  "rightOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "identifier": "offset"
                      },
                      "rightOperand": {
                        "constant": "0"
                      },
                      "operator": "=="
                    }
                  },
                  "operator": "&&"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "offset"
                },
                "rightOperand": {
                  "BitAndExpression": {
                    "leftOperand": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "CDSA"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_read"
                          }
                        }
                      }
                    },
                    "rightOperand": {
                      "constant": "0xFFFF0000"
                    },
                    "operator": "&"
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "returnStatement": {
              "identifier": "offset"
            }
          }
        ],
        "returnType": "dma_addr_t"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_get_dma_active_status",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "lch"
          }
        ],
        "functionBody": [
          {
            "returnStatement": {
              "EqualityExpression": {
                "leftOperand": {
                  "BitAndExpression": {
                    "leftOperand": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "CCR"
                              },
                              {
                                "identifier": "lch"
                              }
                            ],
                            "callee": "dma_read"
                          }
                        }
                      }
                    },
                    "rightOperand": {
                      "identifier": "OMAP_DMA_CCR_EN"
                    },
                    "operator": "&"
                  }
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "!="
              }
            }
          }
        ],
        "returnType": "int"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_dma_running",
        "parameterList": [
          {
            "parameterType": "void",
            "parameter": "<anonymous>"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "lch",
                "identifierType": "int"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "returnStatement": {
                  "constant": "1"
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [],
                  "callee": "omap_lcd_dma_running"
                }
              }
            }
          },
          {
            "forStatement": {
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "lch"
                  },
                  "rightOperand": {
                    "identifier": "dma_chan_count"
                  },
                  "operator": "<"
                }
              },
              "forInit": {
                "AssignmentExpression": {
                  "leftOperand": {
                    "identifier": "lch"
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "="
                }
              },
              "forBlock": {
                "ifStatement": {
                  "ifBlock": {
                    "returnStatement": {
                      "constant": "1"
                    }
                  },
                  "condition": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "unaryExpression": {
                          "operand": {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "identifier": "CCR"
                                },
                                {
                                  "identifier": "lch"
                                }
                              ],
                              "callee": "dma_read"
                            }
                          }
                        }
                      },
                      "rightOperand": {
                        "identifier": "OMAP_DMA_CCR_EN"
                      },
                      "operator": "&"
                    }
                  }
                }
              },
              "forLoop": {
                "postIncDecOperationExpression": {
                  "operand": {
                    "identifier": "lch"
                  },
                  "operator": "++"
                }
              }
            }
          },
          {
            "returnStatement": {
              "constant": "0"
            }
          }
        ],
        "returnType": "int"
      }
    },
    {
      "functionDef": {
        "functionName": "omap1_dma_handle_ch",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "ch"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "csr",
                "identifierType": "u32"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "csr"
                        },
                        "rightOperand": {
                          "memberAccess": {
                            "leftOperand": "dma_chan[ch]",
                            "rightOperand": "saved_csr",
                            "operator": "."
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "dma_chan[ch]",
                            "rightOperand": "saved_csr",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "identifier": "enable_1510_mode"
                  },
                  "rightOperand": {
                    "RelationalExpression": {
                      "leftOperand": {
                        "identifier": "ch"
                      },
                      "rightOperand": {
                        "constant": "6"
                      },
                      "operator": ">="
                    }
                  },
                  "operator": "&&"
                }
              },
              "elseBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "csr"
                    },
                    "rightOperand": {
                      "unaryExpression": {
                        "operand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "CSR"
                              },
                              {
                                "identifier": "ch"
                              }
                            ],
                            "callee": "dma_read"
                          }
                        }
                      }
                    },
                    "operator": "="
                  }
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "dma_chan[ch + 6]",
                            "rightOperand": "saved_csr",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "ShiftExpression": {
                            "leftOperand": {
                              "identifier": "csr"
                            },
                            "rightOperand": {
                              "constant": "7"
                            },
                            "operator": ">>"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "csr"
                        },
                        "rightOperand": {
                          "constant": "0x7f"
                        },
                        "operator": "&="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "identifier": "enable_1510_mode"
                  },
                  "rightOperand": {
                    "AndExpression": {
                      "leftOperand": {
                        "RelationalExpression": {
                          "leftOperand": {
                            "identifier": "ch"
                          },
                          "rightOperand": {
                            "constant": "2"
                          },
                          "operator": "<="
                        }
                      },
                      "rightOperand": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "ShiftExpression": {
                              "leftOperand": {
                                "identifier": "csr"
                              },
                              "rightOperand": {
                                "constant": "7"
                              },
                              "operator": ">>"
                            }
                          },
                          "rightOperand": {
                            "constant": "0"
                          },
                          "operator": "!="
                        }
                      },
                      "operator": "&&"
                    }
                  },
                  "operator": "&&"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "returnStatement": {
                  "constant": "0"
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "identifier": "csr"
                      },
                      "rightOperand": {
                        "constant": "0x3f"
                      },
                      "operator": "&"
                    }
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "constant": "\"Spurious interrupt from DMA channel %d (CSR %04x)\\n\""
                          },
                          {
                            "identifier": "ch"
                          },
                          {
                            "identifier": "csr"
                          }
                        ],
                        "callee": "pr_warn"
                      }
                    }
                  },
                  {
                    "returnStatement": {
                      "constant": "0"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "EqualityExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "dma_chan[ch]",
                            "rightOperand": "dev_id",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "constant": "1"
                            }
                          }
                        },
                        "operator": "=="
                      }
                    }
                  ],
                  "callee": "unlikely"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "\"DMA timeout with device %d\\n\""
                      },
                      {
                        "memberAccess": {
                          "leftOperand": "dma_chan[ch]",
                          "rightOperand": "dev_id",
                          "operator": "."
                        }
                      }
                    ],
                    "callee": "pr_warn"
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "BitAndExpression": {
                        "leftOperand": {
                          "identifier": "csr"
                        },
                        "rightOperand": {
                          "identifier": "OMAP1_DMA_TOUT_IRQ"
                        },
                        "operator": "&"
                      }
                    }
                  ],
                  "callee": "unlikely"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "\"DMA synchronization event drop occurred with device %d\\n\""
                      },
                      {
                        "memberAccess": {
                          "leftOperand": "dma_chan[ch]",
                          "rightOperand": "dev_id",
                          "operator": "."
                        }
                      }
                    ],
                    "callee": "pr_warn"
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "BitAndExpression": {
                        "leftOperand": {
                          "identifier": "csr"
                        },
                        "rightOperand": {
                          "identifier": "OMAP_DMA_DROP_IRQ"
                        },
                        "operator": "&"
                      }
                    }
                  ],
                  "callee": "unlikely"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "memberAccess": {
                        "leftOperand": "dma_chan[ch]",
                        "rightOperand": "flags",
                        "operator": "."
                      }
                    },
                    "rightOperand": {
                      "identifier": "~OMAP_DMA_ACTIVE"
                    },
                    "operator": "&="
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "BitAndExpression": {
                        "leftOperand": {
                          "identifier": "csr"
                        },
                        "rightOperand": {
                          "identifier": "OMAP_DMA_BLOCK_IRQ"
                        },
                        "operator": "&"
                      }
                    }
                  ],
                  "callee": "likely"
                }
              }
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "omap1_dma_irq_handler",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "irq"
          },
          {
            "parameterType": "void *",
            "parameter": "dev_id"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "ch",
                "identifierType": "int",
                "initialValue": "((int) dev_id) - 1"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "handled",
                "identifierType": "int",
                "initialValue": "0"
              }
            ]
          }
        ],
        "returnType": "static irqreturn_t"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_get_plat_info",
        "parameterList": [
          {
            "parameterType": "void",
            "parameter": "<anonymous>"
          }
        ],
        "functionBody": [
          {
            "returnStatement": {
              "identifier": "p"
            }
          }
        ],
        "returnType": "struct omap_system_dma_plat_info *"
      }
    },
    {
      "functionDef": {
        "functionName": "EXPORT_SYMBOL_GPL"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_system_dma_probe",
        "parameterList": [
          {
            "parameterType": "struct platform_device *",
            "parameter": "pdev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "ch",
                "identifierType": "int"
              },
              {
                "identifier": "ret",
                "identifierType": "int",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "dma_irq",
                "identifierType": "int"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "irq_name",
                "identifierType": "char [ 4 ]"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "p"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "dev",
                        "rightOperand": "platform_data",
                        "operator": "."
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryOperationExpression": {
                              "operator": "&",
                              "operand": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "dev"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "constant": "\"%s: System DMA initialized without platform data\\n\""
                          },
                          {
                            "identifier": "__func__"
                          }
                        ],
                        "callee": "dev_err"
                      }
                    }
                  },
                  {
                    "returnStatement": {
                      "unaryOperationExpression": {
                        "operator": "-",
                        "operand": {
                          "identifier": "EINVAL"
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "identifier": "p"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "d"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "dma_attr"
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "errata"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "errata"
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "unaryExpression": {
                        "operand": {
                          "identifier": "lch_count"
                        }
                      }
                    },
                    "rightOperand": {
                      "identifier": "omap_dma_reserve_channels"
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "dev_caps"
                          }
                        }
                      },
                      "rightOperand": {
                        "identifier": "RESERVE_CHANNEL"
                      },
                      "operator": "&"
                    }
                  },
                  "rightOperand": {
                    "AndExpression": {
                      "leftOperand": {
                        "identifier": "omap_dma_reserve_channels"
                      },
                      "rightOperand": {
                        "RelationalExpression": {
                          "leftOperand": {
                            "identifier": "omap_dma_reserve_channels"
                          },
                          "rightOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "lch_count"
                              }
                            }
                          },
                          "operator": "<"
                        }
                      },
                      "operator": "&&"
                    }
                  },
                  "operator": "&&"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "dma_lch_count"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "lch_count"
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "dma_chan_count"
                },
                "rightOperand": {
                  "identifier": "dma_lch_count"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "enable_1510_mode"
                },
                "rightOperand": {
                  "BitAndExpression": {
                    "leftOperand": {
                      "unaryExpression": {
                        "operand": {
                          "identifier": "dev_caps"
                        }
                      }
                    },
                    "rightOperand": {
                      "identifier": "ENABLE_1510_MODE"
                    },
                    "operator": "&"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "dma_chan"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "dev"
                              }
                            }
                          }
                        }
                      },
                      {
                        "identifier": "dma_lch_count"
                      },
                      {
                        "sizeofExpression": {
                          "operator": "sizeof",
                          "operand": {
                            "unaryOperationExpression": {
                              "operator": "*",
                              "operand": {
                                "identifier": "dma_chan"
                              }
                            }
                          }
                        }
                      },
                      {
                        "identifier": "GFP_KERNEL"
                      }
                    ],
                    "callee": "devm_kcalloc"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "returnStatement": {
                  "unaryOperationExpression": {
                    "operator": "-",
                    "operand": {
                      "identifier": "ENOMEM"
                    }
                  }
                }
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "identifier": "dma_chan"
                  }
                }
              }
            }
          },
          {
            "forStatement": {
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "ch"
                  },
                  "rightOperand": {
                    "identifier": "dma_chan_count"
                  },
                  "operator": "<"
                }
              },
              "forInit": {
                "AssignmentExpression": {
                  "leftOperand": {
                    "identifier": "ch"
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "="
                }
              },
              "forBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "ch"
                          }
                        ],
                        "callee": "omap_clear_dma"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "dma_chan[ch]",
                            "rightOperand": "dev_id",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "constant": "1"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "dma_chan[ch]",
                            "rightOperand": "next_lch",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "constant": "1"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "continueStatement": "continue"
                      },
                      "condition": {
                        "AndExpression": {
                          "leftOperand": {
                            "RelationalExpression": {
                              "leftOperand": {
                                "identifier": "ch"
                              },
                              "rightOperand": {
                                "constant": "6"
                              },
                              "operator": ">="
                            }
                          },
                          "rightOperand": {
                            "identifier": "enable_1510_mode"
                          },
                          "operator": "&&"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryOperationExpression": {
                              "operator": "&",
                              "operand": {
                                "arrayIndexing": {
                                  "array": "irq_name",
                                  "index": {
                                    "constant": "0"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "constant": "\"%d\""
                          },
                          {
                            "identifier": "ch"
                          }
                        ],
                        "callee": "sprintf"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "dma_irq"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "pdev"
                              },
                              {
                                "identifier": "irq_name"
                              }
                            ],
                            "callee": "platform_get_irq_byname"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "ret"
                                },
                                "rightOperand": {
                                  "identifier": "dma_irq"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "exit_dma_irq_fail"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "RelationalExpression": {
                          "leftOperand": {
                            "identifier": "dma_irq"
                          },
                          "rightOperand": {
                            "constant": "0"
                          },
                          "operator": "<"
                        }
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "continueStatement": "continue"
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "identifier": "dma_irq"
                          },
                          "rightOperand": {
                            "identifier": "INT_DMA_LCD"
                          },
                          "operator": "=="
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "ret"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "dma_irq"
                              },
                              {
                                "identifier": "omap1_dma_irq_handler"
                              },
                              {
                                "constant": "0"
                              },
                              {
                                "constant": "\"DMA\""
                              },
                              {
                                "castExpression": {
                                  "originalExpression": {
                                    "AdditiveExpression": {
                                      "leftOperand": {
                                        "identifier": "ch"
                                      },
                                      "rightOperand": {
                                        "constant": "1"
                                      },
                                      "operator": "+"
                                    }
                                  },
                                  "target": "void *"
                                }
                              }
                            ],
                            "callee": "request_irq"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "gotoStatement": {
                          "goto": "exit_dma_irq_fail"
                        }
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "identifier": "ret"
                          },
                          "rightOperand": {
                            "constant": "0"
                          },
                          "operator": "!="
                        }
                      }
                    }
                  }
                ]
              },
              "forLoop": {
                "postIncDecOperationExpression": {
                  "operand": {
                    "identifier": "ch"
                  },
                  "operator": "++"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "constant": "\"Reserving DMA channels 0 and 1 for HS ROM code\\n\""
                          }
                        ],
                        "callee": "pr_info"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "dma_chan[0]",
                            "rightOperand": "dev_id",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "dma_chan[1]",
                            "rightOperand": "dev_id",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "constant": "1"
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "dev_caps"
                      }
                    }
                  },
                  "rightOperand": {
                    "identifier": "HS_CHANNELS_RESERVED"
                  },
                  "operator": "&"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "callExpression": {
                    "argumentList": [],
                    "callee": "show_dma_caps"
                  }
                }
              }
            }
          },
          {
            "returnStatement": {
              "constant": "0"
            }
          },
          {
            "label": "exit_dma_irq_fail:"
          },
          {
            "returnStatement": {
              "identifier": "ret"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_system_dma_remove",
        "parameterList": [
          {
            "parameterType": "struct platform_device *",
            "parameter": "pdev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "dma_irq",
                "identifierType": "int"
              },
              {
                "identifier": "irq_rel",
                "identifierType": "int",
                "initialValue": "0"
              }
            ]
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "omap_system_dma_driver",
          "identifierType": "struct platform_driver"
        }
      ]
    },
    {
      "functionDef": {
        "functionName": "omap_system_dma_init",
        "parameterList": [
          {
            "parameterType": "void",
            "parameter": "<anonymous>"
          }
        ],
        "functionBody": [
          {
            "returnStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "omap_system_dma_driver"
                      }
                    }
                  }
                ],
                "callee": "platform_driver_register"
              }
            }
          }
        ],
        "returnType": "static int __init"
      }
    },
    {
      "functionDef": {
        "functionName": "arch_initcall"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_system_dma_exit",
        "parameterList": [
          {
            "parameterType": "void",
            "parameter": "<anonymous>"
          }
        ],
        "functionBody": [
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "omap_system_dma_driver"
                      }
                    }
                  }
                ],
                "callee": "platform_driver_unregister"
              }
            }
          }
        ],
        "returnType": "static void __exit"
      }
    },
    {
      "functionDef": {
        "functionName": "MODULE_DESCRIPTION"
      }
    },
    {
      "functionDef": {
        "functionName": "MODULE_LICENSE"
      }
    },
    {
      "functionDef": {
        "functionName": "MODULE_AUTHOR"
      }
    },
    {
      "functionDef": {
        "functionName": "omap_dma_cmdline_reserve_ch",
        "parameterList": [
          {
            "parameterType": "char *",
            "parameter": "str"
          }
        ],
        "functionBody": [
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "omap_dma_reserve_channels"
                    },
                    "rightOperand": {
                      "constant": "0"
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "callExpression": {
                      "argumentList": [
                        {
                          "unaryOperationExpression": {
                            "operator": "&",
                            "operand": {
                              "identifier": "str"
                            }
                          }
                        },
                        {
                          "unaryOperationExpression": {
                            "operator": "&",
                            "operand": {
                              "identifier": "omap_dma_reserve_channels"
                            }
                          }
                        }
                      ],
                      "callee": "get_option"
                    }
                  },
                  "rightOperand": {
                    "constant": "1"
                  },
                  "operator": "!="
                }
              }
            }
          },
          {
            "returnStatement": {
              "constant": "1"
            }
          }
        ],
        "returnType": "static int __init"
      }
    },
    {
      "functionDef": {
        "functionName": "__setup"
      }
    }
  ]
}

{
  "filename": "3w-9xxx_from_niejianglei.c",
  "content": [
    {
      "functionDef": {
        "functionName": "DEFINE_MUTEX"
      }
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "twa_device_extension_list",
          "identifierType": "TW_Device_Extension * [ TW_MAX_SLOT ]"
        }
      ]
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "twa_device_extension_count",
          "identifierType": "unsigned int"
        }
      ]
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "twa_major",
          "identifierType": "int"
        }
      ]
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "sys_tz",
          "identifierType": "struct timezone"
        }
      ]
    },
    {
      "functionDef": {
        "functionName": "MODULE_AUTHOR"
      }
    },
    {
      "functionDef": {
        "functionName": "MODULE_DESCRIPTION"
      }
    },
    {
      "functionDef": {
        "functionName": "MODULE_LICENSE"
      }
    },
    {
      "functionDef": {
        "functionName": "MODULE_VERSION"
      }
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "use_msi",
          "identifierType": "int"
        }
      ]
    },
    {
      "functionDef": {
        "functionName": "module_param"
      }
    },
    {
      "functionDef": {
        "functionName": "MODULE_PARM_DESC"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_aen_queue_event",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "TW_Command_Apache_Header *",
            "parameter": "header"
          }
        ],
        "functionBody": [],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_aen_read_queue",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          }
        ],
        "functionBody": [],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_aen_severity_lookup",
        "parameterList": [
          {
            "parameterType": "unsigned char",
            "parameter": "severity_code"
          }
        ],
        "functionBody": [],
        "returnType": "static char *"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_aen_sync_time",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          }
        ],
        "functionBody": [],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_chrdev_ioctl",
        "parameterList": [
          {
            "parameterType": "struct file *",
            "parameter": "file"
          },
          {
            "parameterType": "unsigned int",
            "parameter": "cmd"
          },
          {
            "parameterType": "unsigned long",
            "parameter": "arg"
          }
        ],
        "functionBody": [],
        "returnType": "static long"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_chrdev_open",
        "parameterList": [
          {
            "parameterType": "struct inode *",
            "parameter": "inode"
          },
          {
            "parameterType": "struct file *",
            "parameter": "file"
          }
        ],
        "functionBody": [],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_fill_sense",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "int",
            "parameter": "copy_sense"
          },
          {
            "parameterType": "int",
            "parameter": "print_host"
          }
        ],
        "functionBody": [],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_free_request_id",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          }
        ],
        "functionBody": [],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_get_request_id",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int *",
            "parameter": "request_id"
          }
        ],
        "functionBody": [],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_initconnection",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "message_credits"
          },
          {
            "parameterType": "u32",
            "parameter": "set_features"
          },
          {
            "parameterType": "unsigned short",
            "parameter": "current_fw_srl"
          },
          {
            "parameterType": "unsigned short",
            "parameter": "current_fw_arch_id"
          },
          {
            "parameterType": "unsigned short",
            "parameter": "current_fw_branch"
          },
          {
            "parameterType": "unsigned short",
            "parameter": "current_fw_build"
          },
          {
            "parameterType": "unsigned short *",
            "parameter": "fw_on_ctlr_srl"
          },
          {
            "parameterType": "unsigned short *",
            "parameter": "fw_on_ctlr_arch_id"
          },
          {
            "parameterType": "unsigned short *",
            "parameter": "fw_on_ctlr_branch"
          },
          {
            "parameterType": "unsigned short *",
            "parameter": "fw_on_ctlr_build"
          },
          {
            "parameterType": "u32 *",
            "parameter": "init_connect_result"
          }
        ],
        "functionBody": [],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_load_sgl",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "TW_Command_Full *",
            "parameter": "full_command_packet"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "dma_addr_t",
            "parameter": "dma_handle"
          },
          {
            "parameterType": "int",
            "parameter": "length"
          }
        ],
        "functionBody": [],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_poll_response",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "int",
            "parameter": "seconds"
          }
        ],
        "functionBody": [],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_poll_status_gone",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "u32",
            "parameter": "flag"
          },
          {
            "parameterType": "int",
            "parameter": "seconds"
          }
        ],
        "functionBody": [],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_post_command_packet",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "char",
            "parameter": "internal"
          }
        ],
        "functionBody": [],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_reset_device_extension",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          }
        ],
        "functionBody": [],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_reset_sequence",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "soft_reset"
          }
        ],
        "functionBody": [],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_scsiop_execute_scsi",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "unsigned char *",
            "parameter": "cdb"
          },
          {
            "parameterType": "int",
            "parameter": "use_sg"
          },
          {
            "parameterType": "TW_SG_Entry *",
            "parameter": "sglistarg"
          }
        ],
        "functionBody": [],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_scsiop_execute_scsi_complete",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          }
        ],
        "functionBody": [],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_string_lookup",
        "parameterList": [
          {
            "parameterType": "twa_message_type *",
            "parameter": "table"
          },
          {
            "parameterType": "unsigned int",
            "parameter": "aen_code"
          }
        ],
        "functionBody": [],
        "returnType": "static char *"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_show_stats",
        "parameterList": [
          {
            "parameterType": "struct device *",
            "parameter": "dev"
          },
          {
            "parameterType": "struct device_attribute *",
            "parameter": "attr"
          },
          {
            "parameterType": "char *",
            "parameter": "buf"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "host",
                "identifierType": "struct Scsi_Host *",
                "initialValue": "class_to_shost(dev)"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_dev",
                "identifierType": "TW_Device_Extension *",
                "initialValue": "(TW_Device_Extension *)host->hostdata"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "flags",
                "identifierType": "unsigned long",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "len",
                "identifierType": "ssize_t"
              }
            ]
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "host_lock"
                      }
                    }
                  },
                  {
                    "identifier": "flags"
                  }
                ],
                "callee": "spin_lock_irqsave"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "len"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "buf"
                      },
                      {
                        "identifier": "PAGE_SIZE"
                      },
                      {
                        "constant": "\"3w-9xxx Driver version: %s\\n\"\r\\n\\t\\t       \"Current commands posted:   %4d\\n\"\r\\n\\t\\t       \"Max commands posted:       %4d\\n\"\r\\n\\t\\t       \"Current pending commands:  %4d\\n\"\r\\n\\t\\t       \"Max pending commands:      %4d\\n\"\r\\n\\t\\t       \"Last sgl length:           %4d\\n\"\r\\n\\t\\t       \"Max sgl length:            %4d\\n\"\r\\n\\t\\t       \"Last sector count:         %4d\\n\"\r\\n\\t\\t       \"Max sector count:          %4d\\n\"\r\\n\\t\\t       \"SCSI Host Resets:          %4d\\n\"\r\\n\\t\\t       \"AEN's:                     %4d\\n\""
                      },
                      {
                        "identifier": "TW_DRIVER_VERSION"
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "posted_request_count"
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "max_posted_request_count"
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "pending_request_count"
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "max_pending_request_count"
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "sgl_entries"
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "max_sgl_entries"
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "sector_count"
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "max_sector_count"
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "num_resets"
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "aen_count"
                          }
                        }
                      }
                    ],
                    "callee": "snprintf"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "host_lock"
                      }
                    }
                  },
                  {
                    "identifier": "flags"
                  }
                ],
                "callee": "spin_unlock_irqrestore"
              }
            }
          },
          {
            "returnStatement": {
              "identifier": "len"
            }
          }
        ],
        "returnType": "static ssize_t"
      }
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "twa_host_stats_attr",
          "identifierType": "struct device_attribute"
        }
      ]
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "twa_host_attrs[]",
          "identifierType": "struct attribute *"
        }
      ]
    },
    {
      "functionDef": {
        "functionName": "ATTRIBUTE_GROUPS"
      }
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "twa_fops",
          "identifierType": "const struct file_operations"
        }
      ]
    },
    {
      "functionDef": {
        "functionName": "twa_command_mapped",
        "parameterList": [
          {
            "parameterType": "struct scsi_cmnd *",
            "parameter": "cmd"
          }
        ],
        "functionBody": [
          {
            "returnStatement": {
              "OrExpression": {
                "leftOperand": {
                  "EqualityExpression": {
                    "leftOperand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "cmd"
                          }
                        ],
                        "callee": "scsi_sg_count"
                      }
                    },
                    "rightOperand": {
                      "constant": "1"
                    },
                    "operator": "!="
                  }
                },
                "rightOperand": {
                  "RelationalExpression": {
                    "leftOperand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "cmd"
                          }
                        ],
                        "callee": "scsi_bufflen"
                      }
                    },
                    "rightOperand": {
                      "identifier": "TW_MIN_SGL_LENGTH"
                    },
                    "operator": ">="
                  }
                },
                "operator": "||"
              }
            }
          }
        ],
        "returnType": "static bool"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_aen_complete",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "command_packet",
                "identifierType": "TW_Command *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "header",
                "identifierType": "TW_Command_Apache_Header *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "aen",
                "identifierType": "unsigned short"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "header"
                },
                "rightOperand": {
                  "castExpression": {
                    "originalExpression": {
                      "unaryExpression": {
                        "operand": {
                          "arrayIndexing": {
                            "array": "generic_buffer_virt",
                            "index": {
                              "identifier": "request_id"
                            }
                          }
                        }
                      }
                    },
                    "target": "TW_Command_Apache_Header *"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "postIncDecOperationExpression": {
                    "operand": {
                      "identifier": "posted_request_count"
                    },
                    "operator": "--"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "aen"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "memberAccess": {
                              "leftOperand": "status_block",
                              "rightOperand": "error",
                              "operator": "."
                            }
                          }
                        }
                      }
                    ],
                    "callee": "le16_to_cpu"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "full_command_packet"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "command_packet_virt",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "command_packet"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "&",
                    "operand": {
                      "unaryExpression": {
                        "operand": {
                          "memberAccess": {
                            "leftOperand": "command",
                            "rightOperand": "oldcommand",
                            "operator": "."
                          }
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "gotoStatement": {
                          "goto": "out2"
                        }
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            },
                            {
                              "identifier": "request_id"
                            }
                          ],
                          "callee": "twa_aen_read_queue"
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "retval"
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "out"
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "callExpression": {
                      "argumentList": [
                        {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "opcode__sgloffset"
                            }
                          }
                        }
                      ],
                      "callee": "TW_OP_OUT"
                    }
                  },
                  "rightOperand": {
                    "identifier": "TW_OP_SET_PARAM"
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "switchStatement": {
              "condition": {
                "identifier": "aen"
              },
              "switchBlock": {
                "compoundStatement": [
                  {
                    "label": "case TW_AEN_QUEUE_EMPTY:"
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case TW_AEN_SYNC_TIME_WITH_HOST:"
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          },
                          {
                            "identifier": "request_id"
                          }
                        ],
                        "callee": "twa_aen_sync_time"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  },
                  {
                    "label": "default:"
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          },
                          {
                            "identifier": "header"
                          }
                        ],
                        "callee": "twa_aen_queue_event"
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "gotoStatement": {
                          "goto": "out2"
                        }
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            },
                            {
                              "identifier": "request_id"
                            }
                          ],
                          "callee": "twa_aen_read_queue"
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "retval"
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "out"
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out2:"
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "state",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_S_COMPLETED"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  },
                  {
                    "identifier": "request_id"
                  }
                ],
                "callee": "twa_free_request_id"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "TW_IN_ATTENTION_LOOP"
                  },
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "flags"
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "clear_bit"
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_aen_drain_queue",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "no_check_reset"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "request_id",
                "identifierType": "int",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "cdb",
                "identifierType": "unsigned char [ TW_MAX_CDB_LEN ]"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "sglist",
                "identifierType": "TW_SG_Entry [ 1 ]"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "finished",
                "identifierType": "int",
                "initialValue": "0"
              },
              {
                "identifier": "count",
                "identifierType": "int",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "header",
                "identifierType": "TW_Command_Apache_Header *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "aen",
                "identifierType": "unsigned short"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "first_reset",
                "identifierType": "int",
                "initialValue": "0"
              },
              {
                "identifier": "queue",
                "identifierType": "int",
                "initialValue": "0"
              },
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "first_reset"
                    },
                    "rightOperand": {
                      "constant": "0"
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "identifier": "no_check_reset"
              },
              "elseBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "first_reset"
                    },
                    "rightOperand": {
                      "constant": "1"
                    },
                    "operator": "="
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "full_command_packet"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "command_packet_virt",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "full_command_packet"
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "sizeofExpression": {
                      "operator": "sizeof",
                      "operand": {
                        "identifier": "TW_Command_Full"
                      }
                    }
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "cdb"
                      }
                    }
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "identifier": "TW_MAX_CDB_LEN"
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "arrayIndexing": {
                    "array": "cdb",
                    "index": {
                      "constant": "0"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "REQUEST_SENSE"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "arrayIndexing": {
                    "array": "cdb",
                    "index": {
                      "constant": "4"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_ALLOCATION_LENGTH"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "sglist"
                      }
                    }
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "sizeofExpression": {
                      "operator": "sizeof",
                      "operand": {
                        "identifier": "TW_SG_Entry"
                      }
                    }
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "sglist[0]",
                    "rightOperand": "length",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "TW_SECTOR_SIZE"
                      }
                    ],
                    "callee": "cpu_to_le32"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "sglist[0]",
                    "rightOperand": "address",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "arrayIndexing": {
                              "array": "generic_buffer_phys",
                              "index": {
                                "identifier": "request_id"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "callee": "TW_CPU_TO_SGL"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x1"
                          },
                          {
                            "constant": "\"Found unaligned address during AEN drain\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "unaryExpression": {
                      "operand": {
                        "arrayIndexing": {
                          "array": "generic_buffer_phys",
                          "index": {
                            "identifier": "request_id"
                          }
                        }
                      }
                    }
                  },
                  "rightOperand": {
                    "identifier": "TW_ALIGNMENT_9000_SGL"
                  },
                  "operator": "&"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "srb",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "NULL"
                },
                "operator": "="
              }
            }
          },
          {
            "doWhileStatement": {
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "identifier": "finished"
                      },
                      "rightOperand": {
                        "constant": "0"
                      },
                      "operator": "=="
                    }
                  },
                  "rightOperand": {
                    "RelationalExpression": {
                      "leftOperand": {
                        "identifier": "count"
                      },
                      "rightOperand": {
                        "identifier": "TW_MAX_AEN_DRAIN"
                      },
                      "operator": "<"
                    }
                  },
                  "operator": "&&"
                }
              },
              "doWhileBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "host"
                                      }
                                    }
                                  },
                                  {
                                    "identifier": "TW_DRIVER"
                                  },
                                  {
                                    "constant": "0x2"
                                  },
                                  {
                                    "constant": "\"Error posting request sense\""
                                  }
                                ],
                                "callee": "TW_PRINTK"
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "out"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            },
                            {
                              "identifier": "request_id"
                            },
                            {
                              "identifier": "cdb"
                            },
                            {
                              "constant": "1"
                            },
                            {
                              "identifier": "sglist"
                            }
                          ],
                          "callee": "twa_scsiop_execute_scsi"
                        }
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "host"
                                      }
                                    }
                                  },
                                  {
                                    "identifier": "TW_DRIVER"
                                  },
                                  {
                                    "constant": "0x3"
                                  },
                                  {
                                    "constant": "\"No valid response while draining AEN queue\""
                                  }
                                ],
                                "callee": "TW_PRINTK"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "unaryExpression": {
                                "operand": {
                                  "postIncDecOperationExpression": {
                                    "operand": {
                                      "identifier": "posted_request_count"
                                    },
                                    "operator": "--"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "out"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            },
                            {
                              "identifier": "request_id"
                            },
                            {
                              "constant": "30"
                            }
                          ],
                          "callee": "twa_poll_response"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "postIncDecOperationExpression": {
                            "operand": {
                              "identifier": "posted_request_count"
                            },
                            "operator": "--"
                          }
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "header"
                        },
                        "rightOperand": {
                          "castExpression": {
                            "originalExpression": {
                              "unaryExpression": {
                                "operand": {
                                  "arrayIndexing": {
                                    "array": "generic_buffer_virt",
                                    "index": {
                                      "identifier": "request_id"
                                    }
                                  }
                                }
                              }
                            },
                            "target": "TW_Command_Apache_Header *"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "aen"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "unaryExpression": {
                                  "operand": {
                                    "memberAccess": {
                                      "leftOperand": "status_block",
                                      "rightOperand": "error",
                                      "operator": "."
                                    }
                                  }
                                }
                              }
                            ],
                            "callee": "le16_to_cpu"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "queue"
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "postIncDecOperationExpression": {
                        "operand": {
                          "identifier": "count"
                        },
                        "operator": "++"
                      }
                    }
                  },
                  {
                    "switchStatement": {
                      "condition": {
                        "identifier": "aen"
                      },
                      "switchBlock": {
                        "compoundStatement": [
                          {
                            "label": "case TW_AEN_QUEUE_EMPTY:"
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "gotoStatement": {
                                  "goto": "out"
                                }
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "identifier": "first_reset"
                                  },
                                  "rightOperand": {
                                    "constant": "1"
                                  },
                                  "operator": "!="
                                }
                              },
                              "elseBlock": {
                                "expressionStatement": {
                                  "AssignmentExpression": {
                                    "leftOperand": {
                                      "identifier": "finished"
                                    },
                                    "rightOperand": {
                                      "constant": "1"
                                    },
                                    "operator": "="
                                  }
                                }
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          },
                          {
                            "label": "case TW_AEN_SOFT_RESET:"
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "expressionStatement": {
                                  "AssignmentExpression": {
                                    "leftOperand": {
                                      "identifier": "first_reset"
                                    },
                                    "rightOperand": {
                                      "constant": "1"
                                    },
                                    "operator": "="
                                  }
                                }
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "identifier": "first_reset"
                                  },
                                  "rightOperand": {
                                    "constant": "0"
                                  },
                                  "operator": "=="
                                }
                              },
                              "elseBlock": {
                                "expressionStatement": {
                                  "AssignmentExpression": {
                                    "leftOperand": {
                                      "identifier": "queue"
                                    },
                                    "rightOperand": {
                                      "constant": "1"
                                    },
                                    "operator": "="
                                  }
                                }
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          },
                          {
                            "label": "case TW_AEN_SYNC_TIME_WITH_HOST:"
                          },
                          {
                            "breakStatement": "break"
                          },
                          {
                            "label": "default:"
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "queue"
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "tw_dev"
                              },
                              {
                                "identifier": "header"
                              }
                            ],
                            "callee": "twa_aen_queue_event"
                          }
                        }
                      },
                      "condition": {
                        "identifier": "queue"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "out"
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "identifier": "count"
                  },
                  "rightOperand": {
                    "identifier": "TW_MAX_AEN_DRAIN"
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "state",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_S_INITIAL"
                },
                "operator": "="
              }
            }
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_aen_queue_event",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "TW_Command_Apache_Header *",
            "parameter": "header"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "local_time",
                "identifierType": "u32"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "event",
                "identifierType": "TW_Event *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "aen",
                "identifierType": "unsigned short"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "host",
                "identifierType": "char [ 16 ]"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "error_str",
                "identifierType": "char *"
              }
            ]
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "postIncDecOperationExpression": {
                    "operand": {
                      "identifier": "aen_count"
                    },
                    "operator": "++"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "event"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "event_queue",
                        "index": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "error_index"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "arrayIndexing": {
                    "array": "host",
                    "index": {
                      "constant": "0"
                    }
                  }
                },
                "rightOperand": {
                  "constant": "'\\0'"
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "host"
                          },
                          {
                            "constant": "\" scsi%d:\""
                          },
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host_no"
                              }
                            }
                          }
                        ],
                        "callee": "sprintf"
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "AssignmentExpression": {
                            "leftOperand": {
                              "unaryExpression": {
                                "operand": {
                                  "identifier": "aen_clobber"
                                }
                              }
                            },
                            "rightOperand": {
                              "constant": "1"
                            },
                            "operator": "="
                          }
                        }
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "retrieved"
                              }
                            }
                          },
                          "rightOperand": {
                            "identifier": "TW_AEN_NOT_RETRIEVED"
                          },
                          "operator": "=="
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "unaryExpression": {
                  "operand": {
                    "identifier": "host"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "aen"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "memberAccess": {
                              "leftOperand": "status_block",
                              "rightOperand": "error",
                              "operator": "."
                            }
                          }
                        }
                      }
                    ],
                    "callee": "le16_to_cpu"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "event"
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "sizeofExpression": {
                      "operator": "sizeof",
                      "operand": {
                        "identifier": "TW_Event"
                      }
                    }
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "severity"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "memberAccess": {
                              "leftOperand": "status_block",
                              "rightOperand": "severity__reserved",
                              "operator": "."
                            }
                          }
                        }
                      }
                    ],
                    "callee": "TW_SEV_OUT"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "local_time"
                },
                "rightOperand": {
                  "castExpression": {
                    "originalExpression": {
                      "AdditiveExpression": {
                        "leftOperand": {
                          "callExpression": {
                            "argumentList": [],
                            "callee": "ktime_get_real_seconds"
                          }
                        },
                        "rightOperand": {
                          "MultiplicativeExpression": {
                            "leftOperand": {
                              "memberAccess": {
                                "leftOperand": "sys_tz",
                                "rightOperand": "tz_minuteswest",
                                "operator": "."
                              }
                            },
                            "rightOperand": {
                              "constant": "60"
                            },
                            "operator": "*"
                          }
                        },
                        "operator": "-"
                      }
                    },
                    "target": "u32"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "time_stamp_sec"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "local_time"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "aen_code"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "aen"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "retrieved"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_AEN_NOT_RETRIEVED"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "sequence_id"
                    }
                  }
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "error_sequence_id"
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "postIncDecOperationExpression": {
                    "operand": {
                      "identifier": "error_sequence_id"
                    },
                    "operator": "++"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "error_str"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "&",
                    "operand": {
                      "unaryExpression": {
                        "operand": {
                          "arrayIndexing": {
                            "array": "err_specific_desc",
                            "index": {
                              "AdditiveExpression": {
                                "leftOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "unaryExpression": {
                                          "operand": {
                                            "identifier": "err_specific_desc"
                                          }
                                        }
                                      }
                                    ],
                                    "callee": "strlen"
                                  }
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "+"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "err_specific_desc",
                        "index": {
                          "AdditiveExpression": {
                            "leftOperand": {
                              "sizeofExpression": {
                                "operator": "sizeof",
                                "operand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "err_specific_desc"
                                    }
                                  }
                                }
                              }
                            },
                            "rightOperand": {
                              "constant": "1"
                            },
                            "operator": "-"
                          }
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "constant": "'\\0'"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "parameter_len"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "err_specific_desc"
                          }
                        }
                      }
                    ],
                    "callee": "strlen"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "parameter_data"
                      }
                    }
                  },
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "err_specific_desc"
                      }
                    }
                  },
                  {
                    "AdditiveExpression": {
                      "leftOperand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "parameter_len"
                          }
                        }
                      },
                      "rightOperand": {
                        "conditionalExpression": {
                          "condition": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "arrayIndexing": {
                                  "array": "error_str",
                                  "index": {
                                    "constant": "0"
                                  }
                                }
                              },
                              "rightOperand": {
                                "constant": "'\\0'"
                              },
                              "operator": "=="
                            }
                          },
                          "trueExpression": {
                            "constant": "0"
                          },
                          "falseExpression": {
                            "AdditiveExpression": {
                              "leftOperand": {
                                "constant": "1"
                              },
                              "rightOperand": {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "identifier": "error_str"
                                    }
                                  ],
                                  "callee": "strlen"
                                }
                              },
                              "operator": "+"
                            }
                          }
                        }
                      },
                      "operator": "+"
                    }
                  }
                ],
                "callee": "memcpy"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {},
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "severity"
                      }
                    }
                  },
                  "rightOperand": {
                    "identifier": "TW_AEN_SEVERITY_DEBUG"
                  },
                  "operator": "!="
                }
              },
              "elseBlock": {
                "expressionStatement": {
                  "unaryExpression": {
                    "operand": {
                      "postIncDecOperationExpression": {
                        "operand": {
                          "identifier": "aen_count"
                        },
                        "operator": "--"
                      }
                    }
                  }
                }
              }
            }
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "expressionStatement": {}
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "unaryExpression": {
                        "operand": {
                          "identifier": "event_queue_wrapped"
                        }
                      }
                    },
                    "rightOperand": {
                      "constant": "1"
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "AdditiveExpression": {
                      "leftOperand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "error_index"
                          }
                        }
                      },
                      "rightOperand": {
                        "constant": "1"
                      },
                      "operator": "+"
                    }
                  },
                  "rightOperand": {
                    "identifier": "TW_Q_LENGTH"
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "error_index"
                    }
                  }
                },
                "rightOperand": {
                  "MultiplicativeExpression": {
                    "leftOperand": {
                      "AdditiveExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "error_index"
                            }
                          }
                        },
                        "rightOperand": {
                          "constant": "1"
                        },
                        "operator": "+"
                      }
                    },
                    "rightOperand": {
                      "identifier": "TW_Q_LENGTH"
                    },
                    "operator": "%"
                  }
                },
                "operator": "="
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_aen_read_queue",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "cdb",
                "identifierType": "unsigned char [ TW_MAX_CDB_LEN ]"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "sglist",
                "identifierType": "TW_SG_Entry [ 1 ]"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "full_command_packet"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "command_packet_virt",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "full_command_packet"
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "sizeofExpression": {
                      "operator": "sizeof",
                      "operand": {
                        "identifier": "TW_Command_Full"
                      }
                    }
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "cdb"
                      }
                    }
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "identifier": "TW_MAX_CDB_LEN"
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "arrayIndexing": {
                    "array": "cdb",
                    "index": {
                      "constant": "0"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "REQUEST_SENSE"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "arrayIndexing": {
                    "array": "cdb",
                    "index": {
                      "constant": "4"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_ALLOCATION_LENGTH"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "sglist"
                      }
                    }
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "sizeofExpression": {
                      "operator": "sizeof",
                      "operand": {
                        "identifier": "TW_SG_Entry"
                      }
                    }
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "sglist[0]",
                    "rightOperand": "length",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "TW_SECTOR_SIZE"
                      }
                    ],
                    "callee": "cpu_to_le32"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "memberAccess": {
                    "leftOperand": "sglist[0]",
                    "rightOperand": "address",
                    "operator": "."
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "arrayIndexing": {
                              "array": "generic_buffer_phys",
                              "index": {
                                "identifier": "request_id"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "callee": "TW_CPU_TO_SGL"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "srb",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "NULL"
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x4"
                          },
                          {
                            "constant": "\"Post failed while reading AEN queue\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "identifier": "request_id"
                    },
                    {
                      "identifier": "cdb"
                    },
                    {
                      "constant": "1"
                    },
                    {
                      "identifier": "sglist"
                    }
                  ],
                  "callee": "twa_scsiop_execute_scsi"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_aen_severity_lookup",
        "parameterList": [
          {
            "parameterType": "unsigned char",
            "parameter": "severity_code"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "char *",
                "initialValue": "NULL"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "out"
                }
              },
              "condition": {
                "OrExpression": {
                  "leftOperand": {
                    "RelationalExpression": {
                      "leftOperand": {
                        "identifier": "severity_code"
                      },
                      "rightOperand": {
                        "castExpression": {
                          "originalExpression": {
                            "identifier": "TW_AEN_SEVERITY_ERROR"
                          },
                          "target": "unsigned char"
                        }
                      },
                      "operator": "<"
                    }
                  },
                  "rightOperand": {
                    "RelationalExpression": {
                      "leftOperand": {
                        "identifier": "severity_code"
                      },
                      "rightOperand": {
                        "castExpression": {
                          "originalExpression": {
                            "identifier": "TW_AEN_SEVERITY_DEBUG"
                          },
                          "target": "unsigned char"
                        }
                      },
                      "operator": ">"
                    }
                  },
                  "operator": "||"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "arrayIndexing": {
                    "array": "twa_aen_severity_table",
                    "index": {
                      "identifier": "severity_code"
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static char *"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_aen_sync_time",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "schedulertime",
                "identifierType": "u32"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "command_packet",
                "identifierType": "TW_Command *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "param",
                "identifierType": "TW_Param_Apache *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "local_time",
                "identifierType": "time64_t"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "full_command_packet"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "command_packet_virt",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "full_command_packet"
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "sizeofExpression": {
                      "operator": "sizeof",
                      "operand": {
                        "identifier": "TW_Command_Full"
                      }
                    }
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "command_packet"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "&",
                    "operand": {
                      "unaryExpression": {
                        "operand": {
                          "memberAccess": {
                            "leftOperand": "command",
                            "rightOperand": "oldcommand",
                            "operator": "."
                          }
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "opcode__sgloffset"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "2"
                      },
                      {
                        "identifier": "TW_OP_SET_PARAM"
                      }
                    ],
                    "callee": "TW_OPSGL_IN"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "request_id"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "request_id"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "byte8_offset.param.sgl[0]",
                        "rightOperand": "address",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "arrayIndexing": {
                              "array": "generic_buffer_phys",
                              "index": {
                                "identifier": "request_id"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "callee": "TW_CPU_TO_SGL"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "byte8_offset.param.sgl[0]",
                        "rightOperand": "length",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "TW_SECTOR_SIZE"
                      }
                    ],
                    "callee": "cpu_to_le32"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "size"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_COMMAND_SIZE"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "byte6_offset",
                        "rightOperand": "parameter_count",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "1"
                      }
                    ],
                    "callee": "cpu_to_le16"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "param"
                },
                "rightOperand": {
                  "castExpression": {
                    "originalExpression": {
                      "unaryExpression": {
                        "operand": {
                          "arrayIndexing": {
                            "array": "generic_buffer_virt",
                            "index": {
                              "identifier": "request_id"
                            }
                          }
                        }
                      }
                    },
                    "target": "TW_Param_Apache *"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "param"
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "identifier": "TW_SECTOR_SIZE"
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "table_id"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "InclusiveOrExpression": {
                          "leftOperand": {
                            "identifier": "TW_TIMEKEEP_TABLE"
                          },
                          "rightOperand": {
                            "constant": "0x8000"
                          },
                          "operator": "|"
                        }
                      }
                    ],
                    "callee": "cpu_to_le16"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "parameter_id"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "0x3"
                      }
                    ],
                    "callee": "cpu_to_le16"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "parameter_size_bytes"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "4"
                      }
                    ],
                    "callee": "cpu_to_le16"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "local_time"
                },
                "rightOperand": {
                  "AdditiveExpression": {
                    "leftOperand": {
                      "callExpression": {
                        "argumentList": [],
                        "callee": "ktime_get_real_seconds"
                      }
                    },
                    "rightOperand": {
                      "MultiplicativeExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "sys_tz",
                            "rightOperand": "tz_minuteswest",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "constant": "60"
                        },
                        "operator": "*"
                      }
                    },
                    "operator": "-"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "AdditiveExpression": {
                      "leftOperand": {
                        "identifier": "local_time"
                      },
                      "rightOperand": {
                        "MultiplicativeExpression": {
                          "leftOperand": {
                            "constant": "3"
                          },
                          "rightOperand": {
                            "constant": "86400"
                          },
                          "operator": "*"
                        }
                      },
                      "operator": "-"
                    }
                  },
                  {
                    "constant": "604800"
                  },
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "schedulertime"
                      }
                    }
                  }
                ],
                "callee": "div_u64_rem"
              }
            }
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "compoundStatement": [
              {},
              {},
              {},
              {}
            ]
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "expressionStatement": {}
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "srb",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "NULL"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  },
                  {
                    "identifier": "request_id"
                  },
                  {
                    "constant": "1"
                  }
                ],
                "callee": "twa_post_command_packet"
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_allocate_memory",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "size"
          },
          {
            "parameterType": "int",
            "parameter": "which"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "i",
                "identifierType": "int"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "dma_handle",
                "identifierType": "dma_addr_t"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "cpu_addr",
                "identifierType": "unsigned long *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "cpu_addr"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "dev"
                              }
                            }
                          }
                        }
                      },
                      {
                        "MultiplicativeExpression": {
                          "leftOperand": {
                            "identifier": "size"
                          },
                          "rightOperand": {
                            "identifier": "TW_Q_LENGTH"
                          },
                          "operator": "*"
                        }
                      },
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "identifier": "dma_handle"
                          }
                        }
                      },
                      {
                        "identifier": "GFP_KERNEL"
                      }
                    ],
                    "callee": "dma_alloc_coherent"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x5"
                          },
                          {
                            "constant": "\"Memory allocation failed\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "identifier": "cpu_addr"
                  }
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x6"
                          },
                          {
                            "constant": "\"Failed to allocate correctly aligned memory\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryOperationExpression": {
                              "operator": "&",
                              "operand": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "dev"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "MultiplicativeExpression": {
                              "leftOperand": {
                                "identifier": "size"
                              },
                              "rightOperand": {
                                "identifier": "TW_Q_LENGTH"
                              },
                              "operator": "*"
                            }
                          },
                          {
                            "identifier": "cpu_addr"
                          },
                          {
                            "identifier": "dma_handle"
                          }
                        ],
                        "callee": "dma_free_coherent"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "MultiplicativeExpression": {
                  "leftOperand": {
                    "castExpression": {
                      "originalExpression": {
                        "identifier": "cpu_addr"
                      },
                      "target": "unsigned long"
                    }
                  },
                  "rightOperand": {
                    "identifier": "TW_ALIGNMENT_9000"
                  },
                  "operator": "%"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "cpu_addr"
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "MultiplicativeExpression": {
                      "leftOperand": {
                        "identifier": "size"
                      },
                      "rightOperand": {
                        "identifier": "TW_Q_LENGTH"
                      },
                      "operator": "*"
                    }
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "forStatement": {
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "i"
                  },
                  "rightOperand": {
                    "identifier": "TW_Q_LENGTH"
                  },
                  "operator": "<"
                }
              },
              "forInit": {
                "AssignmentExpression": {
                  "leftOperand": {
                    "identifier": "i"
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "="
                }
              },
              "forBlock": {
                "compoundStatement": [
                  {
                    "switchStatement": {
                      "condition": {
                        "identifier": "which"
                      },
                      "switchBlock": {
                        "compoundStatement": [
                          {
                            "label": "case 0:"
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "arrayIndexing": {
                                        "array": "command_packet_phys",
                                        "index": {
                                          "identifier": "i"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "AdditiveExpression": {
                                    "leftOperand": {
                                      "identifier": "dma_handle"
                                    },
                                    "rightOperand": {
                                      "MultiplicativeExpression": {
                                        "leftOperand": {
                                          "identifier": "i"
                                        },
                                        "rightOperand": {
                                          "identifier": "size"
                                        },
                                        "operator": "*"
                                      }
                                    },
                                    "operator": "+"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "arrayIndexing": {
                                        "array": "command_packet_virt",
                                        "index": {
                                          "identifier": "i"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "castExpression": {
                                    "originalExpression": {
                                      "AdditiveExpression": {
                                        "leftOperand": {
                                          "castExpression": {
                                            "originalExpression": {
                                              "identifier": "cpu_addr"
                                            },
                                            "target": "unsigned char *"
                                          }
                                        },
                                        "rightOperand": {
                                          "MultiplicativeExpression": {
                                            "leftOperand": {
                                              "identifier": "i"
                                            },
                                            "rightOperand": {
                                              "identifier": "size"
                                            },
                                            "operator": "*"
                                          }
                                        },
                                        "operator": "+"
                                      }
                                    },
                                    "target": "TW_Command_Full *"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          },
                          {
                            "label": "case 1:"
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "arrayIndexing": {
                                        "array": "generic_buffer_phys",
                                        "index": {
                                          "identifier": "i"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "AdditiveExpression": {
                                    "leftOperand": {
                                      "identifier": "dma_handle"
                                    },
                                    "rightOperand": {
                                      "MultiplicativeExpression": {
                                        "leftOperand": {
                                          "identifier": "i"
                                        },
                                        "rightOperand": {
                                          "identifier": "size"
                                        },
                                        "operator": "*"
                                      }
                                    },
                                    "operator": "+"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "arrayIndexing": {
                                        "array": "generic_buffer_virt",
                                        "index": {
                                          "identifier": "i"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "castExpression": {
                                    "originalExpression": {
                                      "AdditiveExpression": {
                                        "leftOperand": {
                                          "castExpression": {
                                            "originalExpression": {
                                              "identifier": "cpu_addr"
                                            },
                                            "target": "unsigned char *"
                                          }
                                        },
                                        "rightOperand": {
                                          "MultiplicativeExpression": {
                                            "leftOperand": {
                                              "identifier": "i"
                                            },
                                            "rightOperand": {
                                              "identifier": "size"
                                            },
                                            "operator": "*"
                                          }
                                        },
                                        "operator": "+"
                                      }
                                    },
                                    "target": "unsigned long *"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "forLoop": {
                "postIncDecOperationExpression": {
                  "operand": {
                    "identifier": "i"
                  },
                  "operator": "++"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_check_bits",
        "parameterList": [
          {
            "parameterType": "u32",
            "parameter": "status_reg_value"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "out"
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "identifier": "status_reg_value"
                      },
                      "rightOperand": {
                        "identifier": "TW_STATUS_EXPECTED_BITS"
                      },
                      "operator": "&"
                    }
                  },
                  "rightOperand": {
                    "identifier": "TW_STATUS_EXPECTED_BITS"
                  },
                  "operator": "!="
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "out"
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "identifier": "status_reg_value"
                      },
                      "rightOperand": {
                        "identifier": "TW_STATUS_UNEXPECTED_BITS"
                      },
                      "operator": "&"
                    }
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "!="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_check_srl",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int *",
            "parameter": "flashed"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "fw_on_ctlr_srl",
                "identifierType": "unsigned short",
                "initialValue": "0"
              },
              {
                "identifier": "fw_on_ctlr_arch_id",
                "identifierType": "unsigned short",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "fw_on_ctlr_branch",
                "identifierType": "unsigned short",
                "initialValue": "0"
              },
              {
                "identifier": "fw_on_ctlr_build",
                "identifierType": "unsigned short",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "init_connect_result",
                "identifierType": "u32",
                "initialValue": "0"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x7"
                          },
                          {
                            "constant": "\"Initconnection failed while checking SRL\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "identifier": "TW_INIT_MESSAGE_CREDITS"
                    },
                    {
                      "identifier": "TW_EXTENDED_INIT_CONNECT"
                    },
                    {
                      "identifier": "TW_CURRENT_DRIVER_SRL"
                    },
                    {
                      "identifier": "TW_9000_ARCH_ID"
                    },
                    {
                      "identifier": "TW_CURRENT_DRIVER_BRANCH"
                    },
                    {
                      "identifier": "TW_CURRENT_DRIVER_BUILD"
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "identifier": "fw_on_ctlr_srl"
                        }
                      }
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "identifier": "fw_on_ctlr_arch_id"
                        }
                      }
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "identifier": "fw_on_ctlr_branch"
                        }
                      }
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "identifier": "fw_on_ctlr_build"
                        }
                      }
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "identifier": "init_connect_result"
                        }
                      }
                    }
                  ],
                  "callee": "twa_initconnection"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "working_srl",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "fw_on_ctlr_srl"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "working_branch",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "fw_on_ctlr_branch"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "working_build",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "fw_on_ctlr_build"
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "host"
                                      }
                                    }
                                  },
                                  {
                                    "identifier": "TW_DRIVER"
                                  },
                                  {
                                    "constant": "0xa"
                                  },
                                  {
                                    "constant": "\"Initconnection (base mode) failed while checking SRL\""
                                  }
                                ],
                                "callee": "TW_PRINTK"
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "out"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            },
                            {
                              "identifier": "TW_INIT_MESSAGE_CREDITS"
                            },
                            {
                              "identifier": "TW_EXTENDED_INIT_CONNECT"
                            },
                            {
                              "identifier": "TW_BASE_FW_SRL"
                            },
                            {
                              "identifier": "TW_9000_ARCH_ID"
                            },
                            {
                              "identifier": "TW_BASE_FW_BRANCH"
                            },
                            {
                              "identifier": "TW_BASE_FW_BUILD"
                            },
                            {
                              "unaryOperationExpression": {
                                "operator": "&",
                                "operand": {
                                  "identifier": "fw_on_ctlr_srl"
                                }
                              }
                            },
                            {
                              "unaryOperationExpression": {
                                "operator": "&",
                                "operand": {
                                  "identifier": "fw_on_ctlr_arch_id"
                                }
                              }
                            },
                            {
                              "unaryOperationExpression": {
                                "operator": "&",
                                "operand": {
                                  "identifier": "fw_on_ctlr_branch"
                                }
                              }
                            },
                            {
                              "unaryOperationExpression": {
                                "operator": "&",
                                "operand": {
                                  "identifier": "fw_on_ctlr_build"
                                }
                              }
                            },
                            {
                              "unaryOperationExpression": {
                                "operator": "&",
                                "operand": {
                                  "identifier": "init_connect_result"
                                }
                              }
                            }
                          ],
                          "callee": "twa_initconnection"
                        }
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "unaryExpression": {
                                              "operand": {
                                                "identifier": "host"
                                              }
                                            }
                                          },
                                          {
                                            "identifier": "TW_DRIVER"
                                          },
                                          {
                                            "constant": "0x32"
                                          },
                                          {
                                            "constant": "\"Firmware and driver incompatibility: please upgrade firmware\""
                                          }
                                        ],
                                        "callee": "TW_PRINTK"
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "RelationalExpression": {
                                  "leftOperand": {
                                    "identifier": "TW_CURRENT_DRIVER_SRL"
                                  },
                                  "rightOperand": {
                                    "identifier": "fw_on_ctlr_srl"
                                  },
                                  "operator": ">"
                                }
                              },
                              "elseBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "unaryExpression": {
                                              "operand": {
                                                "identifier": "host"
                                              }
                                            }
                                          },
                                          {
                                            "identifier": "TW_DRIVER"
                                          },
                                          {
                                            "constant": "0x33"
                                          },
                                          {
                                            "constant": "\"Firmware and driver incompatibility: please upgrade driver\""
                                          }
                                        ],
                                        "callee": "TW_PRINTK"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "out"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "unaryOperationExpression": {
                          "operator": "!",
                          "operand": {
                            "BitAndExpression": {
                              "leftOperand": {
                                "identifier": "init_connect_result"
                              },
                              "rightOperand": {
                                "identifier": "TW_CTLR_FW_COMPATIBLE"
                              },
                              "operator": "&"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "memberAccess": {
                                "leftOperand": "tw_compat_info",
                                "rightOperand": "working_srl",
                                "operator": "."
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_BASE_FW_SRL"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "memberAccess": {
                                "leftOperand": "tw_compat_info",
                                "rightOperand": "working_branch",
                                "operator": "."
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_BASE_FW_BRANCH"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "memberAccess": {
                                "leftOperand": "tw_compat_info",
                                "rightOperand": "working_build",
                                "operator": "."
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_BASE_FW_BUILD"
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "identifier": "init_connect_result"
                      },
                      "rightOperand": {
                        "identifier": "TW_CTLR_FW_COMPATIBLE"
                      },
                      "operator": "&"
                    }
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "memberAccess": {
                          "leftOperand": "tw_compat_info",
                          "rightOperand": "driver_version",
                          "operator": "."
                        }
                      }
                    }
                  },
                  {
                    "identifier": "TW_DRIVER_VERSION"
                  },
                  {
                    "sizeofExpression": {
                      "operator": "sizeof",
                      "operand": {
                        "unaryExpression": {
                          "operand": {
                            "memberAccess": {
                              "leftOperand": "tw_compat_info",
                              "rightOperand": "driver_version",
                              "operator": "."
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "strlcpy"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "driver_srl_high",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_CURRENT_DRIVER_SRL"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "driver_branch_high",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_CURRENT_DRIVER_BRANCH"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "driver_build_high",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_CURRENT_DRIVER_BUILD"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "driver_srl_low",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_BASE_FW_SRL"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "driver_branch_low",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_BASE_FW_BRANCH"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "driver_build_low",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_BASE_FW_BUILD"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "fw_on_ctlr_srl",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "fw_on_ctlr_srl"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "fw_on_ctlr_branch",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "fw_on_ctlr_branch"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "tw_compat_info",
                        "rightOperand": "fw_on_ctlr_build",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "fw_on_ctlr_build"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_chrdev_ioctl",
        "parameterList": [
          {
            "parameterType": "struct file *",
            "parameter": "file"
          },
          {
            "parameterType": "unsigned int",
            "parameter": "cmd"
          },
          {
            "parameterType": "unsigned long",
            "parameter": "arg"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "inode",
                "identifierType": "struct inode *",
                "initialValue": "file_inode(file)"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "timeout",
                "identifierType": "long"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "cpu_addr",
                "identifierType": "unsigned long *"
              },
              {
                "identifier": "data_buffer_length_adjusted",
                "identifierType": "unsigned long",
                "initialValue": "0"
              },
              {
                "identifier": "flags",
                "identifierType": "unsigned long",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "dma_handle",
                "identifierType": "dma_addr_t"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "request_id",
                "identifierType": "int",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "sequence_id",
                "identifierType": "unsigned int",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "event_index",
                "identifierType": "unsigned char"
              },
              {
                "identifier": "start_index",
                "identifierType": "unsigned char"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "driver_command",
                "identifierType": "TW_Ioctl_Driver_Command"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_ioctl",
                "identifierType": "TW_Ioctl_Buf_Apache *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_lock",
                "identifierType": "TW_Lock *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_compat_info",
                "identifierType": "TW_Compatibility_Info *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "event",
                "identifierType": "TW_Event *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "current_time",
                "identifierType": "ktime_t"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_dev",
                "identifierType": "TW_Device_Extension *",
                "initialValue": "twa_device_extension_list[iminor(inode)]"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "TW_IOCTL_ERROR_OS_EFAULT"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "argp",
                "identifierType": "void __user *",
                "initialValue": "(void __user *)arg"
              }
            ]
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "twa_chrdev_mutex"
                      }
                    }
                  }
                ],
                "callee": "mutex_lock"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "identifier": "TW_IOCTL_ERROR_OS_EINTR"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "ioctl_lock"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "callee": "mutex_lock_interruptible"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "out2"
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "identifier": "driver_command"
                        }
                      }
                    },
                    {
                      "identifier": "argp"
                    },
                    {
                      "sizeofExpression": {
                        "operator": "sizeof",
                        "operand": {
                          "identifier": "TW_Ioctl_Driver_Command"
                        }
                      }
                    }
                  ],
                  "callee": "copy_from_user"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "identifier": "TW_IOCTL_ERROR_OS_EINVAL"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out2"
                    }
                  }
                ]
              },
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "memberAccess": {
                      "leftOperand": "driver_command",
                      "rightOperand": "buffer_length",
                      "operator": "."
                    }
                  },
                  "rightOperand": {
                    "MultiplicativeExpression": {
                      "leftOperand": {
                        "identifier": "TW_MAX_SECTORS"
                      },
                      "rightOperand": {
                        "constant": "2048"
                      },
                      "operator": "*"
                    }
                  },
                  "operator": ">"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "data_buffer_length_adjusted"
                },
                "rightOperand": {
                  "BitAndExpression": {
                    "leftOperand": {
                      "AdditiveExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "driver_command",
                            "rightOperand": "buffer_length",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "constant": "511"
                        },
                        "operator": "+"
                      }
                    },
                    "rightOperand": {
                      "identifier": "~511"
                    },
                    "operator": "&"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "cpu_addr"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "dev"
                              }
                            }
                          }
                        }
                      },
                      {
                        "AdditiveExpression": {
                          "leftOperand": {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "TW_Ioctl_Buf_Apache"
                              }
                            }
                          },
                          "rightOperand": {
                            "identifier": "data_buffer_length_adjusted"
                          },
                          "operator": "+"
                        }
                      },
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "identifier": "dma_handle"
                          }
                        }
                      },
                      {
                        "identifier": "GFP_KERNEL"
                      }
                    ],
                    "callee": "dma_alloc_coherent"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "identifier": "TW_IOCTL_ERROR_OS_ENOMEM"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out2"
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "identifier": "cpu_addr"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "tw_ioctl"
                },
                "rightOperand": {
                  "castExpression": {
                    "originalExpression": {
                      "identifier": "cpu_addr"
                    },
                    "target": "TW_Ioctl_Buf_Apache *"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "out3"
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_ioctl"
                    },
                    {
                      "identifier": "argp"
                    },
                    {
                      "AdditiveExpression": {
                        "leftOperand": {
                          "sizeofExpression": {
                            "operator": "sizeof",
                            "operand": {
                              "identifier": "TW_Ioctl_Buf_Apache"
                            }
                          }
                        },
                        "rightOperand": {
                          "memberAccess": {
                            "leftOperand": "driver_command",
                            "rightOperand": "buffer_length",
                            "operator": "."
                          }
                        },
                        "operator": "+"
                      }
                    }
                  ],
                  "callee": "copy_from_user"
                }
              }
            }
          },
          {
            "switchStatement": {
              "condition": {
                "identifier": "cmd"
              },
              "switchBlock": {
                "compoundStatement": [
                  {
                    "label": "case TW_IOCTL_FIRMWARE_PASS_THROUGH:"
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host_lock"
                              }
                            }
                          },
                          {
                            "identifier": "flags"
                          }
                        ],
                        "callee": "spin_lock_irqsave"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          },
                          {
                            "unaryOperationExpression": {
                              "operator": "&",
                              "operand": {
                                "identifier": "request_id"
                              }
                            }
                          }
                        ],
                        "callee": "twa_get_request_id"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "arrayIndexing": {
                                "array": "srb",
                                "index": {
                                  "identifier": "request_id"
                                }
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "NULL"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "chrdev_request_id"
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "request_id"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "full_command_packet"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "&",
                            "operand": {
                              "unaryExpression": {
                                "operand": {
                                  "identifier": "firmware_command"
                                }
                              }
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          },
                          {
                            "identifier": "full_command_packet"
                          },
                          {
                            "identifier": "request_id"
                          },
                          {
                            "identifier": "dma_handle"
                          },
                          {
                            "identifier": "data_buffer_length_adjusted"
                          }
                        ],
                        "callee": "twa_load_sgl"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "arrayIndexing": {
                                  "array": "command_packet_virt",
                                  "index": {
                                    "identifier": "request_id"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "unaryOperationExpression": {
                              "operator": "&",
                              "operand": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "firmware_command"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "TW_Command_Full"
                              }
                            }
                          }
                        ],
                        "callee": "memcpy"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          },
                          {
                            "identifier": "request_id"
                          },
                          {
                            "constant": "1"
                          }
                        ],
                        "callee": "twa_post_command_packet"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host_lock"
                              }
                            }
                          },
                          {
                            "identifier": "flags"
                          }
                        ],
                        "callee": "spin_unlock_irqrestore"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "timeout"
                        },
                        "rightOperand": {
                          "MultiplicativeExpression": {
                            "leftOperand": {
                              "identifier": "TW_IOCTL_CHRDEV_TIMEOUT"
                            },
                            "rightOperand": {
                              "identifier": "HZ"
                            },
                            "operator": "*"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "timeout"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "ioctl_wqueue"
                                  }
                                }
                              },
                              {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "chrdev_request_id"
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "TW_IOCTL_CHRDEV_FREE"
                                  },
                                  "operator": "=="
                                }
                              },
                              {
                                "identifier": "timeout"
                              }
                            ],
                            "callee": "wait_event_timeout"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {
                            "expressionStatement": {}
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "retval"
                                },
                                "rightOperand": {
                                  "identifier": "TW_IOCTL_ERROR_OS_EIO"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "tw_dev"
                                  }
                                ],
                                "callee": "twa_reset_device_extension"
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "out3"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "chrdev_request_id"
                              }
                            }
                          },
                          "rightOperand": {
                            "identifier": "TW_IOCTL_CHRDEV_FREE"
                          },
                          "operator": "!="
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryOperationExpression": {
                              "operator": "&",
                              "operand": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "firmware_command"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "unaryExpression": {
                              "operand": {
                                "arrayIndexing": {
                                  "array": "command_packet_virt",
                                  "index": {
                                    "identifier": "request_id"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "TW_Command_Full"
                              }
                            }
                          }
                        ],
                        "callee": "memcpy"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host_lock"
                              }
                            }
                          },
                          {
                            "identifier": "flags"
                          }
                        ],
                        "callee": "spin_lock_irqsave"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "postIncDecOperationExpression": {
                            "operand": {
                              "identifier": "posted_request_count"
                            },
                            "operator": "--"
                          }
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "arrayIndexing": {
                                "array": "state",
                                "index": {
                                  "identifier": "request_id"
                                }
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_S_COMPLETED"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          },
                          {
                            "identifier": "request_id"
                          }
                        ],
                        "callee": "twa_free_request_id"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host_lock"
                              }
                            }
                          },
                          {
                            "identifier": "flags"
                          }
                        ],
                        "callee": "spin_unlock_irqrestore"
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case TW_IOCTL_GET_COMPATIBILITY_INFO:"
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "memberAccess": {
                                "leftOperand": "driver_command",
                                "rightOperand": "status",
                                "operator": "."
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "tw_compat_info"
                        },
                        "rightOperand": {
                          "castExpression": {
                            "originalExpression": {
                              "unaryExpression": {
                                "operand": {
                                  "identifier": "data_buffer"
                                }
                              }
                            },
                            "target": "TW_Compatibility_Info *"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_compat_info"
                          },
                          {
                            "unaryOperationExpression": {
                              "operator": "&",
                              "operand": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "tw_compat_info"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "TW_Compatibility_Info"
                              }
                            }
                          }
                        ],
                        "callee": "memcpy"
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case TW_IOCTL_GET_LAST_EVENT:"
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "memberAccess": {
                                                "leftOperand": "driver_command",
                                                "rightOperand": "status",
                                                "operator": "."
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_IOCTL_ERROR_STATUS_AEN_CLOBBER"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "aen_clobber"
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "constant": "0"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "aen_clobber"
                                  }
                                }
                              },
                              "elseBlock": {
                                "expressionStatement": {
                                  "AssignmentExpression": {
                                    "leftOperand": {
                                      "unaryExpression": {
                                        "operand": {
                                          "memberAccess": {
                                            "leftOperand": "driver_command",
                                            "rightOperand": "status",
                                            "operator": "."
                                          }
                                        }
                                      }
                                    },
                                    "rightOperand": {
                                      "constant": "0"
                                    },
                                    "operator": "="
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "event_queue_wrapped"
                          }
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "memberAccess": {
                                                "leftOperand": "driver_command",
                                                "rightOperand": "status",
                                                "operator": "."
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_IOCTL_ERROR_STATUS_NO_MORE_EVENTS"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "breakStatement": "break"
                                  }
                                ]
                              },
                              "condition": {
                                "unaryOperationExpression": {
                                  "operator": "!",
                                  "operand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "error_index"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "driver_command",
                                        "rightOperand": "status",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "event_index"
                        },
                        "rightOperand": {
                          "MultiplicativeExpression": {
                            "leftOperand": {
                              "AdditiveExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "error_index"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "AdditiveExpression": {
                                    "leftOperand": {
                                      "constant": "1"
                                    },
                                    "rightOperand": {
                                      "identifier": "TW_Q_LENGTH"
                                    },
                                    "operator": "+"
                                  }
                                },
                                "operator": "-"
                              }
                            },
                            "rightOperand": {
                              "identifier": "TW_Q_LENGTH"
                            },
                            "operator": "%"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "data_buffer"
                              }
                            }
                          },
                          {
                            "unaryExpression": {
                              "operand": {
                                "arrayIndexing": {
                                  "array": "event_queue",
                                  "index": {
                                    "identifier": "event_index"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "TW_Event"
                              }
                            }
                          }
                        ],
                        "callee": "memcpy"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "ptrMemberAccess": {
                                "leftOperand": "event_queue[event_index]",
                                "rightOperand": "retrieved",
                                "operator": "->"
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_AEN_RETRIEVED"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case TW_IOCTL_GET_FIRST_EVENT:"
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "memberAccess": {
                                                "leftOperand": "driver_command",
                                                "rightOperand": "status",
                                                "operator": "."
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_IOCTL_ERROR_STATUS_AEN_CLOBBER"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "aen_clobber"
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "constant": "0"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "aen_clobber"
                                  }
                                }
                              },
                              "elseBlock": {
                                "expressionStatement": {
                                  "AssignmentExpression": {
                                    "leftOperand": {
                                      "unaryExpression": {
                                        "operand": {
                                          "memberAccess": {
                                            "leftOperand": "driver_command",
                                            "rightOperand": "status",
                                            "operator": "."
                                          }
                                        }
                                      }
                                    },
                                    "rightOperand": {
                                      "constant": "0"
                                    },
                                    "operator": "="
                                  }
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "event_index"
                                },
                                "rightOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "error_index"
                                    }
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "event_queue_wrapped"
                          }
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "memberAccess": {
                                                "leftOperand": "driver_command",
                                                "rightOperand": "status",
                                                "operator": "."
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_IOCTL_ERROR_STATUS_NO_MORE_EVENTS"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "breakStatement": "break"
                                  }
                                ]
                              },
                              "condition": {
                                "unaryOperationExpression": {
                                  "operator": "!",
                                  "operand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "error_index"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "driver_command",
                                        "rightOperand": "status",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "event_index"
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "data_buffer"
                              }
                            }
                          },
                          {
                            "unaryExpression": {
                              "operand": {
                                "arrayIndexing": {
                                  "array": "event_queue",
                                  "index": {
                                    "identifier": "event_index"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "TW_Event"
                              }
                            }
                          }
                        ],
                        "callee": "memcpy"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "ptrMemberAccess": {
                                "leftOperand": "event_queue[event_index]",
                                "rightOperand": "retrieved",
                                "operator": "->"
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_AEN_RETRIEVED"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case TW_IOCTL_GET_NEXT_EVENT:"
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "event"
                        },
                        "rightOperand": {
                          "castExpression": {
                            "originalExpression": {
                              "unaryExpression": {
                                "operand": {
                                  "identifier": "data_buffer"
                                }
                              }
                            },
                            "target": "TW_Event *"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "sequence_id"
                        },
                        "rightOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "sequence_id"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "memberAccess": {
                                "leftOperand": "driver_command",
                                "rightOperand": "status",
                                "operator": "."
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "memberAccess": {
                                                "leftOperand": "driver_command",
                                                "rightOperand": "status",
                                                "operator": "."
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_IOCTL_ERROR_STATUS_AEN_CLOBBER"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "aen_clobber"
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "constant": "0"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "aen_clobber"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "start_index"
                                },
                                "rightOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "error_index"
                                    }
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "event_queue_wrapped"
                          }
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "memberAccess": {
                                                "leftOperand": "driver_command",
                                                "rightOperand": "status",
                                                "operator": "."
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_IOCTL_ERROR_STATUS_NO_MORE_EVENTS"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "breakStatement": "break"
                                  }
                                ]
                              },
                              "condition": {
                                "unaryOperationExpression": {
                                  "operator": "!",
                                  "operand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "error_index"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "start_index"
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "event_index"
                        },
                        "rightOperand": {
                          "MultiplicativeExpression": {
                            "leftOperand": {
                              "AdditiveExpression": {
                                "leftOperand": {
                                  "identifier": "start_index"
                                },
                                "rightOperand": {
                                  "AdditiveExpression": {
                                    "leftOperand": {
                                      "identifier": "sequence_id"
                                    },
                                    "rightOperand": {
                                      "AdditiveExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "ptrMemberAccess": {
                                                "leftOperand": "event_queue[start_index]",
                                                "rightOperand": "sequence_id",
                                                "operator": "->"
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "constant": "1"
                                        },
                                        "operator": "+"
                                      }
                                    },
                                    "operator": "-"
                                  }
                                },
                                "operator": "+"
                              }
                            },
                            "rightOperand": {
                              "identifier": "TW_Q_LENGTH"
                            },
                            "operator": "%"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "expressionStatement": {
                                  "AssignmentExpression": {
                                    "leftOperand": {
                                      "unaryExpression": {
                                        "operand": {
                                          "identifier": "aen_clobber"
                                        }
                                      }
                                    },
                                    "rightOperand": {
                                      "constant": "1"
                                    },
                                    "operator": "="
                                  }
                                }
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "memberAccess": {
                                          "leftOperand": "driver_command",
                                          "rightOperand": "status",
                                          "operator": "."
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "TW_IOCTL_ERROR_STATUS_AEN_CLOBBER"
                                  },
                                  "operator": "=="
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "driver_command",
                                        "rightOperand": "status",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "identifier": "TW_IOCTL_ERROR_STATUS_NO_MORE_EVENTS"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          }
                        ]
                      },
                      "condition": {
                        "unaryOperationExpression": {
                          "operator": "!",
                          "operand": {
                            "RelationalExpression": {
                              "leftOperand": {
                                "unaryExpression": {
                                  "operand": {
                                    "ptrMemberAccess": {
                                      "leftOperand": "event_queue[event_index]",
                                      "rightOperand": "sequence_id",
                                      "operator": "->"
                                    }
                                  }
                                }
                              },
                              "rightOperand": {
                                "identifier": "sequence_id"
                              },
                              "operator": ">"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "data_buffer"
                              }
                            }
                          },
                          {
                            "unaryExpression": {
                              "operand": {
                                "arrayIndexing": {
                                  "array": "event_queue",
                                  "index": {
                                    "identifier": "event_index"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "TW_Event"
                              }
                            }
                          }
                        ],
                        "callee": "memcpy"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "ptrMemberAccess": {
                                "leftOperand": "event_queue[event_index]",
                                "rightOperand": "retrieved",
                                "operator": "->"
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_AEN_RETRIEVED"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case TW_IOCTL_GET_PREVIOUS_EVENT:"
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "event"
                        },
                        "rightOperand": {
                          "castExpression": {
                            "originalExpression": {
                              "unaryExpression": {
                                "operand": {
                                  "identifier": "data_buffer"
                                }
                              }
                            },
                            "target": "TW_Event *"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "sequence_id"
                        },
                        "rightOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "sequence_id"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "memberAccess": {
                                "leftOperand": "driver_command",
                                "rightOperand": "status",
                                "operator": "."
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "memberAccess": {
                                                "leftOperand": "driver_command",
                                                "rightOperand": "status",
                                                "operator": "."
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_IOCTL_ERROR_STATUS_AEN_CLOBBER"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "aen_clobber"
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "constant": "0"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "aen_clobber"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "start_index"
                                },
                                "rightOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "error_index"
                                    }
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "event_queue_wrapped"
                          }
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "memberAccess": {
                                                "leftOperand": "driver_command",
                                                "rightOperand": "status",
                                                "operator": "."
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_IOCTL_ERROR_STATUS_NO_MORE_EVENTS"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "breakStatement": "break"
                                  }
                                ]
                              },
                              "condition": {
                                "unaryOperationExpression": {
                                  "operator": "!",
                                  "operand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "error_index"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "start_index"
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "event_index"
                        },
                        "rightOperand": {
                          "MultiplicativeExpression": {
                            "leftOperand": {
                              "AdditiveExpression": {
                                "leftOperand": {
                                  "identifier": "start_index"
                                },
                                "rightOperand": {
                                  "AdditiveExpression": {
                                    "leftOperand": {
                                      "identifier": "sequence_id"
                                    },
                                    "rightOperand": {
                                      "AdditiveExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "ptrMemberAccess": {
                                                "leftOperand": "event_queue[start_index]",
                                                "rightOperand": "sequence_id",
                                                "operator": "->"
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "constant": "1"
                                        },
                                        "operator": "-"
                                      }
                                    },
                                    "operator": "-"
                                  }
                                },
                                "operator": "+"
                              }
                            },
                            "rightOperand": {
                              "identifier": "TW_Q_LENGTH"
                            },
                            "operator": "%"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "expressionStatement": {
                                  "AssignmentExpression": {
                                    "leftOperand": {
                                      "unaryExpression": {
                                        "operand": {
                                          "identifier": "aen_clobber"
                                        }
                                      }
                                    },
                                    "rightOperand": {
                                      "constant": "1"
                                    },
                                    "operator": "="
                                  }
                                }
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "memberAccess": {
                                          "leftOperand": "driver_command",
                                          "rightOperand": "status",
                                          "operator": "."
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "TW_IOCTL_ERROR_STATUS_AEN_CLOBBER"
                                  },
                                  "operator": "=="
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "driver_command",
                                        "rightOperand": "status",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "identifier": "TW_IOCTL_ERROR_STATUS_NO_MORE_EVENTS"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "breakStatement": "break"
                          }
                        ]
                      },
                      "condition": {
                        "unaryOperationExpression": {
                          "operator": "!",
                          "operand": {
                            "RelationalExpression": {
                              "leftOperand": {
                                "unaryExpression": {
                                  "operand": {
                                    "ptrMemberAccess": {
                                      "leftOperand": "event_queue[event_index]",
                                      "rightOperand": "sequence_id",
                                      "operator": "->"
                                    }
                                  }
                                }
                              },
                              "rightOperand": {
                                "identifier": "sequence_id"
                              },
                              "operator": "<"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "data_buffer"
                              }
                            }
                          },
                          {
                            "unaryExpression": {
                              "operand": {
                                "arrayIndexing": {
                                  "array": "event_queue",
                                  "index": {
                                    "identifier": "event_index"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "TW_Event"
                              }
                            }
                          }
                        ],
                        "callee": "memcpy"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "ptrMemberAccess": {
                                "leftOperand": "event_queue[event_index]",
                                "rightOperand": "retrieved",
                                "operator": "->"
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_AEN_RETRIEVED"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case TW_IOCTL_GET_LOCK:"
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "tw_lock"
                        },
                        "rightOperand": {
                          "castExpression": {
                            "originalExpression": {
                              "unaryExpression": {
                                "operand": {
                                  "identifier": "data_buffer"
                                }
                              }
                            },
                            "target": "TW_Lock *"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "current_time"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [],
                            "callee": "ktime_get"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "ioctl_sem_lock"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "ioctl_time"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "identifier": "current_time"
                                      },
                                      {
                                        "unaryExpression": {
                                          "operand": {
                                            "identifier": "timeout_msec"
                                          }
                                        }
                                      }
                                    ],
                                    "callee": "ktime_add_ms"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "driver_command",
                                        "rightOperand": "status",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "time_remaining_msec"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "timeout_msec"
                                    }
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "OrExpression": {
                          "leftOperand": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "force_flag"
                                  }
                                }
                              },
                              "rightOperand": {
                                "constant": "1"
                              },
                              "operator": "=="
                            }
                          },
                          "rightOperand": {
                            "OrExpression": {
                              "leftOperand": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "ioctl_sem_lock"
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "constant": "0"
                                  },
                                  "operator": "=="
                                }
                              },
                              "rightOperand": {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "identifier": "current_time"
                                    },
                                    {
                                      "unaryExpression": {
                                        "operand": {
                                          "identifier": "ioctl_time"
                                        }
                                      }
                                    }
                                  ],
                                  "callee": "ktime_after"
                                }
                              },
                              "operator": "||"
                            }
                          },
                          "operator": "||"
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "driver_command",
                                        "rightOperand": "status",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "identifier": "TW_IOCTL_ERROR_STATUS_LOCKED"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "time_remaining_msec"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "unaryExpression": {
                                          "operand": {
                                            "identifier": "ioctl_time"
                                          }
                                        }
                                      },
                                      {
                                        "identifier": "current_time"
                                      }
                                    ],
                                    "callee": "ktime_ms_delta"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case TW_IOCTL_RELEASE_LOCK:"
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "ioctl_sem_lock"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "driver_command",
                                        "rightOperand": "status",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "ioctl_sem_lock"
                              }
                            }
                          },
                          "rightOperand": {
                            "constant": "1"
                          },
                          "operator": "=="
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "driver_command",
                                        "rightOperand": "status",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "identifier": "TW_IOCTL_ERROR_STATUS_NOT_LOCKED"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "default:"
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "identifier": "TW_IOCTL_ERROR_OS_ENOTTY"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out3"
                    }
                  }
                ]
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "retval"
                    },
                    "rightOperand": {
                      "constant": "0"
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "callExpression": {
                      "argumentList": [
                        {
                          "identifier": "argp"
                        },
                        {
                          "identifier": "tw_ioctl"
                        },
                        {
                          "AdditiveExpression": {
                            "leftOperand": {
                              "sizeofExpression": {
                                "operator": "sizeof",
                                "operand": {
                                  "identifier": "TW_Ioctl_Buf_Apache"
                                }
                              }
                            },
                            "rightOperand": {
                              "memberAccess": {
                                "leftOperand": "driver_command",
                                "rightOperand": "buffer_length",
                                "operator": "."
                              }
                            },
                            "operator": "+"
                          }
                        }
                      ],
                      "callee": "copy_to_user"
                    }
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "label": "out3:"
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "dev"
                          }
                        }
                      }
                    }
                  },
                  {
                    "AdditiveExpression": {
                      "leftOperand": {
                        "sizeofExpression": {
                          "operator": "sizeof",
                          "operand": {
                            "identifier": "TW_Ioctl_Buf_Apache"
                          }
                        }
                      },
                      "rightOperand": {
                        "identifier": "data_buffer_length_adjusted"
                      },
                      "operator": "+"
                    }
                  },
                  {
                    "identifier": "cpu_addr"
                  },
                  {
                    "identifier": "dma_handle"
                  }
                ],
                "callee": "dma_free_coherent"
              }
            }
          },
          {
            "label": "out2:"
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "ioctl_lock"
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "mutex_unlock"
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "twa_chrdev_mutex"
                      }
                    }
                  }
                ],
                "callee": "mutex_unlock"
              }
            }
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static long"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_chrdev_open",
        "parameterList": [
          {
            "parameterType": "struct inode *",
            "parameter": "inode"
          },
          {
            "parameterType": "struct file *",
            "parameter": "file"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "minor_number",
                "identifierType": "unsigned int"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "TW_IOCTL_ERROR_OS_ENODEV"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "identifier": "EACCES"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "callExpression": {
                      "argumentList": [
                        {
                          "identifier": "CAP_SYS_ADMIN"
                        }
                      ],
                      "callee": "capable"
                    }
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "minor_number"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "inode"
                      }
                    ],
                    "callee": "iminor"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "out"
                }
              },
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "minor_number"
                  },
                  "rightOperand": {
                    "identifier": "twa_device_extension_count"
                  },
                  "operator": ">="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_decode_bits",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "u32",
            "parameter": "status_reg_value"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0xc"
                          },
                          {
                            "constant": "\"PCI Parity Error: clearing\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "TW_CONTROL_CLEAR_PARITY_ERROR"
                          },
                          {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "identifier": "tw_dev"
                                }
                              ],
                              "callee": "TW_CONTROL_REG_ADDR"
                            }
                          }
                        ],
                        "callee": "writel"
                      }
                    }
                  }
                ]
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "identifier": "status_reg_value"
                  },
                  "rightOperand": {
                    "identifier": "TW_STATUS_PCI_PARITY_ERROR"
                  },
                  "operator": "&"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0xd"
                          },
                          {
                            "constant": "\"PCI Abort: clearing\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "TW_CONTROL_CLEAR_PCI_ABORT"
                          },
                          {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "identifier": "tw_dev"
                                }
                              ],
                              "callee": "TW_CONTROL_REG_ADDR"
                            }
                          }
                        ],
                        "callee": "writel"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "tw_pci_dev"
                              }
                            }
                          },
                          {
                            "identifier": "PCI_STATUS"
                          },
                          {
                            "identifier": "TW_PCI_CLEAR_PCI_ABORT"
                          }
                        ],
                        "callee": "pci_write_config_word"
                      }
                    }
                  }
                ]
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "identifier": "status_reg_value"
                  },
                  "rightOperand": {
                    "identifier": "TW_STATUS_PCI_ABORT"
                  },
                  "operator": "&"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "host"
                                  }
                                }
                              },
                              {
                                "identifier": "TW_DRIVER"
                              },
                              {
                                "constant": "0xe"
                              },
                              {
                                "constant": "\"Controller Queue Error: clearing\""
                              }
                            ],
                            "callee": "TW_PRINTK"
                          }
                        }
                      },
                      "condition": {
                        "OrExpression": {
                          "leftOperand": {
                            "AndExpression": {
                              "leftOperand": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "device"
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "PCI_DEVICE_ID_3WARE_9650SE"
                                  },
                                  "operator": "!="
                                }
                              },
                              "rightOperand": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "device"
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "PCI_DEVICE_ID_3WARE_9690SA"
                                  },
                                  "operator": "!="
                                }
                              },
                              "operator": "&&"
                            }
                          },
                          "rightOperand": {
                            "unaryOperationExpression": {
                              "operator": "!",
                              "operand": {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "identifier": "TW_IN_RESET"
                                    },
                                    {
                                      "unaryOperationExpression": {
                                        "operator": "&",
                                        "operand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "flags"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "callee": "test_bit"
                                }
                              }
                            }
                          },
                          "operator": "||"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "TW_CONTROL_CLEAR_QUEUE_ERROR"
                          },
                          {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "identifier": "tw_dev"
                                }
                              ],
                              "callee": "TW_CONTROL_REG_ADDR"
                            }
                          }
                        ],
                        "callee": "writel"
                      }
                    }
                  }
                ]
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "identifier": "status_reg_value"
                  },
                  "rightOperand": {
                    "identifier": "TW_STATUS_QUEUE_ERROR"
                  },
                  "operator": "&"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "host"
                                      }
                                    }
                                  },
                                  {
                                    "identifier": "TW_DRIVER"
                                  },
                                  {
                                    "constant": "0x10"
                                  },
                                  {
                                    "constant": "\"Microcontroller Error: clearing\""
                                  }
                                ],
                                "callee": "TW_PRINTK"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "reset_print"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "reset_print"
                              }
                            }
                          },
                          "rightOperand": {
                            "constant": "0"
                          },
                          "operator": "=="
                        }
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "identifier": "status_reg_value"
                  },
                  "rightOperand": {
                    "identifier": "TW_STATUS_MICROCONTROLLER_ERROR"
                  },
                  "operator": "&"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_empty_response_queue",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "status_reg_value",
                "identifierType": "u32"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "count",
                "identifierType": "int",
                "initialValue": "0"
              },
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "status_reg_value"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            }
                          ],
                          "callee": "TW_STATUS_REG_ADDR"
                        }
                      }
                    ],
                    "callee": "readl"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "whileStatement": {
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "BitAndExpression": {
                          "leftOperand": {
                            "identifier": "status_reg_value"
                          },
                          "rightOperand": {
                            "identifier": "TW_STATUS_RESPONSE_QUEUE_EMPTY"
                          },
                          "operator": "&"
                        }
                      },
                      "rightOperand": {
                        "constant": "0"
                      },
                      "operator": "=="
                    }
                  },
                  "rightOperand": {
                    "RelationalExpression": {
                      "leftOperand": {
                        "identifier": "count"
                      },
                      "rightOperand": {
                        "identifier": "TW_MAX_RESPONSE_DRAIN"
                      },
                      "operator": "<"
                    }
                  },
                  "operator": "&&"
                }
              },
              "whileBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "identifier": "tw_dev"
                                }
                              ],
                              "callee": "TW_RESPONSE_QUEUE_REG_ADDR"
                            }
                          }
                        ],
                        "callee": "readl"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "status_reg_value"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "identifier": "tw_dev"
                                    }
                                  ],
                                  "callee": "TW_STATUS_REG_ADDR"
                                }
                              }
                            ],
                            "callee": "readl"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "postIncDecOperationExpression": {
                        "operand": {
                          "identifier": "count"
                        },
                        "operator": "++"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "out"
                }
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "identifier": "count"
                  },
                  "rightOperand": {
                    "identifier": "TW_MAX_RESPONSE_DRAIN"
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_empty_response_queue_large",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "response_que_value",
                "identifierType": "u32",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "before",
                "identifierType": "unsigned long"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "before"
                        },
                        "rightOperand": {
                          "identifier": "jiffies"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "whileStatement": {
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "BitAndExpression": {
                              "leftOperand": {
                                "identifier": "response_que_value"
                              },
                              "rightOperand": {
                                "identifier": "TW_9550SX_DRAIN_COMPLETED"
                              },
                              "operator": "&"
                            }
                          },
                          "rightOperand": {
                            "identifier": "TW_9550SX_DRAIN_COMPLETED"
                          },
                          "operator": "!="
                        }
                      },
                      "whileBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "response_que_value"
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "callExpression": {
                                          "argumentList": [
                                            {
                                              "identifier": "tw_dev"
                                            }
                                          ],
                                          "callee": "TW_RESPONSE_QUEUE_REG_ADDR_LARGE"
                                        }
                                      }
                                    ],
                                    "callee": "readl"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "constant": "1"
                                  }
                                ],
                                "callee": "msleep"
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "gotoStatement": {
                                  "goto": "out"
                                }
                              },
                              "condition": {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "identifier": "jiffies"
                                    },
                                    {
                                      "AdditiveExpression": {
                                        "leftOperand": {
                                          "identifier": "before"
                                        },
                                        "rightOperand": {
                                          "MultiplicativeExpression": {
                                            "leftOperand": {
                                              "identifier": "HZ"
                                            },
                                            "rightOperand": {
                                              "constant": "30"
                                            },
                                            "operator": "*"
                                          }
                                        },
                                        "operator": "+"
                                      }
                                    }
                                  ],
                                  "callee": "time_after"
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "constant": "500"
                          }
                        ],
                        "callee": "msleep"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "device"
                      }
                    }
                  },
                  "rightOperand": {
                    "identifier": "PCI_DEVICE_ID_3WARE_9000"
                  },
                  "operator": "!="
                }
              },
              "elseBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "retval"
                    },
                    "rightOperand": {
                      "constant": "0"
                    },
                    "operator": "="
                  }
                }
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_fill_sense",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "int",
            "parameter": "copy_sense"
          },
          {
            "parameterType": "int",
            "parameter": "print_host"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "error",
                "identifierType": "unsigned short"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "error_str",
                "identifierType": "char *"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "full_command_packet"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "command_packet_virt",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "error_str"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "&",
                    "operand": {
                      "unaryExpression": {
                        "operand": {
                          "arrayIndexing": {
                            "array": "header.err_specific_desc",
                            "index": {
                              "AdditiveExpression": {
                                "leftOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "unaryExpression": {
                                          "operand": {
                                            "memberAccess": {
                                              "leftOperand": "header",
                                              "rightOperand": "err_specific_desc",
                                              "operator": "."
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "callee": "strlen"
                                  }
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "+"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "error"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "memberAccess": {
                              "leftOperand": "header.status_block",
                              "rightOperand": "error",
                              "operator": "."
                            }
                          }
                        }
                      }
                    ],
                    "callee": "le16_to_cpu"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {},
                      "condition": {
                        "identifier": "print_host"
                      },
                      "elseBlock": {}
                    }
                  },
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {
                    "label": "error_str :"
                  },
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {
                    "expressionStatement": {}
                  },
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {
                    "label": "error_str :"
                  },
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {},
                  {
                    "expressionStatement": {}
                  }
                ]
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "identifier": "error"
                      },
                      "rightOperand": {
                        "identifier": "TW_ERROR_LOGICAL_UNIT_NOT_SUPPORTED"
                      },
                      "operator": "!="
                    }
                  },
                  "rightOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "identifier": "error"
                      },
                      "rightOperand": {
                        "identifier": "TW_ERROR_UNIT_OFFLINE"
                      },
                      "operator": "!="
                    }
                  },
                  "operator": "&&"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "ptrMemberAccess": {
                                  "leftOperand": "srb[request_id]",
                                  "rightOperand": "sense_buffer",
                                  "operator": "->"
                                }
                              }
                            }
                          },
                          {
                            "unaryExpression": {
                              "operand": {
                                "memberAccess": {
                                  "leftOperand": "header",
                                  "rightOperand": "sense_data",
                                  "operator": "."
                                }
                              }
                            }
                          },
                          {
                            "identifier": "TW_SENSE_DATA_LENGTH"
                          }
                        ],
                        "callee": "memcpy"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "ptrMemberAccess": {
                                "leftOperand": "srb[request_id]",
                                "rightOperand": "result",
                                "operator": "->"
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "ShiftExpression": {
                            "leftOperand": {
                              "unaryExpression": {
                                "operand": {
                                  "memberAccess": {
                                    "leftOperand": "command.newcommand",
                                    "rightOperand": "status",
                                    "operator": "."
                                  }
                                }
                              }
                            },
                            "rightOperand": {
                              "constant": "1"
                            },
                            "operator": "<<"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "identifier": "TW_ISR_DONT_RESULT"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "copy_sense"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_free_device_extension",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          }
        ],
        "functionBody": [
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "dev"
                              }
                            }
                          }
                        }
                      },
                      {
                        "MultiplicativeExpression": {
                          "leftOperand": {
                            "sizeofExpression": {
                              "operator": "sizeof",
                              "operand": {
                                "identifier": "TW_Command_Full"
                              }
                            }
                          },
                          "rightOperand": {
                            "identifier": "TW_Q_LENGTH"
                          },
                          "operator": "*"
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "arrayIndexing": {
                              "array": "command_packet_virt",
                              "index": {
                                "constant": "0"
                              }
                            }
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "arrayIndexing": {
                              "array": "command_packet_phys",
                              "index": {
                                "constant": "0"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "callee": "dma_free_coherent"
                  }
                }
              },
              "condition": {
                "unaryExpression": {
                  "operand": {
                    "arrayIndexing": {
                      "array": "command_packet_virt",
                      "index": {
                        "constant": "0"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "dev"
                              }
                            }
                          }
                        }
                      },
                      {
                        "MultiplicativeExpression": {
                          "leftOperand": {
                            "identifier": "TW_SECTOR_SIZE"
                          },
                          "rightOperand": {
                            "identifier": "TW_Q_LENGTH"
                          },
                          "operator": "*"
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "arrayIndexing": {
                              "array": "generic_buffer_virt",
                              "index": {
                                "constant": "0"
                              }
                            }
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "arrayIndexing": {
                              "array": "generic_buffer_phys",
                              "index": {
                                "constant": "0"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "callee": "dma_free_coherent"
                  }
                }
              },
              "condition": {
                "unaryExpression": {
                  "operand": {
                    "arrayIndexing": {
                      "array": "generic_buffer_virt",
                      "index": {
                        "constant": "0"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "arrayIndexing": {
                          "array": "event_queue",
                          "index": {
                            "constant": "0"
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "kfree"
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_free_request_id",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          }
        ],
        "functionBody": [
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "free_queue",
                        "index": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "free_tail"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "request_id"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "state",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_S_FINISHED"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "free_tail"
                    }
                  }
                },
                "rightOperand": {
                  "MultiplicativeExpression": {
                    "leftOperand": {
                      "AdditiveExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "free_tail"
                            }
                          }
                        },
                        "rightOperand": {
                          "constant": "1"
                        },
                        "operator": "+"
                      }
                    },
                    "rightOperand": {
                      "identifier": "TW_Q_LENGTH"
                    },
                    "operator": "%"
                  }
                },
                "operator": "="
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_get_param",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "int",
            "parameter": "table_id"
          },
          {
            "parameterType": "int",
            "parameter": "parameter_id"
          },
          {
            "parameterType": "int",
            "parameter": "parameter_size_bytes"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "command_packet",
                "identifierType": "TW_Command *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "param",
                "identifierType": "TW_Param_Apache *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "void *",
                "initialValue": "NULL"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "full_command_packet"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "command_packet_virt",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "full_command_packet"
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "sizeofExpression": {
                      "operator": "sizeof",
                      "operand": {
                        "identifier": "TW_Command_Full"
                      }
                    }
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "command_packet"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "&",
                    "operand": {
                      "unaryExpression": {
                        "operand": {
                          "memberAccess": {
                            "leftOperand": "command",
                            "rightOperand": "oldcommand",
                            "operator": "."
                          }
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "opcode__sgloffset"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "2"
                      },
                      {
                        "identifier": "TW_OP_GET_PARAM"
                      }
                    ],
                    "callee": "TW_OPSGL_IN"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "size"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_COMMAND_SIZE"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "request_id"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "request_id"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "byte6_offset",
                        "rightOperand": "block_count",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "1"
                      }
                    ],
                    "callee": "cpu_to_le16"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "param"
                },
                "rightOperand": {
                  "castExpression": {
                    "originalExpression": {
                      "unaryExpression": {
                        "operand": {
                          "arrayIndexing": {
                            "array": "generic_buffer_virt",
                            "index": {
                              "identifier": "request_id"
                            }
                          }
                        }
                      }
                    },
                    "target": "TW_Param_Apache *"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "param"
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "identifier": "TW_SECTOR_SIZE"
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "table_id"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "InclusiveOrExpression": {
                          "leftOperand": {
                            "identifier": "table_id"
                          },
                          "rightOperand": {
                            "constant": "0x8000"
                          },
                          "operator": "|"
                        }
                      }
                    ],
                    "callee": "cpu_to_le16"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "parameter_id"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "parameter_id"
                      }
                    ],
                    "callee": "cpu_to_le16"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "parameter_size_bytes"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "parameter_size_bytes"
                      }
                    ],
                    "callee": "cpu_to_le16"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "byte8_offset.param.sgl[0]",
                        "rightOperand": "address",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "arrayIndexing": {
                              "array": "generic_buffer_phys",
                              "index": {
                                "identifier": "request_id"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "callee": "TW_CPU_TO_SGL"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "byte8_offset.param.sgl[0]",
                        "rightOperand": "length",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "TW_SECTOR_SIZE"
                      }
                    ],
                    "callee": "cpu_to_le32"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  },
                  {
                    "identifier": "request_id"
                  },
                  {
                    "constant": "1"
                  }
                ],
                "callee": "twa_post_command_packet"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {},
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "identifier": "request_id"
                    },
                    {
                      "constant": "30"
                    }
                  ],
                  "callee": "twa_poll_response"
                }
              },
              "elseBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "retval"
                    },
                    "rightOperand": {
                      "castExpression": {
                        "originalExpression": {
                          "unaryOperationExpression": {
                            "operator": "&",
                            "operand": {
                              "unaryExpression": {
                                "operand": {
                                  "arrayIndexing": {
                                    "array": "data",
                                    "index": {
                                      "constant": "0"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "target": "void *"
                      }
                    },
                    "operator": "="
                  }
                }
              }
            }
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "postIncDecOperationExpression": {
                    "operand": {
                      "identifier": "posted_request_count"
                    },
                    "operator": "--"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "state",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_S_INITIAL"
                },
                "operator": "="
              }
            }
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static void *"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_get_request_id",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int *",
            "parameter": "request_id"
          }
        ],
        "functionBody": [
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryOperationExpression": {
                    "operator": "*",
                    "operand": {
                      "identifier": "request_id"
                    }
                  }
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "free_queue",
                        "index": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "free_head"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "free_head"
                    }
                  }
                },
                "rightOperand": {
                  "MultiplicativeExpression": {
                    "leftOperand": {
                      "AdditiveExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "free_head"
                            }
                          }
                        },
                        "rightOperand": {
                          "constant": "1"
                        },
                        "operator": "+"
                      }
                    },
                    "rightOperand": {
                      "identifier": "TW_Q_LENGTH"
                    },
                    "operator": "%"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "state",
                        "index": {
                          "unaryOperationExpression": {
                            "operator": "*",
                            "operand": {
                              "identifier": "request_id"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_S_STARTED"
                },
                "operator": "="
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_initconnection",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "message_credits"
          },
          {
            "parameterType": "u32",
            "parameter": "set_features"
          },
          {
            "parameterType": "unsigned short",
            "parameter": "current_fw_srl"
          },
          {
            "parameterType": "unsigned short",
            "parameter": "current_fw_arch_id"
          },
          {
            "parameterType": "unsigned short",
            "parameter": "current_fw_branch"
          },
          {
            "parameterType": "unsigned short",
            "parameter": "current_fw_build"
          },
          {
            "parameterType": "unsigned short *",
            "parameter": "fw_on_ctlr_srl"
          },
          {
            "parameterType": "unsigned short *",
            "parameter": "fw_on_ctlr_arch_id"
          },
          {
            "parameterType": "unsigned short *",
            "parameter": "fw_on_ctlr_branch"
          },
          {
            "parameterType": "unsigned short *",
            "parameter": "fw_on_ctlr_build"
          },
          {
            "parameterType": "u32 *",
            "parameter": "init_connect_result"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_initconnect",
                "identifierType": "TW_Initconnect *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "request_id",
                "identifierType": "int",
                "initialValue": "0"
              },
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "full_command_packet"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "command_packet_virt",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "full_command_packet"
                  },
                  {
                    "constant": "0"
                  },
                  {
                    "sizeofExpression": {
                      "operator": "sizeof",
                      "operand": {
                        "identifier": "TW_Command_Full"
                      }
                    }
                  }
                ],
                "callee": "memset"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "header.header_desc",
                        "rightOperand": "size_header",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "constant": "128"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "tw_initconnect"
                },
                "rightOperand": {
                  "castExpression": {
                    "originalExpression": {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "unaryExpression": {
                            "operand": {
                              "memberAccess": {
                                "leftOperand": "command",
                                "rightOperand": "oldcommand",
                                "operator": "."
                              }
                            }
                          }
                        }
                      }
                    },
                    "target": "TW_Initconnect *"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "opcode__reserved"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "0"
                      },
                      {
                        "identifier": "TW_OP_INIT_CONNECTION"
                      }
                    ],
                    "callee": "TW_OPRES_IN"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "request_id"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "request_id"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "message_credits"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "message_credits"
                      }
                    ],
                    "callee": "cpu_to_le16"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "set_features"
                },
                "rightOperand": {
                  "conditionalExpression": {
                    "condition": {
                      "RelationalExpression": {
                        "leftOperand": {
                          "sizeofExpression": {
                            "operator": "sizeof",
                            "operand": {
                              "identifier": "dma_addr_t"
                            }
                          }
                        },
                        "rightOperand": {
                          "constant": "4"
                        },
                        "operator": ">"
                      }
                    },
                    "trueExpression": {
                      "constant": "1"
                    },
                    "falseExpression": {
                      "constant": "0"
                    }
                  }
                },
                "operator": "|="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "features"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "set_features"
                      }
                    ],
                    "callee": "cpu_to_le32"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "size"
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_INIT_COMMAND_PACKET_SIZE_EXTENDED"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "fw_srl"
                            }
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "current_fw_srl"
                              }
                            ],
                            "callee": "cpu_to_le16"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "fw_arch_id"
                            }
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "current_fw_arch_id"
                              }
                            ],
                            "callee": "cpu_to_le16"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "fw_branch"
                            }
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "current_fw_branch"
                              }
                            ],
                            "callee": "cpu_to_le16"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "fw_build"
                            }
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "current_fw_build"
                              }
                            ],
                            "callee": "cpu_to_le16"
                          }
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "identifier": "set_features"
                  },
                  "rightOperand": {
                    "identifier": "TW_EXTENDED_INIT_CONNECT"
                  },
                  "operator": "&"
                }
              },
              "elseBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "unaryExpression": {
                        "operand": {
                          "identifier": "size"
                        }
                      }
                    },
                    "rightOperand": {
                      "identifier": "TW_INIT_COMMAND_PACKET_SIZE"
                    },
                    "operator": "="
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  },
                  {
                    "identifier": "request_id"
                  },
                  {
                    "constant": "1"
                  }
                ],
                "callee": "twa_post_command_packet"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x15"
                          },
                          {
                            "constant": "\"No valid response during init connection\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "identifier": "request_id"
                    },
                    {
                      "constant": "30"
                    }
                  ],
                  "callee": "twa_poll_response"
                }
              },
              "elseBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryOperationExpression": {
                                    "operator": "*",
                                    "operand": {
                                      "identifier": "fw_on_ctlr_srl"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "unaryExpression": {
                                          "operand": {
                                            "identifier": "fw_srl"
                                          }
                                        }
                                      }
                                    ],
                                    "callee": "le16_to_cpu"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryOperationExpression": {
                                    "operator": "*",
                                    "operand": {
                                      "identifier": "fw_on_ctlr_arch_id"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "unaryExpression": {
                                          "operand": {
                                            "identifier": "fw_arch_id"
                                          }
                                        }
                                      }
                                    ],
                                    "callee": "le16_to_cpu"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryOperationExpression": {
                                    "operator": "*",
                                    "operand": {
                                      "identifier": "fw_on_ctlr_branch"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "unaryExpression": {
                                          "operand": {
                                            "identifier": "fw_branch"
                                          }
                                        }
                                      }
                                    ],
                                    "callee": "le16_to_cpu"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryOperationExpression": {
                                    "operator": "*",
                                    "operand": {
                                      "identifier": "fw_on_ctlr_build"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "unaryExpression": {
                                          "operand": {
                                            "identifier": "fw_build"
                                          }
                                        }
                                      }
                                    ],
                                    "callee": "le16_to_cpu"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryOperationExpression": {
                                    "operator": "*",
                                    "operand": {
                                      "identifier": "init_connect_result"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "unaryExpression": {
                                          "operand": {
                                            "identifier": "result"
                                          }
                                        }
                                      }
                                    ],
                                    "callee": "le32_to_cpu"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "BitAndExpression": {
                          "leftOperand": {
                            "identifier": "set_features"
                          },
                          "rightOperand": {
                            "identifier": "TW_EXTENDED_INIT_CONNECT"
                          },
                          "operator": "&"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "postIncDecOperationExpression": {
                    "operand": {
                      "identifier": "posted_request_count"
                    },
                    "operator": "--"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "state",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_S_INITIAL"
                },
                "operator": "="
              }
            }
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_initialize_device_extension",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "i",
                "identifierType": "int"
              },
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x16"
                          },
                          {
                            "constant": "\"Command packet memory allocation failed\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "sizeofExpression": {
                        "operator": "sizeof",
                        "operand": {
                          "identifier": "TW_Command_Full"
                        }
                      }
                    },
                    {
                      "constant": "0"
                    }
                  ],
                  "callee": "twa_allocate_memory"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x17"
                          },
                          {
                            "constant": "\"Generic memory allocation failed\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "identifier": "TW_SECTOR_SIZE"
                    },
                    {
                      "constant": "1"
                    }
                  ],
                  "callee": "twa_allocate_memory"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "event_queue",
                        "index": {
                          "constant": "0"
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "TW_Q_LENGTH"
                      },
                      {
                        "sizeofExpression": {
                          "operator": "sizeof",
                          "operand": {
                            "identifier": "TW_Event"
                          }
                        }
                      },
                      {
                        "identifier": "GFP_KERNEL"
                      }
                    ],
                    "callee": "kcalloc"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x18"
                          },
                          {
                            "constant": "\"Event info memory allocation failed\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "unaryExpression": {
                      "operand": {
                        "arrayIndexing": {
                          "array": "event_queue",
                          "index": {
                            "constant": "0"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "forStatement": {
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "i"
                  },
                  "rightOperand": {
                    "identifier": "TW_Q_LENGTH"
                  },
                  "operator": "<"
                }
              },
              "forInit": {
                "AssignmentExpression": {
                  "leftOperand": {
                    "identifier": "i"
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "="
                }
              },
              "forBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "arrayIndexing": {
                                "array": "event_queue",
                                "index": {
                                  "identifier": "i"
                                }
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "castExpression": {
                            "originalExpression": {
                              "AdditiveExpression": {
                                "leftOperand": {
                                  "castExpression": {
                                    "originalExpression": {
                                      "unaryExpression": {
                                        "operand": {
                                          "arrayIndexing": {
                                            "array": "event_queue",
                                            "index": {
                                              "constant": "0"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "target": "unsigned char *"
                                  }
                                },
                                "rightOperand": {
                                  "MultiplicativeExpression": {
                                    "leftOperand": {
                                      "identifier": "i"
                                    },
                                    "rightOperand": {
                                      "sizeofExpression": {
                                        "operator": "sizeof",
                                        "operand": {
                                          "identifier": "TW_Event"
                                        }
                                      }
                                    },
                                    "operator": "*"
                                  }
                                },
                                "operator": "+"
                              }
                            },
                            "target": "TW_Event *"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "arrayIndexing": {
                                "array": "free_queue",
                                "index": {
                                  "identifier": "i"
                                }
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "i"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "arrayIndexing": {
                                "array": "state",
                                "index": {
                                  "identifier": "i"
                                }
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_S_INITIAL"
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "forLoop": {
                "postIncDecOperationExpression": {
                  "operand": {
                    "identifier": "i"
                  },
                  "operator": "++"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "pending_head"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_Q_START"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "pending_tail"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_Q_START"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "free_head"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_Q_START"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "free_tail"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_Q_START"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "error_sequence_id"
                    }
                  }
                },
                "rightOperand": {
                  "constant": "1"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "chrdev_request_id"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_IOCTL_CHRDEV_FREE"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "ioctl_lock"
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "mutex_init"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "ioctl_wqueue"
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "init_waitqueue_head"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_interrupt",
        "parameterList": [
          {
            "parameterType": "int",
            "parameter": "irq"
          },
          {
            "parameterType": "void *",
            "parameter": "dev_instance"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "request_id",
                "identifierType": "int"
              },
              {
                "identifier": "error",
                "identifierType": "int",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "status_reg_value",
                "identifierType": "u32"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "response_que",
                "identifierType": "TW_Response_Queue"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_dev",
                "identifierType": "TW_Device_Extension *",
                "initialValue": "(TW_Device_Extension *)dev_instance"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "handled",
                "identifierType": "int",
                "initialValue": "0"
              }
            ]
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "host_lock"
                      }
                    }
                  }
                ],
                "callee": "spin_lock"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "status_reg_value"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            }
                          ],
                          "callee": "TW_STATUS_REG_ADDR"
                        }
                      }
                    ],
                    "callee": "readl"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "twa_interrupt_bail"
                }
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "identifier": "status_reg_value"
                      },
                      "rightOperand": {
                        "identifier": "TW_STATUS_VALID_INTERRUPT"
                      },
                      "operator": "&"
                    }
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "handled"
                },
                "rightOperand": {
                  "constant": "1"
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "twa_interrupt_bail"
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "TW_IN_RESET"
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "flags"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "callee": "test_bit"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "tw_dev"
                                  }
                                ],
                                "callee": "TW_CLEAR_ALL_INTERRUPTS"
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "twa_interrupt_bail"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            },
                            {
                              "identifier": "status_reg_value"
                            }
                          ],
                          "callee": "twa_decode_bits"
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "status_reg_value"
                    }
                  ],
                  "callee": "twa_check_bits"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "tw_dev"
                      }
                    ],
                    "callee": "TW_CLEAR_HOST_INTERRUPT"
                  }
                }
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "identifier": "status_reg_value"
                  },
                  "rightOperand": {
                    "identifier": "TW_STATUS_HOST_INTERRUPT"
                  },
                  "operator": "&"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          }
                        ],
                        "callee": "TW_CLEAR_ATTENTION_INTERRUPT"
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "tw_dev"
                                  },
                                  {
                                    "unaryOperationExpression": {
                                      "operator": "&",
                                      "operand": {
                                        "identifier": "request_id"
                                      }
                                    }
                                  }
                                ],
                                "callee": "twa_get_request_id"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "error"
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "identifier": "tw_dev"
                                      },
                                      {
                                        "identifier": "request_id"
                                      }
                                    ],
                                    "callee": "twa_aen_read_queue"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "arrayIndexing": {
                                                "array": "state",
                                                "index": {
                                                  "identifier": "request_id"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_S_COMPLETED"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "identifier": "tw_dev"
                                          },
                                          {
                                            "identifier": "request_id"
                                          }
                                        ],
                                        "callee": "twa_free_request_id"
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "identifier": "TW_IN_ATTENTION_LOOP"
                                          },
                                          {
                                            "unaryOperationExpression": {
                                              "operator": "&",
                                              "operand": {
                                                "unaryExpression": {
                                                  "operand": {
                                                    "identifier": "flags"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ],
                                        "callee": "clear_bit"
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "identifier": "error"
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "unaryOperationExpression": {
                          "operator": "!",
                          "operand": {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "identifier": "TW_IN_ATTENTION_LOOP"
                                },
                                {
                                  "unaryOperationExpression": {
                                    "operator": "&",
                                    "operand": {
                                      "unaryExpression": {
                                        "operand": {
                                          "identifier": "flags"
                                        }
                                      }
                                    }
                                  }
                                }
                              ],
                              "callee": "test_and_set_bit"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "identifier": "status_reg_value"
                  },
                  "rightOperand": {
                    "identifier": "TW_STATUS_ATTENTION_INTERRUPT"
                  },
                  "operator": "&"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          }
                        ],
                        "callee": "TW_MASK_COMMAND_INTERRUPT"
                      }
                    }
                  },
                  {
                    "whileStatement": {
                      "condition": {
                        "RelationalExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "pending_request_count"
                              }
                            }
                          },
                          "rightOperand": {
                            "constant": "0"
                          },
                          "operator": ">"
                        }
                      },
                      "whileBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "request_id"
                                },
                                "rightOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "arrayIndexing": {
                                        "array": "pending_queue",
                                        "index": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "pending_head"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "unaryExpression": {
                                              "operand": {
                                                "identifier": "host"
                                              }
                                            }
                                          },
                                          {
                                            "identifier": "TW_DRIVER"
                                          },
                                          {
                                            "constant": "0x19"
                                          },
                                          {
                                            "constant": "\"Found request id that wasn't pending\""
                                          }
                                        ],
                                        "callee": "TW_PRINTK"
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "identifier": "tw_dev"
                                          }
                                        ],
                                        "callee": "TW_CLEAR_ALL_INTERRUPTS"
                                      }
                                    }
                                  },
                                  {
                                    "gotoStatement": {
                                      "goto": "twa_interrupt_bail"
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "arrayIndexing": {
                                          "array": "state",
                                          "index": {
                                            "identifier": "request_id"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "TW_S_PENDING"
                                  },
                                  "operator": "!="
                                }
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "pending_head"
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "MultiplicativeExpression": {
                                            "leftOperand": {
                                              "AdditiveExpression": {
                                                "leftOperand": {
                                                  "unaryExpression": {
                                                    "operand": {
                                                      "identifier": "pending_head"
                                                    }
                                                  }
                                                },
                                                "rightOperand": {
                                                  "constant": "1"
                                                },
                                                "operator": "+"
                                              }
                                            },
                                            "rightOperand": {
                                              "identifier": "TW_Q_LENGTH"
                                            },
                                            "operator": "%"
                                          }
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "unaryExpression": {
                                        "operand": {
                                          "postIncDecOperationExpression": {
                                            "operand": {
                                              "identifier": "pending_request_count"
                                            },
                                            "operator": "--"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "callExpression": {
                                      "argumentList": [
                                        {
                                          "identifier": "tw_dev"
                                        },
                                        {
                                          "identifier": "request_id"
                                        },
                                        {
                                          "constant": "1"
                                        }
                                      ],
                                      "callee": "twa_post_command_packet"
                                    }
                                  },
                                  "rightOperand": {
                                    "constant": "0"
                                  },
                                  "operator": "=="
                                }
                              },
                              "elseBlock": {
                                "compoundStatement": [
                                  {
                                    "breakStatement": "break"
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "identifier": "status_reg_value"
                  },
                  "rightOperand": {
                    "identifier": "TW_STATUS_COMMAND_INTERRUPT"
                  },
                  "operator": "&"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "whileStatement": {
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "BitAndExpression": {
                              "leftOperand": {
                                "identifier": "status_reg_value"
                              },
                              "rightOperand": {
                                "identifier": "TW_STATUS_RESPONSE_QUEUE_EMPTY"
                              },
                              "operator": "&"
                            }
                          },
                          "rightOperand": {
                            "constant": "0"
                          },
                          "operator": "=="
                        }
                      },
                      "whileBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "memberAccess": {
                                    "leftOperand": "response_que",
                                    "rightOperand": "value",
                                    "operator": "."
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "callExpression": {
                                          "argumentList": [
                                            {
                                              "identifier": "tw_dev"
                                            }
                                          ],
                                          "callee": "TW_RESPONSE_QUEUE_REG_ADDR"
                                        }
                                      }
                                    ],
                                    "callee": "readl"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "request_id"
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "memberAccess": {
                                          "leftOperand": "response_que",
                                          "rightOperand": "response_id",
                                          "operator": "."
                                        }
                                      }
                                    ],
                                    "callee": "TW_RESID_OUT"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "full_command_packet"
                                },
                                "rightOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "arrayIndexing": {
                                        "array": "command_packet_virt",
                                        "index": {
                                          "identifier": "request_id"
                                        }
                                      }
                                    }
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "error"
                                },
                                "rightOperand": {
                                  "constant": "0"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "compoundStatement": [
                                          {
                                            "expressionStatement": {
                                              "AssignmentExpression": {
                                                "leftOperand": {
                                                  "identifier": "error"
                                                },
                                                "rightOperand": {
                                                  "callExpression": {
                                                    "argumentList": [
                                                      {
                                                        "identifier": "tw_dev"
                                                      },
                                                      {
                                                        "identifier": "request_id"
                                                      },
                                                      {
                                                        "constant": "1"
                                                      },
                                                      {
                                                        "constant": "1"
                                                      }
                                                    ],
                                                    "callee": "twa_fill_sense"
                                                  }
                                                },
                                                "operator": "="
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "EqualityExpression": {
                                          "leftOperand": {
                                            "unaryExpression": {
                                              "operand": {
                                                "arrayIndexing": {
                                                  "array": "srb",
                                                  "index": {
                                                    "identifier": "request_id"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rightOperand": {
                                            "identifier": "NULL"
                                          },
                                          "operator": "!="
                                        }
                                      },
                                      "elseBlock": {
                                        "compoundStatement": [
                                          {
                                            "ifStatement": {
                                              "ifBlock": {
                                                "compoundStatement": [
                                                  {
                                                    "expressionStatement": {
                                                      "AssignmentExpression": {
                                                        "leftOperand": {
                                                          "identifier": "error"
                                                        },
                                                        "rightOperand": {
                                                          "callExpression": {
                                                            "argumentList": [
                                                              {
                                                                "identifier": "tw_dev"
                                                              },
                                                              {
                                                                "identifier": "request_id"
                                                              },
                                                              {
                                                                "constant": "0"
                                                              },
                                                              {
                                                                "constant": "1"
                                                              }
                                                            ],
                                                            "callee": "twa_fill_sense"
                                                          }
                                                        },
                                                        "operator": "="
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "condition": {
                                                "EqualityExpression": {
                                                  "leftOperand": {
                                                    "identifier": "request_id"
                                                  },
                                                  "rightOperand": {
                                                    "unaryExpression": {
                                                      "operand": {
                                                        "identifier": "chrdev_request_id"
                                                      }
                                                    }
                                                  },
                                                  "operator": "!="
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "memberAccess": {
                                          "leftOperand": "command.newcommand",
                                          "rightOperand": "status",
                                          "operator": "."
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "constant": "0"
                                  },
                                  "operator": "!="
                                }
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "compoundStatement": [
                                          {
                                            "expressionStatement": {
                                              "callExpression": {
                                                "argumentList": [
                                                  {
                                                    "unaryExpression": {
                                                      "operand": {
                                                        "identifier": "host"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "identifier": "TW_DRIVER"
                                                  },
                                                  {
                                                    "constant": "0x1a"
                                                  },
                                                  {
                                                    "constant": "\"Received a request id that wasn't posted\""
                                                  }
                                                ],
                                                "callee": "TW_PRINTK"
                                              }
                                            }
                                          },
                                          {
                                            "expressionStatement": {
                                              "callExpression": {
                                                "argumentList": [
                                                  {
                                                    "identifier": "tw_dev"
                                                  }
                                                ],
                                                "callee": "TW_CLEAR_ALL_INTERRUPTS"
                                              }
                                            }
                                          },
                                          {
                                            "gotoStatement": {
                                              "goto": "twa_interrupt_bail"
                                            }
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "EqualityExpression": {
                                          "leftOperand": {
                                            "unaryExpression": {
                                              "operand": {
                                                "arrayIndexing": {
                                                  "array": "srb",
                                                  "index": {
                                                    "identifier": "request_id"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "rightOperand": {
                                            "identifier": "NULL"
                                          },
                                          "operator": "!="
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "arrayIndexing": {
                                          "array": "state",
                                          "index": {
                                            "identifier": "request_id"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "TW_S_POSTED"
                                  },
                                  "operator": "!="
                                }
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "compoundStatement": [
                                          {
                                            "ifStatement": {
                                              "ifBlock": {
                                                "expressionStatement": {
                                                  "callExpression": {
                                                    "argumentList": [
                                                      {
                                                        "unaryExpression": {
                                                          "operand": {
                                                            "identifier": "host"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "identifier": "TW_DRIVER"
                                                      },
                                                      {
                                                        "constant": "0x1b"
                                                      },
                                                      {
                                                        "constant": "\"Error completing AEN during attention interrupt\""
                                                      }
                                                    ],
                                                    "callee": "TW_PRINTK"
                                                  }
                                                }
                                              },
                                              "condition": {
                                                "callExpression": {
                                                  "argumentList": [
                                                    {
                                                      "identifier": "tw_dev"
                                                    },
                                                    {
                                                      "identifier": "request_id"
                                                    }
                                                  ],
                                                  "callee": "twa_aen_complete"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "EqualityExpression": {
                                          "leftOperand": {
                                            "identifier": "request_id"
                                          },
                                          "rightOperand": {
                                            "unaryExpression": {
                                              "operand": {
                                                "identifier": "chrdev_request_id"
                                              }
                                            }
                                          },
                                          "operator": "!="
                                        }
                                      },
                                      "elseBlock": {
                                        "compoundStatement": [
                                          {
                                            "expressionStatement": {
                                              "AssignmentExpression": {
                                                "leftOperand": {
                                                  "unaryExpression": {
                                                    "operand": {
                                                      "identifier": "chrdev_request_id"
                                                    }
                                                  }
                                                },
                                                "rightOperand": {
                                                  "identifier": "TW_IOCTL_CHRDEV_FREE"
                                                },
                                                "operator": "="
                                              }
                                            }
                                          },
                                          {
                                            "expressionStatement": {
                                              "callExpression": {
                                                "argumentList": [
                                                  {
                                                    "unaryOperationExpression": {
                                                      "operator": "&",
                                                      "operand": {
                                                        "unaryExpression": {
                                                          "operand": {
                                                            "identifier": "ioctl_wqueue"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                ],
                                                "callee": "wake_up"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "arrayIndexing": {
                                          "array": "srb",
                                          "index": {
                                            "identifier": "request_id"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "NULL"
                                  },
                                  "operator": "=="
                                }
                              },
                              "elseBlock": {
                                "compoundStatement": [
                                  {
                                    "identifierDeclStatement": [
                                      {
                                        "identifier": "cmd",
                                        "identifierType": "struct scsi_cmnd *"
                                      }
                                    ]
                                  },
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "identifier": "cmd"
                                        },
                                        "rightOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "arrayIndexing": {
                                                "array": "srb",
                                                "index": {
                                                  "identifier": "request_id"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "identifier": "tw_dev"
                                          },
                                          {
                                            "identifier": "request_id"
                                          }
                                        ],
                                        "callee": "twa_scsiop_execute_scsi_complete"
                                      }
                                    }
                                  },
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "compoundStatement": [
                                          {
                                            "expressionStatement": {
                                              "AssignmentExpression": {
                                                "leftOperand": {
                                                  "unaryExpression": {
                                                    "operand": {
                                                      "identifier": "result"
                                                    }
                                                  }
                                                },
                                                "rightOperand": {
                                                  "ShiftExpression": {
                                                    "leftOperand": {
                                                      "identifier": "DID_OK"
                                                    },
                                                    "rightOperand": {
                                                      "constant": "16"
                                                    },
                                                    "operator": "<<"
                                                  }
                                                },
                                                "operator": "="
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "EqualityExpression": {
                                          "leftOperand": {
                                            "identifier": "error"
                                          },
                                          "rightOperand": {
                                            "constant": "0"
                                          },
                                          "operator": "=="
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "compoundStatement": [
                                          {
                                            "expressionStatement": {
                                              "AssignmentExpression": {
                                                "leftOperand": {
                                                  "unaryExpression": {
                                                    "operand": {
                                                      "identifier": "result"
                                                    }
                                                  }
                                                },
                                                "rightOperand": {
                                                  "InclusiveOrExpression": {
                                                    "leftOperand": {
                                                      "ShiftExpression": {
                                                        "leftOperand": {
                                                          "identifier": "DID_OK"
                                                        },
                                                        "rightOperand": {
                                                          "constant": "16"
                                                        },
                                                        "operator": "<<"
                                                      }
                                                    },
                                                    "rightOperand": {
                                                      "identifier": "SAM_STAT_CHECK_CONDITION"
                                                    },
                                                    "operator": "|"
                                                  }
                                                },
                                                "operator": "="
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "EqualityExpression": {
                                          "leftOperand": {
                                            "identifier": "error"
                                          },
                                          "rightOperand": {
                                            "constant": "1"
                                          },
                                          "operator": "=="
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "compoundStatement": [
                                          {
                                            "identifierDeclStatement": [
                                              {
                                                "identifier": "length",
                                                "identifierType": "u32",
                                                "initialValue": "le32_to_cpu(full_command_packet->command.newcommand.sg_list[0].length)"
                                              }
                                            ]
                                          },
                                          {
                                            "ifStatement": {
                                              "ifBlock": {
                                                "expressionStatement": {
                                                  "callExpression": {
                                                    "argumentList": [
                                                      {
                                                        "identifier": "cmd"
                                                      },
                                                      {
                                                        "AdditiveExpression": {
                                                          "leftOperand": {
                                                            "callExpression": {
                                                              "argumentList": [
                                                                {
                                                                  "identifier": "cmd"
                                                                }
                                                              ],
                                                              "callee": "scsi_bufflen"
                                                            }
                                                          },
                                                          "rightOperand": {
                                                            "identifier": "length"
                                                          },
                                                          "operator": "-"
                                                        }
                                                      }
                                                    ],
                                                    "callee": "scsi_set_resid"
                                                  }
                                                }
                                              },
                                              "condition": {
                                                "RelationalExpression": {
                                                  "leftOperand": {
                                                    "identifier": "length"
                                                  },
                                                  "rightOperand": {
                                                    "callExpression": {
                                                      "argumentList": [
                                                        {
                                                          "identifier": "cmd"
                                                        }
                                                      ],
                                                      "callee": "scsi_bufflen"
                                                    }
                                                  },
                                                  "operator": "<"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "AndExpression": {
                                          "leftOperand": {
                                            "RelationalExpression": {
                                              "leftOperand": {
                                                "callExpression": {
                                                  "argumentList": [
                                                    {
                                                      "identifier": "cmd"
                                                    }
                                                  ],
                                                  "callee": "scsi_sg_count"
                                                }
                                              },
                                              "rightOperand": {
                                                "constant": "1"
                                              },
                                              "operator": "<="
                                            }
                                          },
                                          "rightOperand": {
                                            "EqualityExpression": {
                                              "leftOperand": {
                                                "unaryExpression": {
                                                  "operand": {
                                                    "memberAccess": {
                                                      "leftOperand": "command.newcommand",
                                                      "rightOperand": "status",
                                                      "operator": "."
                                                    }
                                                  }
                                                }
                                              },
                                              "rightOperand": {
                                                "constant": "0"
                                              },
                                              "operator": "=="
                                            }
                                          },
                                          "operator": "&&"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "expressionStatement": {
                                          "callExpression": {
                                            "argumentList": [
                                              {
                                                "identifier": "cmd"
                                              }
                                            ],
                                            "callee": "scsi_dma_unmap"
                                          }
                                        }
                                      },
                                      "condition": {
                                        "callExpression": {
                                          "argumentList": [
                                            {
                                              "identifier": "cmd"
                                            }
                                          ],
                                          "callee": "twa_command_mapped"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "identifier": "cmd"
                                          }
                                        ],
                                        "callee": "scsi_done"
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "arrayIndexing": {
                                                "array": "state",
                                                "index": {
                                                  "identifier": "request_id"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_S_COMPLETED"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "identifier": "tw_dev"
                                          },
                                          {
                                            "identifier": "request_id"
                                          }
                                        ],
                                        "callee": "twa_free_request_id"
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "unaryExpression": {
                                        "operand": {
                                          "postIncDecOperationExpression": {
                                            "operand": {
                                              "identifier": "posted_request_count"
                                            },
                                            "operator": "--"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "status_reg_value"
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "callExpression": {
                                          "argumentList": [
                                            {
                                              "identifier": "tw_dev"
                                            }
                                          ],
                                          "callee": "TW_STATUS_REG_ADDR"
                                        }
                                      }
                                    ],
                                    "callee": "readl"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "compoundStatement": [
                                          {
                                            "expressionStatement": {
                                              "callExpression": {
                                                "argumentList": [
                                                  {
                                                    "identifier": "tw_dev"
                                                  }
                                                ],
                                                "callee": "TW_CLEAR_ALL_INTERRUPTS"
                                              }
                                            }
                                          },
                                          {
                                            "gotoStatement": {
                                              "goto": "twa_interrupt_bail"
                                            }
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "callExpression": {
                                          "argumentList": [
                                            {
                                              "identifier": "tw_dev"
                                            },
                                            {
                                              "identifier": "status_reg_value"
                                            }
                                          ],
                                          "callee": "twa_decode_bits"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "identifier": "status_reg_value"
                                    }
                                  ],
                                  "callee": "twa_check_bits"
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "condition": {
                "BitAndExpression": {
                  "leftOperand": {
                    "identifier": "status_reg_value"
                  },
                  "rightOperand": {
                    "identifier": "TW_STATUS_RESPONSE_INTERRUPT"
                  },
                  "operator": "&"
                }
              }
            }
          },
          {
            "label": "twa_interrupt_bail:"
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "host_lock"
                      }
                    }
                  }
                ],
                "callee": "spin_unlock"
              }
            }
          },
          {
            "returnStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "handled"
                  }
                ],
                "callee": "IRQ_RETVAL"
              }
            }
          }
        ],
        "returnType": "static irqreturn_t"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_load_sgl",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "TW_Command_Full *",
            "parameter": "full_command_packet"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "dma_addr_t",
            "parameter": "dma_handle"
          },
          {
            "parameterType": "int",
            "parameter": "length"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "oldcommand",
                "identifierType": "TW_Command *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "newcommand",
                "identifierType": "TW_Command_Apache *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "sgl",
                "identifierType": "TW_SG_Entry *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "pae",
                "identifierType": "unsigned int",
                "initialValue": "0"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "pae"
                    },
                    "rightOperand": {
                      "constant": "1"
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "RelationalExpression": {
                      "leftOperand": {
                        "sizeofExpression": {
                          "operator": "sizeof",
                          "operand": {}
                        }
                      },
                      "rightOperand": {
                        "constant": "8"
                      },
                      "operator": "<"
                    }
                  },
                  "rightOperand": {
                    "RelationalExpression": {
                      "leftOperand": {
                        "sizeofExpression": {
                          "operator": "sizeof",
                          "operand": {
                            "identifier": "dma_addr_t"
                          }
                        }
                      },
                      "rightOperand": {
                        "constant": "4"
                      },
                      "operator": ">"
                    }
                  },
                  "operator": "&&"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "newcommand"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "&",
                            "operand": {
                              "unaryExpression": {
                                "operand": {
                                  "memberAccess": {
                                    "leftOperand": "command",
                                    "rightOperand": "newcommand",
                                    "operator": "."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "request_id__lunl"
                            }
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "unaryExpression": {
                                        "operand": {
                                          "identifier": "request_id__lunl"
                                        }
                                      }
                                    }
                                  ],
                                  "callee": "TW_LUN_OUT"
                                }
                              },
                              {
                                "identifier": "request_id"
                              }
                            ],
                            "callee": "TW_REQ_LUN_IN"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "sg_list[0]",
                                        "rightOperand": "address",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "AdditiveExpression": {
                                          "leftOperand": {
                                            "identifier": "dma_handle"
                                          },
                                          "rightOperand": {
                                            "sizeofExpression": {
                                              "operator": "sizeof",
                                              "operand": {
                                                "identifier": "TW_Ioctl_Buf_Apache"
                                              }
                                            }
                                          },
                                          "operator": "+"
                                        }
                                      }
                                    ],
                                    "callee": "TW_CPU_TO_SGL"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "sg_list[0]",
                                        "rightOperand": "length",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "identifier": "length"
                                      }
                                    ],
                                    "callee": "cpu_to_le32"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "identifier": "length"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "sgl_entries__lunh"
                            }
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "unaryExpression": {
                                        "operand": {
                                          "identifier": "sgl_entries__lunh"
                                        }
                                      }
                                    }
                                  ],
                                  "callee": "TW_LUN_OUT"
                                }
                              },
                              {
                                "conditionalExpression": {
                                  "condition": {
                                    "identifier": "length"
                                  },
                                  "trueExpression": {
                                    "constant": "1"
                                  },
                                  "falseExpression": {
                                    "constant": "0"
                                  }
                                }
                              }
                            ],
                            "callee": "TW_REQ_LUN_IN"
                          }
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "callExpression": {
                      "argumentList": [
                        {
                          "unaryExpression": {
                            "operand": {
                              "memberAccess": {
                                "leftOperand": "command.newcommand",
                                "rightOperand": "opcode__reserved",
                                "operator": "."
                              }
                            }
                          }
                        }
                      ],
                      "callee": "TW_OP_OUT"
                    }
                  },
                  "rightOperand": {
                    "identifier": "TW_OP_EXECUTE_SCSI"
                  },
                  "operator": "=="
                }
              },
              "elseBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "oldcommand"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "&",
                            "operand": {
                              "unaryExpression": {
                                "operand": {
                                  "memberAccess": {
                                    "leftOperand": "command",
                                    "rightOperand": "oldcommand",
                                    "operator": "."
                                  }
                                }
                              }
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "request_id"
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "request_id"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "expressionStatement": {
                                  "AssignmentExpression": {
                                    "leftOperand": {
                                      "identifier": "sgl"
                                    },
                                    "rightOperand": {
                                      "castExpression": {
                                        "originalExpression": {
                                          "AdditiveExpression": {
                                            "leftOperand": {
                                              "castExpression": {
                                                "originalExpression": {
                                                  "identifier": "oldcommand"
                                                },
                                                "target": "u32 *"
                                              }
                                            },
                                            "rightOperand": {
                                              "AdditiveExpression": {
                                                "leftOperand": {
                                                  "unaryExpression": {
                                                    "operand": {
                                                      "identifier": "size"
                                                    }
                                                  }
                                                },
                                                "rightOperand": {
                                                  "AdditiveExpression": {
                                                    "leftOperand": {
                                                      "MultiplicativeExpression": {
                                                        "leftOperand": {
                                                          "sizeofExpression": {
                                                            "operator": "sizeof",
                                                            "operand": {
                                                              "identifier": "TW_SG_Entry"
                                                            }
                                                          }
                                                        },
                                                        "rightOperand": {
                                                          "constant": "4"
                                                        },
                                                        "operator": "/"
                                                      }
                                                    },
                                                    "rightOperand": {
                                                      "identifier": "pae"
                                                    },
                                                    "operator": "+"
                                                  }
                                                },
                                                "operator": "-"
                                              }
                                            },
                                            "operator": "+"
                                          }
                                        },
                                        "target": "TW_SG_Entry *"
                                      }
                                    },
                                    "operator": "="
                                  }
                                }
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "device"
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "PCI_DEVICE_ID_3WARE_9690SA"
                                  },
                                  "operator": "=="
                                }
                              },
                              "elseBlock": {
                                "expressionStatement": {
                                  "AssignmentExpression": {
                                    "leftOperand": {
                                      "identifier": "sgl"
                                    },
                                    "rightOperand": {
                                      "castExpression": {
                                        "originalExpression": {
                                          "AdditiveExpression": {
                                            "leftOperand": {
                                              "castExpression": {
                                                "originalExpression": {
                                                  "identifier": "oldcommand"
                                                },
                                                "target": "u32 *"
                                              }
                                            },
                                            "rightOperand": {
                                              "callExpression": {
                                                "argumentList": [
                                                  {
                                                    "unaryExpression": {
                                                      "operand": {
                                                        "identifier": "opcode__sgloffset"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "callee": "TW_SGL_OUT"
                                              }
                                            },
                                            "operator": "+"
                                          }
                                        },
                                        "target": "TW_SG_Entry *"
                                      }
                                    },
                                    "operator": "="
                                  }
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "address"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "AdditiveExpression": {
                                          "leftOperand": {
                                            "identifier": "dma_handle"
                                          },
                                          "rightOperand": {
                                            "sizeofExpression": {
                                              "operator": "sizeof",
                                              "operand": {
                                                "identifier": "TW_Ioctl_Buf_Apache"
                                              }
                                            }
                                          },
                                          "operator": "+"
                                        }
                                      }
                                    ],
                                    "callee": "TW_CPU_TO_SGL"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "length"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "identifier": "length"
                                      }
                                    ],
                                    "callee": "cpu_to_le32"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "size"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "identifier": "pae"
                                },
                                "operator": "+="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "unaryExpression": {
                                "operand": {
                                  "identifier": "opcode__sgloffset"
                                }
                              }
                            }
                          ],
                          "callee": "TW_SGL_OUT"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_poll_response",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "int",
            "parameter": "seconds"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              },
              {
                "identifier": "found",
                "identifierType": "int",
                "initialValue": "0"
              },
              {
                "identifier": "response_request_id",
                "identifierType": "int"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "response_queue",
                "identifierType": "TW_Response_Queue"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *",
                "initialValue": "tw_dev->command_packet_virt[request_id]"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "memberAccess": {
                            "leftOperand": "response_queue",
                            "rightOperand": "value",
                            "operator": "."
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "identifier": "tw_dev"
                                    }
                                  ],
                                  "callee": "TW_RESPONSE_QUEUE_REG_ADDR"
                                }
                              }
                            ],
                            "callee": "readl"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "response_request_id"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "memberAccess": {
                                  "leftOperand": "response_queue",
                                  "rightOperand": "response_id",
                                  "operator": "."
                                }
                              }
                            ],
                            "callee": "TW_RESID_OUT"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "host"
                                      }
                                    }
                                  },
                                  {
                                    "identifier": "TW_DRIVER"
                                  },
                                  {
                                    "constant": "0x1e"
                                  },
                                  {
                                    "constant": "\"Found unexpected request id while polling for response\""
                                  }
                                ],
                                "callee": "TW_PRINTK"
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "out"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "identifier": "request_id"
                          },
                          "rightOperand": {
                            "identifier": "response_request_id"
                          },
                          "operator": "!="
                        }
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "identifier": "tw_dev"
                                          },
                                          {
                                            "identifier": "request_id"
                                          },
                                          {
                                            "constant": "0"
                                          },
                                          {
                                            "constant": "0"
                                          }
                                        ],
                                        "callee": "twa_fill_sense"
                                      }
                                    }
                                  },
                                  {
                                    "gotoStatement": {
                                      "goto": "out"
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "memberAccess": {
                                          "leftOperand": "command.newcommand",
                                          "rightOperand": "status",
                                          "operator": "."
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "constant": "0"
                                  },
                                  "operator": "!="
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "found"
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "command.newcommand",
                                        "rightOperand": "opcode__reserved",
                                        "operator": "."
                                      }
                                    }
                                  }
                                }
                              ],
                              "callee": "TW_OP_OUT"
                            }
                          },
                          "rightOperand": {
                            "identifier": "TW_OP_EXECUTE_SCSI"
                          },
                          "operator": "=="
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "identifier": "tw_dev"
                                          },
                                          {
                                            "identifier": "request_id"
                                          },
                                          {
                                            "constant": "0"
                                          },
                                          {
                                            "constant": "0"
                                          }
                                        ],
                                        "callee": "twa_fill_sense"
                                      }
                                    }
                                  },
                                  {
                                    "gotoStatement": {
                                      "goto": "out"
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "memberAccess": {
                                          "leftOperand": "command.oldcommand",
                                          "rightOperand": "status",
                                          "operator": "."
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "constant": "0"
                                  },
                                  "operator": "!="
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "found"
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "callExpression": {
                      "argumentList": [
                        {
                          "identifier": "tw_dev"
                        },
                        {
                          "identifier": "TW_STATUS_RESPONSE_QUEUE_EMPTY"
                        },
                        {
                          "identifier": "seconds"
                        }
                      ],
                      "callee": "twa_poll_status_gone"
                    }
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "retval"
                    },
                    "rightOperand": {
                      "constant": "0"
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "identifier": "found"
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_poll_status",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "u32",
            "parameter": "flag"
          },
          {
            "parameterType": "int",
            "parameter": "seconds"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "status_reg_value",
                "identifierType": "u32"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "before",
                "identifierType": "unsigned long"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "status_reg_value"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            }
                          ],
                          "callee": "TW_STATUS_REG_ADDR"
                        }
                      }
                    ],
                    "callee": "readl"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "before"
                },
                "rightOperand": {
                  "identifier": "jiffies"
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "tw_dev"
                      },
                      {
                        "identifier": "status_reg_value"
                      }
                    ],
                    "callee": "twa_decode_bits"
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "status_reg_value"
                    }
                  ],
                  "callee": "twa_check_bits"
                }
              }
            }
          },
          {
            "whileStatement": {
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "identifier": "status_reg_value"
                      },
                      "rightOperand": {
                        "identifier": "flag"
                      },
                      "operator": "&"
                    }
                  },
                  "rightOperand": {
                    "identifier": "flag"
                  },
                  "operator": "!="
                }
              },
              "whileBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "status_reg_value"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "identifier": "tw_dev"
                                    }
                                  ],
                                  "callee": "TW_STATUS_REG_ADDR"
                                }
                              }
                            ],
                            "callee": "readl"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "tw_dev"
                              },
                              {
                                "identifier": "status_reg_value"
                              }
                            ],
                            "callee": "twa_decode_bits"
                          }
                        }
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "status_reg_value"
                            }
                          ],
                          "callee": "twa_check_bits"
                        }
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "gotoStatement": {
                          "goto": "out"
                        }
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "jiffies"
                            },
                            {
                              "AdditiveExpression": {
                                "leftOperand": {
                                  "identifier": "before"
                                },
                                "rightOperand": {
                                  "MultiplicativeExpression": {
                                    "leftOperand": {
                                      "identifier": "HZ"
                                    },
                                    "rightOperand": {
                                      "identifier": "seconds"
                                    },
                                    "operator": "*"
                                  }
                                },
                                "operator": "+"
                              }
                            }
                          ],
                          "callee": "time_after"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "constant": "50"
                          }
                        ],
                        "callee": "msleep"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_poll_status_gone",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "u32",
            "parameter": "flag"
          },
          {
            "parameterType": "int",
            "parameter": "seconds"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "status_reg_value",
                "identifierType": "u32"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "before",
                "identifierType": "unsigned long"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "status_reg_value"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            }
                          ],
                          "callee": "TW_STATUS_REG_ADDR"
                        }
                      }
                    ],
                    "callee": "readl"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "before"
                },
                "rightOperand": {
                  "identifier": "jiffies"
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "tw_dev"
                      },
                      {
                        "identifier": "status_reg_value"
                      }
                    ],
                    "callee": "twa_decode_bits"
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "status_reg_value"
                    }
                  ],
                  "callee": "twa_check_bits"
                }
              }
            }
          },
          {
            "whileStatement": {
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "identifier": "status_reg_value"
                      },
                      "rightOperand": {
                        "identifier": "flag"
                      },
                      "operator": "&"
                    }
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "!="
                }
              },
              "whileBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "status_reg_value"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "identifier": "tw_dev"
                                    }
                                  ],
                                  "callee": "TW_STATUS_REG_ADDR"
                                }
                              }
                            ],
                            "callee": "readl"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "tw_dev"
                              },
                              {
                                "identifier": "status_reg_value"
                              }
                            ],
                            "callee": "twa_decode_bits"
                          }
                        }
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "status_reg_value"
                            }
                          ],
                          "callee": "twa_check_bits"
                        }
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "gotoStatement": {
                          "goto": "out"
                        }
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "jiffies"
                            },
                            {
                              "AdditiveExpression": {
                                "leftOperand": {
                                  "identifier": "before"
                                },
                                "rightOperand": {
                                  "MultiplicativeExpression": {
                                    "leftOperand": {
                                      "identifier": "HZ"
                                    },
                                    "rightOperand": {
                                      "identifier": "seconds"
                                    },
                                    "operator": "*"
                                  }
                                },
                                "operator": "+"
                              }
                            }
                          ],
                          "callee": "time_after"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "constant": "50"
                          }
                        ],
                        "callee": "msleep"
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_post_command_packet",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "char",
            "parameter": "internal"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "status_reg_value",
                "identifierType": "u32"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "command_que_value",
                "identifierType": "dma_addr_t"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "command_que_value"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "command_packet_phys",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "command_que_value"
                        },
                        "rightOperand": {
                          "identifier": "TW_COMMAND_OFFSET"
                        },
                        "operator": "+="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "castExpression": {
                              "originalExpression": {
                                "identifier": "command_que_value"
                              },
                              "target": "u32"
                            }
                          },
                          {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "identifier": "tw_dev"
                                }
                              ],
                              "callee": "TW_COMMAND_QUEUE_REG_ADDR_LARGE"
                            }
                          }
                        ],
                        "callee": "writel"
                      }
                    }
                  }
                ]
              },
              "condition": {
                "OrExpression": {
                  "leftOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "device"
                          }
                        }
                      },
                      "rightOperand": {
                        "identifier": "PCI_DEVICE_ID_3WARE_9650SE"
                      },
                      "operator": "=="
                    }
                  },
                  "rightOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "device"
                          }
                        }
                      },
                      "rightOperand": {
                        "identifier": "PCI_DEVICE_ID_3WARE_9690SA"
                      },
                      "operator": "=="
                    }
                  },
                  "operator": "||"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "status_reg_value"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            }
                          ],
                          "callee": "TW_STATUS_REG_ADDR"
                        }
                      }
                    ],
                    "callee": "readl"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "tw_dev"
                      },
                      {
                        "identifier": "status_reg_value"
                      }
                    ],
                    "callee": "twa_decode_bits"
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "status_reg_value"
                    }
                  ],
                  "callee": "twa_check_bits"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "retval"
                                },
                                "rightOperand": {
                                  "identifier": "SCSI_MLQUEUE_HOST_BUSY"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "gotoStatement": {
                              "goto": "out"
                            }
                          }
                        ]
                      },
                      "condition": {
                        "unaryOperationExpression": {
                          "operator": "!",
                          "operand": {
                            "identifier": "internal"
                          }
                        }
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "arrayIndexing": {
                                        "array": "state",
                                        "index": {
                                          "identifier": "request_id"
                                        }
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "identifier": "TW_S_PENDING"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "unaryExpression": {
                                "operand": {
                                  "postIncDecOperationExpression": {
                                    "operand": {
                                      "identifier": "pending_request_count"
                                    },
                                    "operator": "++"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "max_pending_request_count"
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "pending_request_count"
                                            }
                                          }
                                        },
                                        "operator": "="
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "RelationalExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "pending_request_count"
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "max_pending_request_count"
                                      }
                                    }
                                  },
                                  "operator": ">"
                                }
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "arrayIndexing": {
                                        "array": "pending_queue",
                                        "index": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "pending_tail"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "identifier": "request_id"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "pending_tail"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "MultiplicativeExpression": {
                                    "leftOperand": {
                                      "AdditiveExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "pending_tail"
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "constant": "1"
                                        },
                                        "operator": "+"
                                      }
                                    },
                                    "rightOperand": {
                                      "identifier": "TW_Q_LENGTH"
                                    },
                                    "operator": "%"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "arrayIndexing": {
                                  "array": "state",
                                  "index": {
                                    "identifier": "request_id"
                                  }
                                }
                              }
                            }
                          },
                          "rightOperand": {
                            "identifier": "TW_S_PENDING"
                          },
                          "operator": "!="
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          }
                        ],
                        "callee": "TW_UNMASK_COMMAND_INTERRUPT"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "OrExpression": {
                  "leftOperand": {
                    "AndExpression": {
                      "leftOperand": {
                        "RelationalExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "pending_request_count"
                              }
                            }
                          },
                          "rightOperand": {
                            "constant": "0"
                          },
                          "operator": ">"
                        }
                      },
                      "rightOperand": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "arrayIndexing": {
                                  "array": "state",
                                  "index": {
                                    "identifier": "request_id"
                                  }
                                }
                              }
                            }
                          },
                          "rightOperand": {
                            "identifier": "TW_S_PENDING"
                          },
                          "operator": "!="
                        }
                      },
                      "operator": "&&"
                    }
                  },
                  "rightOperand": {
                    "BitAndExpression": {
                      "leftOperand": {
                        "identifier": "status_reg_value"
                      },
                      "rightOperand": {
                        "identifier": "TW_STATUS_COMMAND_QUEUE_FULL"
                      },
                      "operator": "&"
                    }
                  },
                  "operator": "||"
                }
              },
              "elseBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "castExpression": {
                                      "originalExpression": {
                                        "ShiftExpression": {
                                          "leftOperand": {
                                            "castExpression": {
                                              "originalExpression": {
                                                "identifier": "command_que_value"
                                              },
                                              "target": "u64"
                                            }
                                          },
                                          "rightOperand": {
                                            "constant": "32"
                                          },
                                          "operator": ">>"
                                        }
                                      },
                                      "target": "u32"
                                    }
                                  },
                                  {
                                    "AdditiveExpression": {
                                      "leftOperand": {
                                        "callExpression": {
                                          "argumentList": [
                                            {
                                              "identifier": "tw_dev"
                                            }
                                          ],
                                          "callee": "TW_COMMAND_QUEUE_REG_ADDR_LARGE"
                                        }
                                      },
                                      "rightOperand": {
                                        "constant": "0x4"
                                      },
                                      "operator": "+"
                                    }
                                  }
                                ],
                                "callee": "writel"
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "OrExpression": {
                          "leftOperand": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "device"
                                  }
                                }
                              },
                              "rightOperand": {
                                "identifier": "PCI_DEVICE_ID_3WARE_9650SE"
                              },
                              "operator": "=="
                            }
                          },
                          "rightOperand": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "device"
                                  }
                                }
                              },
                              "rightOperand": {
                                "identifier": "PCI_DEVICE_ID_3WARE_9690SA"
                              },
                              "operator": "=="
                            }
                          },
                          "operator": "||"
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "identifier": "command_que_value"
                                        },
                                        "rightOperand": {
                                          "identifier": "TW_COMMAND_OFFSET"
                                        },
                                        "operator": "+="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "castExpression": {
                                              "originalExpression": {
                                                "identifier": "command_que_value"
                                              },
                                              "target": "u32"
                                            }
                                          },
                                          {
                                            "callExpression": {
                                              "argumentList": [
                                                {
                                                  "identifier": "tw_dev"
                                                }
                                              ],
                                              "callee": "TW_COMMAND_QUEUE_REG_ADDR"
                                            }
                                          }
                                        ],
                                        "callee": "writel"
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "castExpression": {
                                              "originalExpression": {
                                                "ShiftExpression": {
                                                  "leftOperand": {
                                                    "castExpression": {
                                                      "originalExpression": {
                                                        "identifier": "command_que_value"
                                                      },
                                                      "target": "u64"
                                                    }
                                                  },
                                                  "rightOperand": {
                                                    "constant": "32"
                                                  },
                                                  "operator": ">>"
                                                }
                                              },
                                              "target": "u32"
                                            }
                                          },
                                          {
                                            "AdditiveExpression": {
                                              "leftOperand": {
                                                "callExpression": {
                                                  "argumentList": [
                                                    {
                                                      "identifier": "tw_dev"
                                                    }
                                                  ],
                                                  "callee": "TW_COMMAND_QUEUE_REG_ADDR"
                                                }
                                              },
                                              "rightOperand": {
                                                "constant": "0x4"
                                              },
                                              "operator": "+"
                                            }
                                          }
                                        ],
                                        "callee": "writel"
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "RelationalExpression": {
                                  "leftOperand": {
                                    "sizeofExpression": {
                                      "operator": "sizeof",
                                      "operand": {
                                        "identifier": "dma_addr_t"
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "constant": "4"
                                  },
                                  "operator": ">"
                                }
                              },
                              "elseBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "AdditiveExpression": {
                                              "leftOperand": {
                                                "identifier": "TW_COMMAND_OFFSET"
                                              },
                                              "rightOperand": {
                                                "identifier": "command_que_value"
                                              },
                                              "operator": "+"
                                            }
                                          },
                                          {
                                            "callExpression": {
                                              "argumentList": [
                                                {
                                                  "identifier": "tw_dev"
                                                }
                                              ],
                                              "callee": "TW_COMMAND_QUEUE_REG_ADDR"
                                            }
                                          }
                                        ],
                                        "callee": "writel"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "arrayIndexing": {
                                "array": "state",
                                "index": {
                                  "identifier": "request_id"
                                }
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_S_POSTED"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "unaryExpression": {
                        "operand": {
                          "postIncDecOperationExpression": {
                            "operand": {
                              "identifier": "posted_request_count"
                            },
                            "operator": "++"
                          }
                        }
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "max_posted_request_count"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "posted_request_count"
                                    }
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "RelationalExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "posted_request_count"
                              }
                            }
                          },
                          "rightOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "max_posted_request_count"
                              }
                            }
                          },
                          "operator": ">"
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_reset_device_extension",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "i",
                "identifierType": "int",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "flags",
                "identifierType": "unsigned long",
                "initialValue": "0"
              }
            ]
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "TW_IN_RESET"
                  },
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "flags"
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "set_bit"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "TW_DISABLE_INTERRUPTS"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "TW_MASK_COMMAND_INTERRUPT"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "host_lock"
                      }
                    }
                  },
                  {
                    "identifier": "flags"
                  }
                ],
                "callee": "spin_lock_irqsave"
              }
            }
          },
          {
            "forStatement": {
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "i"
                  },
                  "rightOperand": {
                    "identifier": "TW_Q_LENGTH"
                  },
                  "operator": "<"
                }
              },
              "forInit": {
                "AssignmentExpression": {
                  "leftOperand": {
                    "identifier": "i"
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "="
                }
              },
              "forBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "identifierDeclStatement": [
                                      {
                                        "identifier": "cmd",
                                        "identifierType": "struct scsi_cmnd *",
                                        "initialValue": "tw_dev->srb[i]"
                                      }
                                    ]
                                  },
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "identifier": "result"
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "ShiftExpression": {
                                            "leftOperand": {
                                              "identifier": "DID_RESET"
                                            },
                                            "rightOperand": {
                                              "constant": "16"
                                            },
                                            "operator": "<<"
                                          }
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "expressionStatement": {
                                          "callExpression": {
                                            "argumentList": [
                                              {
                                                "identifier": "cmd"
                                              }
                                            ],
                                            "callee": "scsi_dma_unmap"
                                          }
                                        }
                                      },
                                      "condition": {
                                        "callExpression": {
                                          "argumentList": [
                                            {
                                              "identifier": "cmd"
                                            }
                                          ],
                                          "callee": "twa_command_mapped"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "identifier": "cmd"
                                          }
                                        ],
                                        "callee": "scsi_done"
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "unaryExpression": {
                                  "operand": {
                                    "arrayIndexing": {
                                      "array": "srb",
                                      "index": {
                                        "identifier": "i"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "AndExpression": {
                          "leftOperand": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "unaryExpression": {
                                  "operand": {
                                    "arrayIndexing": {
                                      "array": "state",
                                      "index": {
                                        "identifier": "i"
                                      }
                                    }
                                  }
                                }
                              },
                              "rightOperand": {
                                "identifier": "TW_S_FINISHED"
                              },
                              "operator": "!="
                            }
                          },
                          "rightOperand": {
                            "AndExpression": {
                              "leftOperand": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "arrayIndexing": {
                                          "array": "state",
                                          "index": {
                                            "identifier": "i"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "TW_S_INITIAL"
                                  },
                                  "operator": "!="
                                }
                              },
                              "rightOperand": {
                                "EqualityExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "arrayIndexing": {
                                          "array": "state",
                                          "index": {
                                            "identifier": "i"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "identifier": "TW_S_COMPLETED"
                                  },
                                  "operator": "!="
                                }
                              },
                              "operator": "&&"
                            }
                          },
                          "operator": "&&"
                        }
                      }
                    }
                  }
                ]
              },
              "forLoop": {
                "postIncDecOperationExpression": {
                  "operand": {
                    "identifier": "i"
                  },
                  "operator": "++"
                }
              }
            }
          },
          {
            "forStatement": {
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "i"
                  },
                  "rightOperand": {
                    "identifier": "TW_Q_LENGTH"
                  },
                  "operator": "<"
                }
              },
              "forInit": {
                "AssignmentExpression": {
                  "leftOperand": {
                    "identifier": "i"
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "="
                }
              },
              "forBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "arrayIndexing": {
                                "array": "free_queue",
                                "index": {
                                  "identifier": "i"
                                }
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "i"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "arrayIndexing": {
                                "array": "state",
                                "index": {
                                  "identifier": "i"
                                }
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_S_INITIAL"
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "forLoop": {
                "postIncDecOperationExpression": {
                  "operand": {
                    "identifier": "i"
                  },
                  "operator": "++"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "free_head"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_Q_START"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "free_tail"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_Q_START"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "posted_request_count"
                    }
                  }
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "pending_request_count"
                    }
                  }
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "pending_head"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_Q_START"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "pending_tail"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_Q_START"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "reset_print"
                    }
                  }
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "host_lock"
                      }
                    }
                  },
                  {
                    "identifier": "flags"
                  }
                ],
                "callee": "spin_unlock_irqrestore"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "gotoStatement": {
                  "goto": "out"
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "constant": "1"
                    }
                  ],
                  "callee": "twa_reset_sequence"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "TW_ENABLE_AND_CLEAR_INTERRUPTS"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "TW_IN_RESET"
                  },
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "flags"
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "clear_bit"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "chrdev_request_id"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_IOCTL_CHRDEV_FREE"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_reset_sequence",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "soft_reset"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "tries",
                "identifierType": "int",
                "initialValue": "0"
              },
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              },
              {
                "identifier": "flashed",
                "identifierType": "int",
                "initialValue": "0"
              },
              {
                "identifier": "do_soft_reset",
                "identifierType": "int",
                "initialValue": "soft_reset"
              }
            ]
          },
          {
            "whileStatement": {
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "tries"
                  },
                  "rightOperand": {
                    "identifier": "TW_MAX_RESET_TRIES"
                  },
                  "operator": "<"
                }
              },
              "whileBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "tw_dev"
                                  }
                                ],
                                "callee": "TW_SOFT_RESET"
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "unaryExpression": {
                                              "operand": {
                                                "identifier": "host"
                                              }
                                            }
                                          },
                                          {
                                            "identifier": "TW_DRIVER"
                                          },
                                          {
                                            "constant": "0x36"
                                          },
                                          {
                                            "constant": "\"Response queue (large) empty failed during reset sequence\""
                                          }
                                        ],
                                        "callee": "TW_PRINTK"
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "identifier": "do_soft_reset"
                                        },
                                        "rightOperand": {
                                          "constant": "1"
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "postIncDecOperationExpression": {
                                        "operand": {
                                          "identifier": "tries"
                                        },
                                        "operator": "++"
                                      }
                                    }
                                  },
                                  {
                                    "continueStatement": "continue"
                                  }
                                ]
                              },
                              "condition": {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "identifier": "tw_dev"
                                    }
                                  ],
                                  "callee": "twa_empty_response_queue_large"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "identifier": "do_soft_reset"
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "host"
                                      }
                                    }
                                  },
                                  {
                                    "identifier": "TW_DRIVER"
                                  },
                                  {
                                    "constant": "0x1f"
                                  },
                                  {
                                    "constant": "\"Microcontroller not ready during reset sequence\""
                                  }
                                ],
                                "callee": "TW_PRINTK"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "do_soft_reset"
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "postIncDecOperationExpression": {
                                "operand": {
                                  "identifier": "tries"
                                },
                                "operator": "++"
                              }
                            }
                          },
                          {
                            "continueStatement": "continue"
                          }
                        ]
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            },
                            {
                              "InclusiveOrExpression": {
                                "leftOperand": {
                                  "identifier": "TW_STATUS_MICROCONTROLLER_READY"
                                },
                                "rightOperand": {
                                  "conditionalExpression": {
                                    "condition": {
                                      "EqualityExpression": {
                                        "leftOperand": {
                                          "identifier": "do_soft_reset"
                                        },
                                        "rightOperand": {
                                          "constant": "1"
                                        },
                                        "operator": "=="
                                      }
                                    },
                                    "trueExpression": {
                                      "identifier": "TW_STATUS_ATTENTION_INTERRUPT"
                                    },
                                    "falseExpression": {
                                      "constant": "0"
                                    }
                                  }
                                },
                                "operator": "|"
                              }
                            },
                            {
                              "constant": "60"
                            }
                          ],
                          "callee": "twa_poll_status"
                        }
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "host"
                                      }
                                    }
                                  },
                                  {
                                    "identifier": "TW_DRIVER"
                                  },
                                  {
                                    "constant": "0x20"
                                  },
                                  {
                                    "constant": "\"Response queue empty failed during reset sequence\""
                                  }
                                ],
                                "callee": "TW_PRINTK"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "do_soft_reset"
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "postIncDecOperationExpression": {
                                "operand": {
                                  "identifier": "tries"
                                },
                                "operator": "++"
                              }
                            }
                          },
                          {
                            "continueStatement": "continue"
                          }
                        ]
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            }
                          ],
                          "callee": "twa_empty_response_queue"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "flashed"
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "host"
                                      }
                                    }
                                  },
                                  {
                                    "identifier": "TW_DRIVER"
                                  },
                                  {
                                    "constant": "0x21"
                                  },
                                  {
                                    "constant": "\"Compatibility check failed during reset sequence\""
                                  }
                                ],
                                "callee": "TW_PRINTK"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "do_soft_reset"
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "postIncDecOperationExpression": {
                                "operand": {
                                  "identifier": "tries"
                                },
                                "operator": "++"
                              }
                            }
                          },
                          {
                            "continueStatement": "continue"
                          }
                        ]
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            },
                            {
                              "unaryOperationExpression": {
                                "operator": "&",
                                "operand": {
                                  "identifier": "flashed"
                                }
                              }
                            }
                          ],
                          "callee": "twa_check_srl"
                        }
                      },
                      "elseBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "postIncDecOperationExpression": {
                                        "operand": {
                                          "identifier": "tries"
                                        },
                                        "operator": "++"
                                      }
                                    }
                                  },
                                  {
                                    "continueStatement": "continue"
                                  }
                                ]
                              },
                              "condition": {
                                "identifier": "flashed"
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "unaryExpression": {
                                      "operand": {
                                        "identifier": "host"
                                      }
                                    }
                                  },
                                  {
                                    "identifier": "TW_DRIVER"
                                  },
                                  {
                                    "constant": "0x22"
                                  },
                                  {
                                    "constant": "\"AEN drain failed during reset sequence\""
                                  }
                                ],
                                "callee": "TW_PRINTK"
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "identifier": "do_soft_reset"
                                },
                                "rightOperand": {
                                  "constant": "1"
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "postIncDecOperationExpression": {
                                "operand": {
                                  "identifier": "tries"
                                },
                                "operator": "++"
                              }
                            }
                          },
                          {
                            "continueStatement": "continue"
                          }
                        ]
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "tw_dev"
                            },
                            {
                              "identifier": "soft_reset"
                            }
                          ],
                          "callee": "twa_aen_drain_queue"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_scsi_biosparam",
        "parameterList": [
          {
            "parameterType": "struct scsi_device *",
            "parameter": "sdev"
          },
          {
            "parameterType": "struct block_device *",
            "parameter": "bdev"
          },
          {
            "parameterType": "sector_t",
            "parameter": "capacity"
          },
          {
            "parameterType": "int",
            "parameter": "geom[]"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "heads",
                "identifierType": "int"
              },
              {
                "identifier": "sectors",
                "identifierType": "int"
              },
              {
                "identifier": "cylinders",
                "identifierType": "int"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "heads"
                        },
                        "rightOperand": {
                          "constant": "255"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "sectors"
                        },
                        "rightOperand": {
                          "constant": "63"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "cylinders"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "capacity"
                              },
                              {
                                "MultiplicativeExpression": {
                                  "leftOperand": {
                                    "identifier": "heads"
                                  },
                                  "rightOperand": {
                                    "identifier": "sectors"
                                  },
                                  "operator": "*"
                                }
                              }
                            ],
                            "callee": "sector_div"
                          }
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "capacity"
                  },
                  "rightOperand": {
                    "constant": "0x200000"
                  },
                  "operator": ">="
                }
              },
              "elseBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "heads"
                        },
                        "rightOperand": {
                          "constant": "64"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "sectors"
                        },
                        "rightOperand": {
                          "constant": "32"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "cylinders"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "capacity"
                              },
                              {
                                "MultiplicativeExpression": {
                                  "leftOperand": {
                                    "identifier": "heads"
                                  },
                                  "rightOperand": {
                                    "identifier": "sectors"
                                  },
                                  "operator": "*"
                                }
                              }
                            ],
                            "callee": "sector_div"
                          }
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "arrayIndexing": {
                    "array": "geom",
                    "index": {
                      "constant": "0"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "heads"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "arrayIndexing": {
                    "array": "geom",
                    "index": {
                      "constant": "1"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "sectors"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "arrayIndexing": {
                    "array": "geom",
                    "index": {
                      "constant": "2"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "cylinders"
                },
                "operator": "="
              }
            }
          },
          {
            "returnStatement": {
              "constant": "0"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_scsi_eh_reset",
        "parameterList": [
          {
            "parameterType": "struct scsi_cmnd *",
            "parameter": "SCpnt"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_dev",
                "identifierType": "TW_Device_Extension *",
                "initialValue": "NULL"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "FAILED"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "tw_dev"
                },
                "rightOperand": {
                  "castExpression": {
                    "originalExpression": {
                      "unaryExpression": {
                        "operand": {
                          "identifier": "hostdata"
                        }
                      }
                    },
                    "target": "TW_Device_Extension *"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "unaryExpression": {
                "operand": {
                  "postIncDecOperationExpression": {
                    "operand": {
                      "identifier": "num_resets"
                    },
                    "operator": "++"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "KERN_WARNING"
                  },
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "device"
                      }
                    }
                  },
                  {
                    "constant": "\"WARNING: (0x%02X:0x%04X): Command (0x%x) timed out, resetting card.\\n\""
                  },
                  {
                    "identifier": "TW_DRIVER"
                  },
                  {
                    "constant": "0x2c"
                  },
                  {
                    "unaryExpression": {
                      "operand": {
                        "arrayIndexing": {
                          "array": "cmnd",
                          "index": {
                            "constant": "0"
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "sdev_printk"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "ioctl_lock"
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "mutex_lock"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x2b"
                          },
                          {
                            "constant": "\"Controller reset failed during scsi host reset\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    }
                  ],
                  "callee": "twa_reset_device_extension"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "identifier": "SUCCESS"
                },
                "operator": "="
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "ioctl_lock"
                          }
                        }
                      }
                    }
                  }
                ],
                "callee": "mutex_unlock"
              }
            }
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_scsi_queue_lck",
        "parameterList": [
          {
            "parameterType": "struct scsi_cmnd *",
            "parameter": "SCpnt"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "done",
                "identifierType": "void ( * ) ( struct scsi_cmnd * )",
                "initialValue": "scsi_done"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "request_id",
                "identifierType": "int"
              },
              {
                "identifier": "retval",
                "identifierType": "int"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_dev",
                "identifierType": "TW_Device_Extension *",
                "initialValue": "(TW_Device_Extension *)SCpnt->device->host->hostdata"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "identifier": "SCSI_MLQUEUE_HOST_BUSY"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "TW_IN_RESET"
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "flags"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "callee": "test_bit"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "result"
                            }
                          }
                        },
                        "rightOperand": {
                          "ShiftExpression": {
                            "leftOperand": {
                              "identifier": "DID_BAD_TARGET"
                            },
                            "rightOperand": {
                              "constant": "16"
                            },
                            "operator": "<<"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "SCpnt"
                          }
                        ],
                        "callee": "done"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out"
                    }
                  }
                ]
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "lun"
                          }
                        }
                      },
                      "rightOperand": {
                        "constant": "0"
                      },
                      "operator": "!="
                    }
                  },
                  "rightOperand": {
                    "RelationalExpression": {
                      "leftOperand": {
                        "unaryExpression": {
                          "operand": {
                            "memberAccess": {
                              "leftOperand": "tw_compat_info",
                              "rightOperand": "working_srl",
                              "operator": "."
                            }
                          }
                        }
                      },
                      "rightOperand": {
                        "identifier": "TW_FW_SRL_LUNS_SUPPORTED"
                      },
                      "operator": "<"
                    }
                  },
                  "operator": "&&"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  },
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "request_id"
                      }
                    }
                  }
                ],
                "callee": "twa_get_request_id"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "srb",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "SCpnt"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "tw_dev"
                      },
                      {
                        "identifier": "request_id"
                      },
                      {
                        "identifier": "NULL"
                      },
                      {
                        "constant": "0"
                      },
                      {
                        "identifier": "NULL"
                      }
                    ],
                    "callee": "twa_scsiop_execute_scsi"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "switchStatement": {
              "condition": {
                "identifier": "retval"
              },
              "switchBlock": {
                "compoundStatement": [
                  {
                    "label": "case SCSI_MLQUEUE_HOST_BUSY:"
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "SCpnt"
                              }
                            ],
                            "callee": "scsi_dma_unmap"
                          }
                        }
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "SCpnt"
                            }
                          ],
                          "callee": "twa_command_mapped"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          },
                          {
                            "identifier": "request_id"
                          }
                        ],
                        "callee": "twa_free_request_id"
                      }
                    }
                  },
                  {
                    "breakStatement": "break"
                  },
                  {
                    "label": "case 1:"
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "result"
                            }
                          }
                        },
                        "rightOperand": {
                          "ShiftExpression": {
                            "leftOperand": {
                              "identifier": "DID_ERROR"
                            },
                            "rightOperand": {
                              "constant": "16"
                            },
                            "operator": "<<"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "SCpnt"
                              }
                            ],
                            "callee": "scsi_dma_unmap"
                          }
                        }
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "SCpnt"
                            }
                          ],
                          "callee": "twa_command_mapped"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "SCpnt"
                          }
                        ],
                        "callee": "done"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "arrayIndexing": {
                                "array": "state",
                                "index": {
                                  "identifier": "request_id"
                                }
                              }
                            }
                          }
                        },
                        "rightOperand": {
                          "identifier": "TW_S_COMPLETED"
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          },
                          {
                            "identifier": "request_id"
                          }
                        ],
                        "callee": "twa_free_request_id"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_scsiop_execute_scsi",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          },
          {
            "parameterType": "unsigned char *",
            "parameter": "cdb"
          },
          {
            "parameterType": "int",
            "parameter": "use_sg"
          },
          {
            "parameterType": "TW_SG_Entry *",
            "parameter": "sglistarg"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "full_command_packet",
                "identifierType": "TW_Command_Full *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "command_packet",
                "identifierType": "TW_Command_Apache *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "num_sectors",
                "identifierType": "u32",
                "initialValue": "0x0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "i",
                "identifierType": "int"
              },
              {
                "identifier": "sg_count",
                "identifierType": "int"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "srb",
                "identifierType": "struct scsi_cmnd *",
                "initialValue": "NULL"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "sg",
                "identifierType": "struct scatterlist *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "1"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "srb"
                    },
                    "rightOperand": {
                      "unaryExpression": {
                        "operand": {
                          "arrayIndexing": {
                            "array": "srb",
                            "index": {
                              "identifier": "request_id"
                            }
                          }
                        }
                      }
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "unaryExpression": {
                  "operand": {
                    "arrayIndexing": {
                      "array": "srb",
                      "index": {
                        "identifier": "request_id"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "full_command_packet"
                },
                "rightOperand": {
                  "unaryExpression": {
                    "operand": {
                      "arrayIndexing": {
                        "array": "command_packet_virt",
                        "index": {
                          "identifier": "request_id"
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "header.header_desc",
                        "rightOperand": "size_header",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "constant": "128"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "header.status_block",
                        "rightOperand": "error",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "memberAccess": {
                        "leftOperand": "header.status_block",
                        "rightOperand": "severity__reserved",
                        "operator": "."
                      }
                    }
                  }
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "command_packet"
                },
                "rightOperand": {
                  "unaryOperationExpression": {
                    "operator": "&",
                    "operand": {
                      "unaryExpression": {
                        "operand": {
                          "memberAccess": {
                            "leftOperand": "command",
                            "rightOperand": "newcommand",
                            "operator": "."
                          }
                        }
                      }
                    }
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "status"
                    }
                  }
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "opcode__reserved"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "constant": "0"
                      },
                      {
                        "identifier": "TW_OP_EXECUTE_SCSI"
                      }
                    ],
                    "callee": "TW_OPRES_IN"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "cdb"
                          }
                        }
                      },
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "cmnd"
                          }
                        }
                      },
                      {
                        "identifier": "TW_MAX_CDB_LEN"
                      }
                    ],
                    "callee": "memcpy"
                  }
                }
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "identifier": "cdb"
                  }
                }
              },
              "elseBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "cdb"
                          }
                        }
                      },
                      {
                        "identifier": "cdb"
                      },
                      {
                        "identifier": "TW_MAX_CDB_LEN"
                      }
                    ],
                    "callee": "memcpy"
                  }
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "unit"
                            }
                          }
                        },
                        "rightOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "id"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "request_id__lunl"
                            }
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "lun"
                                  }
                                }
                              },
                              {
                                "identifier": "request_id"
                              }
                            ],
                            "callee": "TW_REQ_LUN_IN"
                          }
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "srb"
              },
              "elseBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "request_id__lunl"
                            }
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "constant": "0"
                              },
                              {
                                "identifier": "request_id"
                              }
                            ],
                            "callee": "TW_REQ_LUN_IN"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "unit"
                            }
                          }
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "sgl_offset"
                    }
                  }
                },
                "rightOperand": {
                  "constant": "16"
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "expressionStatement": {
                                          "callExpression": {
                                            "argumentList": [
                                              {
                                                "identifier": "srb"
                                              },
                                              {
                                                "unaryExpression": {
                                                  "operand": {
                                                    "arrayIndexing": {
                                                      "array": "generic_buffer_virt",
                                                      "index": {
                                                        "identifier": "request_id"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "identifier": "TW_SECTOR_SIZE"
                                              }
                                            ],
                                            "callee": "scsi_sg_copy_to_buffer"
                                          }
                                        }
                                      },
                                      "condition": {
                                        "OrExpression": {
                                          "leftOperand": {
                                            "EqualityExpression": {
                                              "leftOperand": {
                                                "unaryExpression": {
                                                  "operand": {
                                                    "identifier": "sc_data_direction"
                                                  }
                                                }
                                              },
                                              "rightOperand": {
                                                "identifier": "DMA_TO_DEVICE"
                                              },
                                              "operator": "=="
                                            }
                                          },
                                          "rightOperand": {
                                            "EqualityExpression": {
                                              "leftOperand": {
                                                "unaryExpression": {
                                                  "operand": {
                                                    "identifier": "sc_data_direction"
                                                  }
                                                }
                                              },
                                              "rightOperand": {
                                                "identifier": "DMA_BIDIRECTIONAL"
                                              },
                                              "operator": "=="
                                            }
                                          },
                                          "operator": "||"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "memberAccess": {
                                                "leftOperand": "sg_list[0]",
                                                "rightOperand": "address",
                                                "operator": "."
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "callExpression": {
                                            "argumentList": [
                                              {
                                                "unaryExpression": {
                                                  "operand": {
                                                    "arrayIndexing": {
                                                      "array": "generic_buffer_phys",
                                                      "index": {
                                                        "identifier": "request_id"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "callee": "TW_CPU_TO_SGL"
                                          }
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "unaryExpression": {
                                            "operand": {
                                              "memberAccess": {
                                                "leftOperand": "sg_list[0]",
                                                "rightOperand": "length",
                                                "operator": "."
                                              }
                                            }
                                          }
                                        },
                                        "rightOperand": {
                                          "callExpression": {
                                            "argumentList": [
                                              {
                                                "identifier": "TW_MIN_SGL_LENGTH"
                                              }
                                            ],
                                            "callee": "cpu_to_le32"
                                          }
                                        },
                                        "operator": "="
                                      }
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "unaryOperationExpression": {
                                  "operator": "!",
                                  "operand": {
                                    "callExpression": {
                                      "argumentList": [
                                        {
                                          "identifier": "srb"
                                        }
                                      ],
                                      "callee": "twa_command_mapped"
                                    }
                                  }
                                }
                              },
                              "elseBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "AssignmentExpression": {
                                        "leftOperand": {
                                          "identifier": "sg_count"
                                        },
                                        "rightOperand": {
                                          "callExpression": {
                                            "argumentList": [
                                              {
                                                "identifier": "srb"
                                              }
                                            ],
                                            "callee": "scsi_dma_map"
                                          }
                                        },
                                        "operator": "="
                                      }
                                    }
                                  },
                                  {
                                    "ifStatement": {
                                      "ifBlock": {
                                        "gotoStatement": {
                                          "goto": "out"
                                        }
                                      },
                                      "condition": {
                                        "RelationalExpression": {
                                          "leftOperand": {
                                            "identifier": "sg_count"
                                          },
                                          "rightOperand": {
                                            "constant": "0"
                                          },
                                          "operator": "<"
                                        }
                                      }
                                    }
                                  },
                                  {},
                                  {},
                                  {},
                                  {},
                                  {},
                                  {},
                                  {},
                                  {},
                                  {},
                                  {},
                                  {
                                    "compoundStatement": [
                                      {
                                        "expressionStatement": {
                                          "AssignmentExpression": {
                                            "leftOperand": {
                                              "unaryExpression": {
                                                "operand": {
                                                  "memberAccess": {
                                                    "leftOperand": "sg_list[i]",
                                                    "rightOperand": "address",
                                                    "operator": "."
                                                  }
                                                }
                                              }
                                            },
                                            "rightOperand": {
                                              "callExpression": {
                                                "argumentList": [
                                                  {
                                                    "callExpression": {
                                                      "argumentList": [
                                                        {
                                                          "identifier": "sg"
                                                        }
                                                      ],
                                                      "callee": "sg_dma_address"
                                                    }
                                                  }
                                                ],
                                                "callee": "TW_CPU_TO_SGL"
                                              }
                                            },
                                            "operator": "="
                                          }
                                        }
                                      },
                                      {
                                        "expressionStatement": {
                                          "AssignmentExpression": {
                                            "leftOperand": {
                                              "unaryExpression": {
                                                "operand": {
                                                  "memberAccess": {
                                                    "leftOperand": "sg_list[i]",
                                                    "rightOperand": "length",
                                                    "operator": "."
                                                  }
                                                }
                                              }
                                            },
                                            "rightOperand": {
                                              "callExpression": {
                                                "argumentList": [
                                                  {
                                                    "callExpression": {
                                                      "argumentList": [
                                                        {
                                                          "identifier": "sg"
                                                        }
                                                      ],
                                                      "callee": "sg_dma_len"
                                                    }
                                                  }
                                                ],
                                                "callee": "cpu_to_le32"
                                              }
                                            },
                                            "operator": "="
                                          }
                                        }
                                      },
                                      {
                                        "ifStatement": {
                                          "ifBlock": {
                                            "compoundStatement": [
                                              {
                                                "expressionStatement": {
                                                  "callExpression": {
                                                    "argumentList": [
                                                      {
                                                        "unaryExpression": {
                                                          "operand": {
                                                            "identifier": "host"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "identifier": "TW_DRIVER"
                                                      },
                                                      {
                                                        "constant": "0x2e"
                                                      },
                                                      {
                                                        "constant": "\"Found unaligned sgl address during execute scsi\""
                                                      }
                                                    ],
                                                    "callee": "TW_PRINTK"
                                                  }
                                                }
                                              },
                                              {
                                                "gotoStatement": {
                                                  "goto": "out"
                                                }
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "BitAndExpression": {
                                              "leftOperand": {
                                                "unaryExpression": {
                                                  "operand": {
                                                    "memberAccess": {
                                                      "leftOperand": "sg_list[i]",
                                                      "rightOperand": "address",
                                                      "operator": "."
                                                    }
                                                  }
                                                }
                                              },
                                              "rightOperand": {
                                                "callExpression": {
                                                  "argumentList": [
                                                    {
                                                      "identifier": "TW_ALIGNMENT_9000_SGL"
                                                    }
                                                  ],
                                                  "callee": "TW_CPU_TO_SGL"
                                                }
                                              },
                                              "operator": "&"
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "identifier": "sgl_entries__lunh"
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "callExpression": {
                                    "argumentList": [
                                      {
                                        "ShiftExpression": {
                                          "leftOperand": {
                                            "unaryExpression": {
                                              "operand": {
                                                "identifier": "lun"
                                              }
                                            }
                                          },
                                          "rightOperand": {
                                            "constant": "4"
                                          },
                                          "operator": ">>"
                                        }
                                      },
                                      {
                                        "callExpression": {
                                          "argumentList": [
                                            {
                                              "unaryExpression": {
                                                "operand": {
                                                  "arrayIndexing": {
                                                    "array": "srb",
                                                    "index": {
                                                      "identifier": "request_id"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "callee": "scsi_sg_count"
                                        }
                                      }
                                    ],
                                    "callee": "TW_REQ_LUN_IN"
                                  }
                                },
                                "operator": "="
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "srb"
                            }
                          ],
                          "callee": "scsi_sg_count"
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "identifier": "sglistarg"
                  }
                }
              },
              "elseBlock": {
                "compoundStatement": [
                  {
                    "forStatement": {
                      "condition": {
                        "RelationalExpression": {
                          "leftOperand": {
                            "identifier": "i"
                          },
                          "rightOperand": {
                            "identifier": "use_sg"
                          },
                          "operator": "<"
                        }
                      },
                      "forInit": {
                        "AssignmentExpression": {
                          "leftOperand": {
                            "identifier": "i"
                          },
                          "rightOperand": {
                            "constant": "0"
                          },
                          "operator": "="
                        }
                      },
                      "forBlock": {
                        "compoundStatement": [
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "sg_list[i]",
                                        "rightOperand": "address",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "memberAccess": {
                                    "leftOperand": "sglistarg[i]",
                                    "rightOperand": "address",
                                    "operator": "."
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "expressionStatement": {
                              "AssignmentExpression": {
                                "leftOperand": {
                                  "unaryExpression": {
                                    "operand": {
                                      "memberAccess": {
                                        "leftOperand": "sg_list[i]",
                                        "rightOperand": "length",
                                        "operator": "."
                                      }
                                    }
                                  }
                                },
                                "rightOperand": {
                                  "memberAccess": {
                                    "leftOperand": "sglistarg[i]",
                                    "rightOperand": "length",
                                    "operator": "."
                                  }
                                },
                                "operator": "="
                              }
                            }
                          },
                          {
                            "ifStatement": {
                              "ifBlock": {
                                "compoundStatement": [
                                  {
                                    "expressionStatement": {
                                      "callExpression": {
                                        "argumentList": [
                                          {
                                            "unaryExpression": {
                                              "operand": {
                                                "identifier": "host"
                                              }
                                            }
                                          },
                                          {
                                            "identifier": "TW_DRIVER"
                                          },
                                          {
                                            "constant": "0x2f"
                                          },
                                          {
                                            "constant": "\"Found unaligned sgl address during internal post\""
                                          }
                                        ],
                                        "callee": "TW_PRINTK"
                                      }
                                    }
                                  },
                                  {
                                    "gotoStatement": {
                                      "goto": "out"
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "BitAndExpression": {
                                  "leftOperand": {
                                    "unaryExpression": {
                                      "operand": {
                                        "memberAccess": {
                                          "leftOperand": "sg_list[i]",
                                          "rightOperand": "address",
                                          "operator": "."
                                        }
                                      }
                                    }
                                  },
                                  "rightOperand": {
                                    "callExpression": {
                                      "argumentList": [
                                        {
                                          "identifier": "TW_ALIGNMENT_9000_SGL"
                                        }
                                      ],
                                      "callee": "TW_CPU_TO_SGL"
                                    }
                                  },
                                  "operator": "&"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "forLoop": {
                        "postIncDecOperationExpression": {
                          "operand": {
                            "identifier": "i"
                          },
                          "operator": "++"
                        }
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "sgl_entries__lunh"
                            }
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "constant": "0"
                              },
                              {
                                "identifier": "use_sg"
                              }
                            ],
                            "callee": "TW_REQ_LUN_IN"
                          }
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "AssignmentExpression": {
                            "leftOperand": {
                              "identifier": "num_sectors"
                            },
                            "rightOperand": {
                              "castExpression": {
                                "originalExpression": {
                                  "unaryExpression": {
                                    "operand": {
                                      "arrayIndexing": {
                                        "array": "cmnd",
                                        "index": {
                                          "constant": "4"
                                        }
                                      }
                                    }
                                  }
                                },
                                "target": "u32"
                              }
                            },
                            "operator": "="
                          }
                        }
                      },
                      "condition": {
                        "OrExpression": {
                          "leftOperand": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "unaryExpression": {
                                  "operand": {
                                    "arrayIndexing": {
                                      "array": "cmnd",
                                      "index": {
                                        "constant": "0"
                                      }
                                    }
                                  }
                                }
                              },
                              "rightOperand": {
                                "identifier": "READ_6"
                              },
                              "operator": "=="
                            }
                          },
                          "rightOperand": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "unaryExpression": {
                                  "operand": {
                                    "arrayIndexing": {
                                      "array": "cmnd",
                                      "index": {
                                        "constant": "0"
                                      }
                                    }
                                  }
                                }
                              },
                              "rightOperand": {
                                "identifier": "WRITE_6"
                              },
                              "operator": "=="
                            }
                          },
                          "operator": "||"
                        }
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "AssignmentExpression": {
                            "leftOperand": {
                              "identifier": "num_sectors"
                            },
                            "rightOperand": {
                              "InclusiveOrExpression": {
                                "leftOperand": {
                                  "castExpression": {
                                    "originalExpression": {
                                      "unaryExpression": {
                                        "operand": {
                                          "arrayIndexing": {
                                            "array": "cmnd",
                                            "index": {
                                              "constant": "8"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "target": "u32"
                                  }
                                },
                                "rightOperand": {
                                  "ShiftExpression": {
                                    "leftOperand": {
                                      "castExpression": {
                                        "originalExpression": {
                                          "unaryExpression": {
                                            "operand": {
                                              "arrayIndexing": {
                                                "array": "cmnd",
                                                "index": {
                                                  "constant": "7"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "target": "u32"
                                      }
                                    },
                                    "rightOperand": {
                                      "constant": "8"
                                    },
                                    "operator": "<<"
                                  }
                                },
                                "operator": "|"
                              }
                            },
                            "operator": "="
                          }
                        }
                      },
                      "condition": {
                        "OrExpression": {
                          "leftOperand": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "unaryExpression": {
                                  "operand": {
                                    "arrayIndexing": {
                                      "array": "cmnd",
                                      "index": {
                                        "constant": "0"
                                      }
                                    }
                                  }
                                }
                              },
                              "rightOperand": {
                                "identifier": "READ_10"
                              },
                              "operator": "=="
                            }
                          },
                          "rightOperand": {
                            "EqualityExpression": {
                              "leftOperand": {
                                "unaryExpression": {
                                  "operand": {
                                    "arrayIndexing": {
                                      "array": "cmnd",
                                      "index": {
                                        "constant": "0"
                                      }
                                    }
                                  }
                                }
                              },
                              "rightOperand": {
                                "identifier": "WRITE_10"
                              },
                              "operator": "=="
                            }
                          },
                          "operator": "||"
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "srb"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "sector_count"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "num_sectors"
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "unaryExpression": {
                        "operand": {
                          "identifier": "max_sector_count"
                        }
                      }
                    },
                    "rightOperand": {
                      "unaryExpression": {
                        "operand": {
                          "identifier": "sector_count"
                        }
                      }
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "sector_count"
                      }
                    }
                  },
                  "rightOperand": {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "max_sector_count"
                      }
                    }
                  },
                  "operator": ">"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "sgl_entries"
                            }
                          }
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "unaryExpression": {
                                  "operand": {
                                    "arrayIndexing": {
                                      "array": "srb",
                                      "index": {
                                        "identifier": "request_id"
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "callee": "scsi_sg_count"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "AssignmentExpression": {
                            "leftOperand": {
                              "unaryExpression": {
                                "operand": {
                                  "identifier": "max_sgl_entries"
                                }
                              }
                            },
                            "rightOperand": {
                              "unaryExpression": {
                                "operand": {
                                  "identifier": "sgl_entries"
                                }
                              }
                            },
                            "operator": "="
                          }
                        }
                      },
                      "condition": {
                        "RelationalExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "sgl_entries"
                              }
                            }
                          },
                          "rightOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "max_sgl_entries"
                              }
                            }
                          },
                          "operator": ">"
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "srb"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "tw_dev"
                              },
                              {
                                "identifier": "request_id"
                              },
                              {
                                "constant": "0"
                              }
                            ],
                            "callee": "twa_post_command_packet"
                          }
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "srb"
              },
              "elseBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "tw_dev"
                          },
                          {
                            "identifier": "request_id"
                          },
                          {
                            "constant": "1"
                          }
                        ],
                        "callee": "twa_post_command_packet"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "constant": "0"
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "label": "out:"
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_scsiop_execute_scsi_complete",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          },
          {
            "parameterType": "int",
            "parameter": "request_id"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "cmd",
                "identifierType": "struct scsi_cmnd *",
                "initialValue": "tw_dev->srb[request_id]"
              }
            ]
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "compoundStatement": [
                          {
                            "identifierDeclStatement": [
                              {
                                "identifier": "buf",
                                "identifierType": "void *",
                                "initialValue": "tw_dev->generic_buffer_virt[request_id]"
                              }
                            ]
                          },
                          {
                            "expressionStatement": {
                              "callExpression": {
                                "argumentList": [
                                  {
                                    "identifier": "cmd"
                                  },
                                  {
                                    "identifier": "buf"
                                  },
                                  {
                                    "identifier": "TW_SECTOR_SIZE"
                                  }
                                ],
                                "callee": "scsi_sg_copy_from_buffer"
                              }
                            }
                          }
                        ]
                      },
                      "condition": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "identifier": "cmd"
                                }
                              ],
                              "callee": "scsi_sg_count"
                            }
                          },
                          "rightOperand": {
                            "constant": "1"
                          },
                          "operator": "=="
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "unaryOperationExpression": {
                      "operator": "!",
                      "operand": {
                        "callExpression": {
                          "argumentList": [
                            {
                              "identifier": "cmd"
                            }
                          ],
                          "callee": "twa_command_mapped"
                        }
                      }
                    }
                  },
                  "rightOperand": {
                    "OrExpression": {
                      "leftOperand": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "sc_data_direction"
                              }
                            }
                          },
                          "rightOperand": {
                            "identifier": "DMA_FROM_DEVICE"
                          },
                          "operator": "=="
                        }
                      },
                      "rightOperand": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "sc_data_direction"
                              }
                            }
                          },
                          "rightOperand": {
                            "identifier": "DMA_BIDIRECTIONAL"
                          },
                          "operator": "=="
                        }
                      },
                      "operator": "||"
                    }
                  },
                  "operator": "&&"
                }
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "__twa_shutdown",
        "parameterList": [
          {
            "parameterType": "TW_Device_Extension *",
            "parameter": "tw_dev"
          }
        ],
        "functionBody": [
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "TW_DISABLE_INTERRUPTS"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "irq"
                      }
                    }
                  },
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "free_irq"
              }
            }
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "expressionStatement": {}
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x31"
                          },
                          {
                            "constant": "\"Connection shutdown failed\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "constant": "1"
                    },
                    {
                      "constant": "0"
                    },
                    {
                      "constant": "0"
                    },
                    {
                      "constant": "0"
                    },
                    {
                      "constant": "0"
                    },
                    {
                      "constant": "0"
                    },
                    {
                      "identifier": "NULL"
                    },
                    {
                      "identifier": "NULL"
                    },
                    {
                      "identifier": "NULL"
                    },
                    {
                      "identifier": "NULL"
                    },
                    {
                      "identifier": "NULL"
                    }
                  ],
                  "callee": "twa_initconnection"
                }
              },
              "elseBlock": {
                "compoundStatement": [
                  {},
                  {},
                  {},
                  {},
                  {},
                  {
                    "expressionStatement": {}
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "TW_CLEAR_ALL_INTERRUPTS"
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_shutdown",
        "parameterList": [
          {
            "parameterType": "struct pci_dev *",
            "parameter": "pdev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "host",
                "identifierType": "struct Scsi_Host *",
                "initialValue": "pci_get_drvdata(pdev)"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_dev",
                "identifierType": "TW_Device_Extension *",
                "initialValue": "(TW_Device_Extension *)host->hostdata"
              }
            ]
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "__twa_shutdown"
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_string_lookup",
        "parameterList": [
          {
            "parameterType": "twa_message_type *",
            "parameter": "table"
          },
          {
            "parameterType": "unsigned int",
            "parameter": "code"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "index",
                "identifierType": "int"
              }
            ]
          },
          {
            "forStatement": {
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "identifier": "code"
                      },
                      "rightOperand": {
                        "memberAccess": {
                          "leftOperand": "table[index]",
                          "rightOperand": "code",
                          "operator": "."
                        }
                      },
                      "operator": "!="
                    }
                  },
                  "rightOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "memberAccess": {
                          "leftOperand": "table[index]",
                          "rightOperand": "text",
                          "operator": "."
                        }
                      },
                      "rightOperand": {
                        "castExpression": {
                          "originalExpression": {
                            "constant": "0"
                          },
                          "target": "char *"
                        }
                      },
                      "operator": "!="
                    }
                  },
                  "operator": "&&"
                }
              },
              "forInit": {
                "AssignmentExpression": {
                  "leftOperand": {
                    "identifier": "index"
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": "="
                }
              },
              "forBlock": {
                "expressionStatement": {}
              },
              "forLoop": {
                "postIncDecOperationExpression": {
                  "operand": {
                    "identifier": "index"
                  },
                  "operator": "++"
                }
              }
            }
          },
          {
            "returnStatement": {
              "memberAccess": {
                "leftOperand": "table[index]",
                "rightOperand": "text",
                "operator": "."
              }
            }
          }
        ],
        "returnType": "static char *"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_slave_configure",
        "parameterList": [
          {
            "parameterType": "struct scsi_device *",
            "parameter": "sdev"
          }
        ],
        "functionBody": [
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "request_queue"
                      }
                    }
                  },
                  {
                    "MultiplicativeExpression": {
                      "leftOperand": {
                        "constant": "60"
                      },
                      "rightOperand": {
                        "identifier": "HZ"
                      },
                      "operator": "*"
                    }
                  }
                ],
                "callee": "blk_queue_rq_timeout"
              }
            }
          },
          {
            "returnStatement": {
              "constant": "0"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "driver_template",
          "identifierType": "struct scsi_host_template"
        }
      ]
    },
    {
      "functionDef": {
        "functionName": "twa_probe",
        "parameterList": [
          {
            "parameterType": "struct pci_dev *",
            "parameter": "pdev"
          },
          {
            "parameterType": "const struct pci_device_id *",
            "parameter": "dev_id"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "host",
                "identifierType": "struct Scsi_Host *",
                "initialValue": "NULL"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_dev",
                "identifierType": "TW_Device_Extension *"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "mem_addr",
                "identifierType": "unsigned long"
              },
              {
                "identifier": "mem_len",
                "identifierType": "unsigned long"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int"
              }
            ]
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "pdev"
                      }
                    ],
                    "callee": "pci_enable_device"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "host"
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x34"
                          },
                          {
                            "constant": "\"Failed to enable pci device\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_disable_device"
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "retval"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "pdev"
                  }
                ],
                "callee": "pci_set_master"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "pdev"
                  }
                ],
                "callee": "pci_try_set_mwi"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "dev"
                              }
                            }
                          }
                        }
                      },
                      {
                        "callExpression": {
                          "argumentList": [
                            {
                              "constant": "64"
                            }
                          ],
                          "callee": "DMA_BIT_MASK"
                        }
                      }
                    ],
                    "callee": "dma_set_mask_and_coherent"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "retval"
                    },
                    "rightOperand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryOperationExpression": {
                              "operator": "&",
                              "operand": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "dev"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "constant": "32"
                                }
                              ],
                              "callee": "DMA_BIT_MASK"
                            }
                          }
                        ],
                        "callee": "dma_set_mask_and_coherent"
                      }
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "identifier": "retval"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "host"
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x23"
                          },
                          {
                            "constant": "\"Failed to set dma mask\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "identifier": "ENODEV"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_disable_device"
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "retval"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "host"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "identifier": "driver_template"
                          }
                        }
                      },
                      {
                        "sizeofExpression": {
                          "operator": "sizeof",
                          "operand": {
                            "identifier": "TW_Device_Extension"
                          }
                        }
                      }
                    ],
                    "callee": "scsi_host_alloc"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "host"
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x24"
                          },
                          {
                            "constant": "\"Failed to allocate memory for device extension\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "identifier": "ENOMEM"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_disable_device"
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "identifier": "host"
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "tw_dev"
                },
                "rightOperand": {
                  "castExpression": {
                    "originalExpression": {
                      "unaryExpression": {
                        "operand": {
                          "identifier": "hostdata"
                        }
                      }
                    },
                    "target": "TW_Device_Extension *"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "host"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "host"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "tw_pci_dev"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "pdev"
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x25"
                          },
                          {
                            "constant": "\"Failed to initialize device extension\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "identifier": "ENOMEM"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_free_device_extension"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    }
                  ],
                  "callee": "twa_initialize_device_extension"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "pdev"
                      },
                      {
                        "constant": "\"3w-9xxx\""
                      }
                    ],
                    "callee": "pci_request_regions"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x26"
                          },
                          {
                            "constant": "\"Failed to get mem region\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_free_device_extension"
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "retval"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "mem_addr"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "pdev"
                              },
                              {
                                "constant": "1"
                              }
                            ],
                            "callee": "pci_resource_start"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "mem_len"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "pdev"
                              },
                              {
                                "constant": "1"
                              }
                            ],
                            "callee": "pci_resource_len"
                          }
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "device"
                      }
                    }
                  },
                  "rightOperand": {
                    "identifier": "PCI_DEVICE_ID_3WARE_9000"
                  },
                  "operator": "=="
                }
              },
              "elseBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "mem_addr"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "pdev"
                              },
                              {
                                "constant": "2"
                              }
                            ],
                            "callee": "pci_resource_start"
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "mem_len"
                        },
                        "rightOperand": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "pdev"
                              },
                              {
                                "constant": "2"
                              }
                            ],
                            "callee": "pci_resource_len"
                          }
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "base_addr"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "mem_addr"
                      },
                      {
                        "identifier": "mem_len"
                      }
                    ],
                    "callee": "ioremap"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x35"
                          },
                          {
                            "constant": "\"Failed to ioremap\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "identifier": "ENOMEM"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_release_mem_region"
                    }
                  }
                ]
              },
              "condition": {
                "unaryOperationExpression": {
                  "operator": "!",
                  "operand": {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "base_addr"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "TW_DISABLE_INTERRUPTS"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "identifier": "ENOMEM"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_iounmap"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "constant": "0"
                    }
                  ],
                  "callee": "twa_reset_sequence"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "unaryExpression": {
                        "operand": {
                          "identifier": "max_id"
                        }
                      }
                    },
                    "rightOperand": {
                      "identifier": "TW_MAX_UNITS_9650SE"
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "OrExpression": {
                  "leftOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "device"
                          }
                        }
                      },
                      "rightOperand": {
                        "identifier": "PCI_DEVICE_ID_3WARE_9650SE"
                      },
                      "operator": "=="
                    }
                  },
                  "rightOperand": {
                    "EqualityExpression": {
                      "leftOperand": {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "device"
                          }
                        }
                      },
                      "rightOperand": {
                        "identifier": "PCI_DEVICE_ID_3WARE_9690SA"
                      },
                      "operator": "=="
                    }
                  },
                  "operator": "||"
                }
              },
              "elseBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "unaryExpression": {
                        "operand": {
                          "identifier": "max_id"
                        }
                      }
                    },
                    "rightOperand": {
                      "identifier": "TW_MAX_UNITS"
                    },
                    "operator": "="
                  }
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "max_cmd_len"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "TW_MAX_CDB_LEN"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "max_lun"
                    }
                  }
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "memberAccess": {
                              "leftOperand": "tw_compat_info",
                              "rightOperand": "working_srl",
                              "operator": "."
                            }
                          }
                        }
                      }
                    ],
                    "callee": "TW_MAX_LUNS"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "unaryExpression": {
                    "operand": {
                      "identifier": "max_channel"
                    }
                  }
                },
                "rightOperand": {
                  "constant": "0"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "host"
                      },
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "dev"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "callee": "scsi_add_host"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x27"
                          },
                          {
                            "constant": "\"scsi add host failed\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_iounmap"
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "retval"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "pdev"
                  },
                  {
                    "identifier": "host"
                  }
                ],
                "callee": "pci_set_drvdata"
              }
            }
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "expressionStatement": {}
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "expressionStatement": {}
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "TW_USING_MSI"
                      },
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "flags"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "callee": "set_bit"
                  }
                }
              },
              "condition": {
                "AndExpression": {
                  "leftOperand": {
                    "identifier": "use_msi"
                  },
                  "rightOperand": {
                    "AndExpression": {
                      "leftOperand": {
                        "EqualityExpression": {
                          "leftOperand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "device"
                              }
                            }
                          },
                          "rightOperand": {
                            "identifier": "PCI_DEVICE_ID_3WARE_9000"
                          },
                          "operator": "!="
                        }
                      },
                      "rightOperand": {
                        "unaryOperationExpression": {
                          "operator": "!",
                          "operand": {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "identifier": "pdev"
                                }
                              ],
                              "callee": "pci_enable_msi"
                            }
                          }
                        }
                      },
                      "operator": "&&"
                    }
                  },
                  "operator": "&&"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "irq"
                          }
                        }
                      },
                      {
                        "identifier": "twa_interrupt"
                      },
                      {
                        "identifier": "IRQF_SHARED"
                      },
                      {
                        "constant": "\"3w-9xxx\""
                      },
                      {
                        "identifier": "tw_dev"
                      }
                    ],
                    "callee": "request_irq"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x30"
                          },
                          {
                            "constant": "\"Error requesting IRQ\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_remove_host"
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "retval"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "arrayIndexing": {
                    "array": "twa_device_extension_list",
                    "index": {
                      "identifier": "twa_device_extension_count"
                    }
                  }
                },
                "rightOperand": {
                  "identifier": "tw_dev"
                },
                "operator": "="
              }
            }
          },
          {
            "expressionStatement": {
              "postIncDecOperationExpression": {
                "operand": {
                  "identifier": "twa_device_extension_count"
                },
                "operator": "++"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "TW_ENABLE_AND_CLEAR_INTERRUPTS"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "host"
                  }
                ],
                "callee": "scsi_scan_host"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "ifStatement": {
                      "ifBlock": {
                        "expressionStatement": {
                          "callExpression": {
                            "argumentList": [
                              {
                                "identifier": "host"
                              },
                              {
                                "identifier": "TW_DRIVER"
                              },
                              {
                                "constant": "0x29"
                              },
                              {
                                "constant": "\"Failed to register character device\""
                              }
                            ],
                            "callee": "TW_PRINTK"
                          }
                        }
                      },
                      "condition": {
                        "RelationalExpression": {
                          "leftOperand": {
                            "AssignmentExpression": {
                              "leftOperand": {
                                "identifier": "twa_major"
                              },
                              "rightOperand": {
                                "callExpression": {
                                  "argumentList": [
                                    {
                                      "constant": "0"
                                    },
                                    {
                                      "constant": "\"twa\""
                                    },
                                    {
                                      "unaryOperationExpression": {
                                        "operator": "&",
                                        "operand": {
                                          "identifier": "twa_fops"
                                        }
                                      }
                                    }
                                  ],
                                  "callee": "register_chrdev"
                                }
                              },
                              "operator": "="
                            }
                          },
                          "rightOperand": {
                            "constant": "0"
                          },
                          "operator": "<"
                        }
                      }
                    }
                  }
                ]
              },
              "condition": {
                "EqualityExpression": {
                  "leftOperand": {
                    "identifier": "twa_major"
                  },
                  "rightOperand": {
                    "unaryOperationExpression": {
                      "operator": "-",
                      "operand": {
                        "constant": "1"
                      }
                    }
                  },
                  "operator": "=="
                }
              }
            }
          },
          {
            "returnStatement": {
              "constant": "0"
            }
          },
          {
            "label": "out_remove_host:"
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "pdev"
                      }
                    ],
                    "callee": "pci_disable_msi"
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "TW_USING_MSI"
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "flags"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "callee": "test_bit"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "host"
                  }
                ],
                "callee": "scsi_remove_host"
              }
            }
          },
          {
            "label": "out_iounmap:"
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "base_addr"
                      }
                    }
                  }
                ],
                "callee": "iounmap"
              }
            }
          },
          {
            "label": "out_release_mem_region:"
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "pdev"
                  }
                ],
                "callee": "pci_release_regions"
              }
            }
          },
          {
            "label": "out_free_device_extension:"
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "twa_free_device_extension"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "host"
                  }
                ],
                "callee": "scsi_host_put"
              }
            }
          },
          {
            "label": "out_disable_device:"
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "pdev"
                  }
                ],
                "callee": "pci_disable_device"
              }
            }
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_remove",
        "parameterList": [
          {
            "parameterType": "struct pci_dev *",
            "parameter": "pdev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "host",
                "identifierType": "struct Scsi_Host *",
                "initialValue": "pci_get_drvdata(pdev)"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_dev",
                "identifierType": "TW_Device_Extension *",
                "initialValue": "(TW_Device_Extension *)host->hostdata"
              }
            ]
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "host"
                      }
                    }
                  }
                ],
                "callee": "scsi_remove_host"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "twa_major"
                          },
                          {
                            "constant": "\"twa\""
                          }
                        ],
                        "callee": "unregister_chrdev"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "twa_major"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "constant": "1"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  }
                ]
              },
              "condition": {
                "RelationalExpression": {
                  "leftOperand": {
                    "identifier": "twa_major"
                  },
                  "rightOperand": {
                    "constant": "0"
                  },
                  "operator": ">="
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "__twa_shutdown"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "pdev"
                      }
                    ],
                    "callee": "pci_disable_msi"
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "TW_USING_MSI"
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "flags"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "callee": "test_bit"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "base_addr"
                      }
                    }
                  }
                ],
                "callee": "iounmap"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "pdev"
                  }
                ],
                "callee": "pci_release_regions"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "twa_free_device_extension"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "host"
                      }
                    }
                  }
                ],
                "callee": "scsi_host_put"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "pdev"
                  }
                ],
                "callee": "pci_disable_device"
              }
            }
          },
          {
            "expressionStatement": {
              "postIncDecOperationExpression": {
                "operand": {
                  "identifier": "twa_device_extension_count"
                },
                "operator": "--"
              }
            }
          }
        ],
        "returnType": "static void"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_suspend",
        "parameterList": [
          {
            "parameterType": "struct device *",
            "parameter": "dev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "pdev",
                "identifierType": "struct pci_dev *",
                "initialValue": "to_pci_dev(dev)"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "host",
                "identifierType": "struct Scsi_Host *",
                "initialValue": "pci_get_drvdata(pdev)"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_dev",
                "identifierType": "TW_Device_Extension *",
                "initialValue": "(TW_Device_Extension *)host->hostdata"
              }
            ]
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "expressionStatement": {}
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "TW_DISABLE_INTERRUPTS"
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryExpression": {
                      "operand": {
                        "identifier": "irq"
                      }
                    }
                  },
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "free_irq"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "pdev"
                      }
                    ],
                    "callee": "pci_disable_msi"
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "TW_USING_MSI"
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "flags"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "callee": "test_bit"
                }
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x38"
                          },
                          {
                            "constant": "\"Connection shutdown failed during suspend\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "constant": "1"
                    },
                    {
                      "constant": "0"
                    },
                    {
                      "constant": "0"
                    },
                    {
                      "constant": "0"
                    },
                    {
                      "constant": "0"
                    },
                    {
                      "constant": "0"
                    },
                    {
                      "identifier": "NULL"
                    },
                    {
                      "identifier": "NULL"
                    },
                    {
                      "identifier": "NULL"
                    },
                    {
                      "identifier": "NULL"
                    },
                    {
                      "identifier": "NULL"
                    }
                  ],
                  "callee": "twa_initconnection"
                }
              },
              "elseBlock": {
                "compoundStatement": [
                  {},
                  {},
                  {},
                  {},
                  {},
                  {
                    "expressionStatement": {}
                  }
                ]
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "TW_CLEAR_ALL_INTERRUPTS"
              }
            }
          },
          {
            "returnStatement": {
              "constant": "0"
            }
          }
        ],
        "returnType": "static int __maybe_unused"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_resume",
        "parameterList": [
          {
            "parameterType": "struct device *",
            "parameter": "dev"
          }
        ],
        "functionBody": [
          {
            "identifierDeclStatement": [
              {
                "identifier": "retval",
                "identifierType": "int",
                "initialValue": "0"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "pdev",
                "identifierType": "struct pci_dev *",
                "initialValue": "to_pci_dev(dev)"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "host",
                "identifierType": "struct Scsi_Host *",
                "initialValue": "pci_get_drvdata(pdev)"
              }
            ]
          },
          {
            "identifierDeclStatement": [
              {
                "identifier": "tw_dev",
                "identifierType": "TW_Device_Extension *",
                "initialValue": "(TW_Device_Extension *)host->hostdata"
              }
            ]
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "expressionStatement": {}
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "pdev"
                  }
                ],
                "callee": "pci_try_set_mwi"
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryOperationExpression": {
                          "operator": "&",
                          "operand": {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "dev"
                              }
                            }
                          }
                        }
                      },
                      {
                        "callExpression": {
                          "argumentList": [
                            {
                              "constant": "64"
                            }
                          ],
                          "callee": "DMA_BIT_MASK"
                        }
                      }
                    ],
                    "callee": "dma_set_mask_and_coherent"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "AssignmentExpression": {
                    "leftOperand": {
                      "identifier": "retval"
                    },
                    "rightOperand": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryOperationExpression": {
                              "operator": "&",
                              "operand": {
                                "unaryExpression": {
                                  "operand": {
                                    "identifier": "dev"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "callExpression": {
                              "argumentList": [
                                {
                                  "constant": "32"
                                }
                              ],
                              "callee": "DMA_BIT_MASK"
                            }
                          }
                        ],
                        "callee": "dma_set_mask_and_coherent"
                      }
                    },
                    "operator": "="
                  }
                }
              },
              "condition": {
                "identifier": "retval"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "identifier": "host"
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x40"
                          },
                          {
                            "constant": "\"Failed to set dma mask during resume\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "identifier": "ENODEV"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_disable_device"
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "retval"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "identifier": "ENODEV"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_disable_device"
                    }
                  }
                ]
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "tw_dev"
                    },
                    {
                      "constant": "0"
                    }
                  ],
                  "callee": "twa_reset_sequence"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "AssignmentExpression": {
                "leftOperand": {
                  "identifier": "retval"
                },
                "rightOperand": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "unaryExpression": {
                          "operand": {
                            "identifier": "irq"
                          }
                        }
                      },
                      {
                        "identifier": "twa_interrupt"
                      },
                      {
                        "identifier": "IRQF_SHARED"
                      },
                      {
                        "constant": "\"3w-9xxx\""
                      },
                      {
                        "identifier": "tw_dev"
                      }
                    ],
                    "callee": "request_irq"
                  }
                },
                "operator": "="
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "compoundStatement": [
                  {
                    "expressionStatement": {
                      "callExpression": {
                        "argumentList": [
                          {
                            "unaryExpression": {
                              "operand": {
                                "identifier": "host"
                              }
                            }
                          },
                          {
                            "identifier": "TW_DRIVER"
                          },
                          {
                            "constant": "0x42"
                          },
                          {
                            "constant": "\"Error requesting IRQ during resume\""
                          }
                        ],
                        "callee": "TW_PRINTK"
                      }
                    }
                  },
                  {
                    "expressionStatement": {
                      "AssignmentExpression": {
                        "leftOperand": {
                          "identifier": "retval"
                        },
                        "rightOperand": {
                          "unaryOperationExpression": {
                            "operator": "-",
                            "operand": {
                              "identifier": "ENODEV"
                            }
                          }
                        },
                        "operator": "="
                      }
                    }
                  },
                  {
                    "gotoStatement": {
                      "goto": "out_disable_device"
                    }
                  }
                ]
              },
              "condition": {
                "identifier": "retval"
              }
            }
          },
          {
            "ifStatement": {
              "ifBlock": {
                "expressionStatement": {
                  "callExpression": {
                    "argumentList": [
                      {
                        "identifier": "pdev"
                      }
                    ],
                    "callee": "pci_enable_msi"
                  }
                }
              },
              "condition": {
                "callExpression": {
                  "argumentList": [
                    {
                      "identifier": "TW_USING_MSI"
                    },
                    {
                      "unaryOperationExpression": {
                        "operator": "&",
                        "operand": {
                          "unaryExpression": {
                            "operand": {
                              "identifier": "flags"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "callee": "test_bit"
                }
              }
            }
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "tw_dev"
                  }
                ],
                "callee": "TW_ENABLE_AND_CLEAR_INTERRUPTS"
              }
            }
          },
          {},
          {},
          {},
          {},
          {},
          {
            "expressionStatement": {}
          },
          {
            "returnStatement": {
              "constant": "0"
            }
          },
          {
            "label": "out_disable_device:"
          },
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "identifier": "host"
                  }
                ],
                "callee": "scsi_remove_host"
              }
            }
          },
          {
            "returnStatement": {
              "identifier": "retval"
            }
          }
        ],
        "returnType": "static int __maybe_unused"
      }
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "twa_pci_tbl[]",
          "identifierType": "struct pci_device_id"
        }
      ]
    },
    {
      "functionDef": {
        "functionName": "MODULE_DEVICE_TABLE"
      }
    },
    {
      "functionDef": {
        "functionName": "SIMPLE_DEV_PM_OPS"
      }
    },
    {
      "identifierDeclStatement": [
        {
          "identifier": "twa_driver",
          "identifierType": "struct pci_driver"
        }
      ]
    },
    {
      "functionDef": {
        "functionName": "twa_init",
        "parameterList": [
          {
            "parameterType": "void",
            "parameter": "<anonymous>"
          }
        ],
        "functionBody": [
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "expressionStatement": {}
          },
          {
            "returnStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "twa_driver"
                      }
                    }
                  }
                ],
                "callee": "pci_register_driver"
              }
            }
          }
        ],
        "returnType": "static int __init"
      }
    },
    {
      "functionDef": {
        "functionName": "twa_exit",
        "parameterList": [
          {
            "parameterType": "void",
            "parameter": "<anonymous>"
          }
        ],
        "functionBody": [
          {
            "expressionStatement": {
              "callExpression": {
                "argumentList": [
                  {
                    "unaryOperationExpression": {
                      "operator": "&",
                      "operand": {
                        "identifier": "twa_driver"
                      }
                    }
                  }
                ],
                "callee": "pci_unregister_driver"
              }
            }
          }
        ],
        "returnType": "static void __exit"
      }
    },
    {
      "functionDef": {
        "functionName": "module_init"
      }
    },
    {
      "functionDef": {
        "functionName": "module_exit"
      }
    }
  ]
}
